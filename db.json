{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","path":"css/barrager.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/dark.css","path":"css/dark.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","path":"css/gallery.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","path":"css/indexcover.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/post.css","path":"css/post.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/reward.css","path":"css/reward.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","path":"js/crypto-js.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","path":"js/gallery-encrypt.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","path":"libs/aplayer/Meting.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","path":"libs/fancybox/fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","path":"libs/fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","path":"libs/jquery/jquery-3.6.0.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","path":"libs/justifiedGallery/justifiedGallery.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","path":"libs/justifiedGallery/justifiedGallery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","path":"libs/mermaid/mermaid.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","path":"libs/mermaid/mermaid.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","path":"libs/mermaid/mermaid.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","path":"libs/others/TencentCaptcha.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","path":"libs/others/sakura-half.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","path":"libs/others/sakura-reduce.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","path":"libs/others/sakura-small.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","path":"libs/others/sakura.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","path":"libs/others/star.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","path":"libs/prism/prism.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","path":"libs/prism/prism.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","path":"libs/typed/typed.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","path":"libs/waline/Waline.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","path":"medias/images/01.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","path":"medias/images/02.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","path":"medias/images/03.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","path":"libs/awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","path":"libs/awesome/webfonts/fa-v4compatibility.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","path":"libs/awesome/webfonts/fa-v4compatibility.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/DNS-server.md","hash":"71fd28b370ad640e9ea1417ebb7940dca08f70de","modified":1704425359691},{"_id":"source/_posts/Failed-to-Post-Blog.md","hash":"7db27c6df8e929fe5739afe15254b738baaef6d5","modified":1701443560006},{"_id":"source/_posts/The-First-time-using-Helm-Charts.md","hash":"472f785c2fe0bf64b89eac50669700ec6c6a5e75","modified":1704421927317},{"_id":"source/_posts/Multiple-Domians-in-OpenLDAP-Use-Case.md","hash":"109ee8133234bb08fce323ce8956b990493b7638","modified":1703510870373},{"_id":"source/_posts/deploy-hexo.md","hash":"8047cb6ded9a747d4cb3844da5412c494cfda691","modified":1699880823020},{"_id":"source/_posts/homelab-pc.md","hash":"ff9e533b56985f2d92727b0860b85180dffbd945","modified":1701443532763},{"_id":"source/_posts/At-the-end-of-2023.md","hash":"ac7a1ca2aeea824b70d52bdb25f00d637258e23e","modified":1704208967851},{"_id":"source/_posts/instant-box.md","hash":"e6791997225fbf7749c628db38fc21a43c7a9db2","modified":1704209927124},{"_id":"source/_posts/这是一封信.md","hash":"0eee0b5da5bb8d3c47613742090847d0448afa08","modified":1704101355795},{"_id":"source/_data/friends.json","hash":"04ea2cc6260af85d16b00a3f7c5a6c83d61d0421","modified":1697295071389},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1697295071389},{"_id":"source/about/index.md","hash":"c5fb0a7d39856f05dc82f9e3540a7629067161bb","modified":1697295071389},{"_id":"source/categories/index.md","hash":"cbed6c3c8cbdbb293e36ad373595879611cd2d3b","modified":1697295071389},{"_id":"source/contact/index.md","hash":"adc8dfbc68c1c15aae44c6ebe6981f93c452664e","modified":1697295071389},{"_id":"source/tags/index.md","hash":"ff4acd728cd336417c119f39582dc57a1df583f6","modified":1697295071389},{"_id":"source/friends/index.md","hash":"7442003203b8a461d205694fcddee9bbe4700d8e","modified":1697295071389},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"e0ecf288c534613fc37c957a9886e95ebdd015db","modified":1697301247547},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"8d7f91ab85245e7c622c6b73ca2773570eeeeffa","modified":1703511194459},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"2ed57824573d7bed71e56023ed92500734a8886d","modified":1697295838004},{"_id":"themes/hexo-theme-matery/README.md","hash":"9d98fe84a60bd6b222740f238d83f0999eaa77a3","modified":1697379285795},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"497c6645c55dce9f190ec7625de76083262e1707","modified":1697379285796},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1697295838003},{"_id":"themes/hexo-theme-matery/languages/jp.yml","hash":"a811cec0b6d91f405e8c7386a57039cd8c3448bb","modified":1697295838004},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a2695fdb7579a77daec7773a9bb8e71b9edbf16b","modified":1697295838004},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"36f8d3e530e8144bf80d0772284edd9b0da362fe","modified":1697295838004},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"51c06005927e8bde5b3e23353d2bf2c32ed855f3","modified":1697295838004},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"99a74316aed478efb0db823c4460ee2e660f101c","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/galleries.ejs","hash":"85b8b9e583ffa7a4ee6d0c2be4779cb2f7d91777","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"534511d9f38f281b531e24c19d9c1526cc7e5e27","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"71ef2540fa586cd0c3b1f216f59fa9ec85fc6a38","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/gallery.ejs","hash":"fcc7364b03329148ba4920cddb0d34d5b7410788","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"1656c2db90e24a360282d15c71144b4f14edb43d","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/movies.ejs","hash":"abce85ffdd99e787e3652fbd466447e032b626bd","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"94c2fee85418370ca8f7d54050c852267e924eb7","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"3d4f40121dbb75bcb71837c35ec5ee17cdffae31","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/musics.ejs","hash":"9ac6053e09ed2c8a844d7e93c3fdce4ded95248a","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1697295838004},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"12350c0d366141b5c27792bb414d4adc303b0a9f","modified":1697295838005},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"42e062af5524c84f6246cc3988a090a722b72bf1","modified":1698484642136},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"c7d922da21cfe970634ab912b958d7d1e9f06f9e","modified":1697301247547},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-video.ejs","hash":"963422029eb5158eb5f5bc97ce19b66e5399db97","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/codeblock.ejs","hash":"086a06863a0f88888707409936aa06a09ff50e3a","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/cover-style.ejs","hash":"4288b9d91b2d71404e7a509a81a5d7f7a4b8b5e8","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"e8958bc066b3c2fcd4152604cc12f30020106848","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"f5c00f21af281a09dc7de89e82a3b442903451a7","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1697295838005},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"e8b44268b59add61af44b7338527523d10d9d742","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/main-style.ejs","hash":"8819b334509682355a5e53fa0f307f90166d175c","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"52de0cf3ce13a3477b0a1659d2b8aa41db1f622d","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"0953217f4e19a51dfc5a0ffc7d066406df18060b","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"70fccaea75ce48364222c4e5de0496e556b01cb1","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"6261f8191c3c1159f63ec7f9293bb93f7d2a3dbb","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/reward-style.ejs","hash":"8256ed940c0185ccf01890d59fb4262f196e2323","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_partial/post-style.ejs","hash":"243c3ba783553f25955d524fd47a5bb59a5e732b","modified":1697295838006},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"236668e72b01db91f5bf29eec4c79e34e2746d98","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"21d69b74e923183933baedfc1c5d9c17b81cc68a","modified":1697301659735},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"2ac48566bb806336f1e5bc5c66fc816a580d63c3","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_partial/waline.ejs","hash":"2658cb73ef984a30b248351d7858ee15596a6e7a","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_widget/day-night.ejs","hash":"ff21dd5e49e1fc9a9ab8c7d164fd4b32a8265ea2","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"f9cb8c82b9d2a7cdb644e10718f1cdeb9400414c","modified":1697295838007},{"_id":"themes/hexo-theme-matery/layout/_widget/musics.ejs","hash":"bfebdf0731fee0cd4fd51efa0da1d0184565ae25","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"bb25a6fa51eb5ebfba687b2cbadff6c7a4b4bfef","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1697295838008},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1697295838008},{"_id":"themes/hexo-theme-matery/scripts/tags/button.js","hash":"ab02fb2da648f4f7afa0c2381aaca334bdeb54e6","modified":1697295838009},{"_id":"themes/hexo-theme-matery/scripts/tags/index.js","hash":"223a31ea3aa4a689d45a033c7d680cb4fff8d8af","modified":1697295838009},{"_id":"themes/hexo-theme-matery/scripts/tags/note.js","hash":"84b0122b92342834540f69b19600cb54c50ab69e","modified":1697295838009},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1697295838008},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1697295838010},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1697295838008},{"_id":"themes/hexo-theme-matery/source/css/dark.css","hash":"be4ef08494f3c965d513d9413685c0e723f671cd","modified":1697295838010},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1697295838010},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","hash":"015097ca1271dd44e6d663332587dbe58ae2ade8","modified":1697295838010},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1697295838010},{"_id":"themes/hexo-theme-matery/source/css/indexcover.css","hash":"00f4f498ae8514022004f2281cab8ff304cd0f37","modified":1697295838010},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1697295838010},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1697295838010},{"_id":"themes/hexo-theme-matery/source/css/post.css","hash":"1ebbf9ddee7db4b3039d8d4e25f2605072ab6e24","modified":1697295838010},{"_id":"themes/hexo-theme-matery/source/css/reward.css","hash":"56f8d21c3bb1dc57c762a63d13b08161d8260738","modified":1697295838010},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","hash":"f611a391d62da17b71f75577a72ad246ef6c5a71","modified":1697295838013},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"5e5ec78f8ab229d54786ef2e0ea2864af2dc459f","modified":1697295838008},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1697295838013},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"aa957ea8cf6787f0ed6095fedc6cb9d7d1bf3522","modified":1697295838013},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1697295838013},{"_id":"themes/hexo-theme-matery/source/js/tw_cn.js","hash":"29157cdfa87aec28e56d3d5717d486bf4de07db6","modified":1697295838013},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"d5436e7e7f8c55027d555f1aed8f568b32c82331","modified":1697468296485},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1697295838091},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1697295838101},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1697295838013},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1697295838084},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1697295838013},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1697295838014},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1697295838014},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1697295838014},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"42e062af5524c84f6246cc3988a090a722b72bf1","modified":1697302963941},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1697295838013},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1697295838024},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1697295838024},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1697295838024},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1697295838024},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1697295838024},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1697295838024},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"e44f03f2396a17923cda5cd57fa90f62474de42d","modified":1697301247814},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1697295838024},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1697295838024},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/jquery.fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1697295838033},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1697295838033},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1697295838024},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1697295838038},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1697295838038},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1697295838037},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.css","hash":"b9323091d50785ad6c617d7cae76a41a89eb44b3","modified":1697295838039},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1697295838038},{"_id":"themes/hexo-theme-matery/source/libs/justifiedGallery/justifiedGallery.min.js","hash":"6f5433cc9f19ce2403e903e5d01a4c7b38f0969b","modified":1697295838039},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1697295838040},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.css","hash":"1dbcd9312e57f2a0b569451d0028d88316614481","modified":1697295838063},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1697295838070},{"_id":"themes/hexo-theme-matery/source/libs/others/TencentCaptcha.js","hash":"fb4d34c48567b7b992aac1c75f0d24c3eb2cc3fa","modified":1697295838070},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1697295838070},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1697295838071},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1697295838071},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1697295838071},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1697295838070},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","hash":"b6ebe8f040c84f067300996a5f377846f01605fa","modified":1697295838071},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1697295838071},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.css","hash":"ed3896649670cf142e514685da2b060cca5fd43a","modified":1697295838071},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1697295838075},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1697295838071},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"39055053a477e7d54b46cfb46591f84cc3818eeb","modified":1697295838078},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1697295838078},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1697295838080},{"_id":"themes/hexo-theme-matery/source/libs/typed/typed.js","hash":"eaf2798298790ec3fad17f6c68b5d3b02dfd069c","modified":1697295838081},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1697295838090},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1697295838090},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1697295838090},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1697295838091},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1697295838092},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1697295838093},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1697295838094},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1697295838096},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1697295838094},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1697295838098},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1697295838098},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1697295838098},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1697295838099},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1697295838099},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1697295838100},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1697295838100},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1697295838108},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1697295838108},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"9b26d745a1e69b23d71b7ea36d5de1209c997901","modified":1697295838018},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.ttf","hash":"3fc15c8154f8bd2d7bd1dfe55ae5ab1c33e5e40f","modified":1697295838023},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-v4compatibility.woff2","hash":"37ab2a6a0810d5a6c10a355fe1d7af0042bd6a2a","modified":1697295838023},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f7a09bcbd996fd634045d4e79b6504c945730686","modified":1697295838018},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"49693fa946534a56d7e5d4274e1ce55b05d782c3","modified":1697295838039},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"509c56c80732a1cd80df8f2b4b0ac1128c31999f","modified":1697295838039},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"7873d80020ae04955bb57521bd249a6974d1180f","modified":1697295838039},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"04f09ad797ced119d6608909d06e500f16a03bbb","modified":1697295838039},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1697295838039},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1697295838040},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1697295838040},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1697295838040},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"aab2633f69581c2e26e22a23712f1501d7fcec18","modified":1697295838040},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1697295838075},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1697295838078},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1697295838076},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1697295838078},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1697295838078},{"_id":"themes/hexo-theme-matery/source/libs/fancybox/fancybox.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1697295838033},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery-3.6.0.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1697295838039},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1697295838038},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1697379285881},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1697379285884},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1697295838091},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1697295838093},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1697295838094},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1697295838095},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1697295838092},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1697295838095},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1697295838095},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1697295838093},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1697295838098},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1697295838099},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1697295838100},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1697295838101},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"e219af1e3bbc2219359d3d0916e263b279c4abfd","modified":1697295838018},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","hash":"0ae47fa834fb55de7b50c79021aeabecfae50c9c","modified":1697295838016},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1697295838078},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1697295838091},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"0dd260503b7bd03cf8a2b1192d3cac54037d112c","modified":1697301247814},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"d1328a7872827bc63e7cc4d33745397681accda8","modified":1697295838043},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"8eee32acbfac59744b4053a7290f503ef623d3ab","modified":1697295838044},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"d081a412c63411a75a3a880ddece65335d1c3ee8","modified":1697295838082},{"_id":"themes/hexo-theme-matery/source/libs/waline/Waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1697295838084},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1697379285883},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1697379285886},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"8d63fa8b0f60a50b07ac0f7e751f6f5e02ecdc44","modified":1697295838015},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"fa5745d421c0fc90928626be98e9f8cf7580b327","modified":1697295838017},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"1979128e8ba1517d85f5e4ee505abf486c51557c","modified":1697295838023},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1697295838078},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1697295838013},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"db56ef6acb789da00d39bd6b97c1b09c2d429195","modified":1697295838083},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1697379285885},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"e3339400ef6214cfa077d003daed2bfa659e2956","modified":1697295838023},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"ef3df94e37942d87ab937c8e34e3c20b162324a3","modified":1697301247851},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.min.js","hash":"05870d7dd627c6ef5ffff5c607bc5a4ff9c84afd","modified":1697301249406},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1697295838031},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1697295838037},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.min.js","hash":"6bee48c26c32b90f50519f125890fcbb04779da6","modified":1697295838070},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"e3ec7f8488f1fcbd91e0e31d1430a0e470db2496","modified":1697466945853},{"_id":"themes/hexo-theme-matery/source/libs/mermaid/mermaid.js","hash":"a7933bef8aba190825ba7716497209187ac1de5d","modified":1697295838063},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","hash":"18f26efc76f6ab3b7a9b94238db1183e8faf9a39","modified":1697466861335},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"0fbb9f5015e7806dc9c39d2d004c01b583966857","modified":1697466972689},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","hash":"fce7a8cbf6c61c4d9e68dc87881570be14cdb1de","modified":1697466869624},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","hash":"6fdb986b1d31d6644c59b1a676a4c2b8270ded94","modified":1697466877546}],"Category":[{"name":"summary","_id":"clrhtjaih0007ltm7az7t69bc"},{"name":"ops","_id":"clrhtjaiw000cltm77qewamcs"},{"name":"Kubernetes","_id":"clrhtjajy000rltm7d0cq58ev"},{"name":"hexo","_id":"clrhtjak0000xltm7btb3e29x"},{"name":"Hardware","_id":"clrhtjak20011ltm78ld86ye7"},{"name":"Personal","_id":"clrhtjak40015ltm744mh9o34"}],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}],"Page":[{"title":"about","date":"2023-10-14T12:36:58.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-10-14 20:36:58\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2023-10-14T14:51:11.389Z","path":"about/index.html","comments":1,"_id":"clrhtja4g0000ltm701t6b0a3","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"categories","date":"2023-10-07T15:14:34.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-10-07 23:14:34\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2023-10-14T14:51:11.389Z","path":"categories/index.html","comments":1,"_id":"clrhtja4q0001ltm7bjrtdpl9","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"contact","date":"2023-10-14T12:43:39.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2023-10-14 20:43:39\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2023-10-14T14:51:11.389Z","path":"contact/index.html","comments":1,"_id":"clrhtja500002ltm7aqzod0x3","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"friends","date":"2023-10-08T12:50:13.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2023-10-08 20:50:13\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2023-10-14T14:51:11.389Z","path":"friends/index.html","comments":1,"_id":"clrhtja5i0003ltm70femf3ve","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"tags","date":"2023-10-08T12:48:21.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-10-08 20:48:21\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2023-10-14T14:51:11.389Z","path":"tags/index.html","comments":1,"_id":"clrhtja5j0004ltm71g7u36re","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"At the end of 2023","date":"2024-01-01T08:56:20.000Z","toc":true,"summary":"2023记录","_content":"# 2023 的结束\n\n1. 失：2023-10-2 和邹漂亮分开了，2018-1-13 我们在一起。很想念，很亏欠，很遗憾，自己不够优秀，落下太远了。她确实值得更优秀的人生。\n2. 得：一份工作和一个决定。 \n3. 之后的话就等到薪酬到手有1w再考虑下一段感情吧，换房之后再考虑结婚吧，存款在10w以上再考虑生小孩吧。\n------\n\n|1月|结束k8s基础部分|\n|2月|monitor|\n|3月|cicd|\n|4月|简历投递并约面试|\n|5月|主要找工作|\n|6月|找到工作！！！|\n|1-6|如果辞职就一定要先拿到驾照|","source":"_posts/At-the-end-of-2023.md","raw":"---\ntitle: At the end of 2023\ndate: 2024-01-01 16:56:20\ntags:\n  - personal\ncategories:\n  - summary\ntoc: true\nsummary: 2023记录\n---\n# 2023 的结束\n\n1. 失：2023-10-2 和邹漂亮分开了，2018-1-13 我们在一起。很想念，很亏欠，很遗憾，自己不够优秀，落下太远了。她确实值得更优秀的人生。\n2. 得：一份工作和一个决定。 \n3. 之后的话就等到薪酬到手有1w再考虑下一段感情吧，换房之后再考虑结婚吧，存款在10w以上再考虑生小孩吧。\n------\n\n|1月|结束k8s基础部分|\n|2月|monitor|\n|3月|cicd|\n|4月|简历投递并约面试|\n|5月|主要找工作|\n|6月|找到工作！！！|\n|1-6|如果辞职就一定要先拿到驾照|","slug":"At-the-end-of-2023","published":1,"updated":"2024-01-02T15:22:47.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrhtjafi0005ltm7gjfq75b3","content":"<h1 id=\"2023-的结束\"><a href=\"#2023-的结束\" class=\"headerlink\" title=\"2023 的结束\"></a>2023 的结束</h1><ol>\n<li>失：2023-10-2 和邹漂亮分开了，2018-1-13 我们在一起。很想念，很亏欠，很遗憾，自己不够优秀，落下太远了。她确实值得更优秀的人生。</li>\n<li>得：一份工作和一个决定。 </li>\n<li>之后的话就等到薪酬到手有1w再考虑下一段感情吧，换房之后再考虑结婚吧，存款在10w以上再考虑生小孩吧。</li>\n</ol>\n<hr>\n<p>|1月|结束k8s基础部分|<br>|2月|monitor|<br>|3月|cicd|<br>|4月|简历投递并约面试|<br>|5月|主要找工作|<br>|6月|找到工作！！！|<br>|1-6|如果辞职就一定要先拿到驾照|</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"2023-的结束\"><a href=\"#2023-的结束\" class=\"headerlink\" title=\"2023 的结束\"></a>2023 的结束</h1><ol>\n<li>失：2023-10-2 和邹漂亮分开了，2018-1-13 我们在一起。很想念，很亏欠，很遗憾，自己不够优秀，落下太远了。她确实值得更优秀的人生。</li>\n<li>得：一份工作和一个决定。 </li>\n<li>之后的话就等到薪酬到手有1w再考虑下一段感情吧，换房之后再考虑结婚吧，存款在10w以上再考虑生小孩吧。</li>\n</ol>\n<hr>\n<p>|1月|结束k8s基础部分|<br>|2月|monitor|<br>|3月|cicd|<br>|4月|简历投递并约面试|<br>|5月|主要找工作|<br>|6月|找到工作！！！|<br>|1-6|如果辞职就一定要先拿到驾照|</p>\n"},{"title":"DNS server","date":"2023-12-25T13:37:15.000Z","summary":"记录内网 DNS 的搭建，比较重要的是视图功能的使用、DNS Over Https、DNS Over TLS.","_content":"# 一、DNS 主服务器  \n- 手动更新源，并安装bind9.18  \n```\nsudo add-apt-repository ppa:isc/bind\napt update\nsudo apt install -y  bind9 bind9-utils\n```\n## 1.1 相关文件  \n[references](https://cshihong.github.io/2018/10/15/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/)  \n`/etc/bind/named.conf`:  主配置文件，包含 bind 服务器的全局设置和引用其他配置文件的指令  \n`/etc/bind/named.conf.default-zones`:  定义了默认的区域（zone），如  localhost 、反向解析等  \n`/etc/bind/named.conf.local`:  用于配置本地区域（zone）和其他定制区域的文件  \n`/etc/bind/named.conf.options`:  包含bind服务器的全局选项设置，如监听地址、转发器等  \n\n## 1.2 配置  \n### 1.2.1  解析方式  \n\n   |方式|作用|\n   |:--:|:--:|\n   |正向|域名-->IP|\n   |反向|IP-->域名|\n\n### 1.2.2  DNS记录类型  \n- A 记录：将域名指向一个 ipv4  \n- AAAA 记录：将主机名解析到一个指定的 IPv6  \n- CNAME 记录：别名解析，指将不同的域名都转到一个域名记录上，由这个域名记录统一解析管理，即当前解析的域名是另一个域名的跳转  \n- NS 记录：域名服务记录，用来指定该域名由哪个 DNS 服务器来解析，一般设置为多个，一个为主，其余为辅，且只能写域名的形式  \n- PTR 记录：反向解析，主要用于 IP 解析为 FQDN  \n- MX 记录： 邮件交换记录  \n- TXT 记录： 指某个主机名或域名的说明，通常用来做SPF记录（反垃圾邮件）  \n\n### 1.2.3  目录结构（需要修改部分）   \n/etc/bind  \n├── example  \n│   ├── db.zones  \n│   └── reverse.zones  \n├── named.conf  \n└──named.conf.options   \n### 1.2.4  配置文件  \n- /etc/bind/named.conf  \n```\ninclude \"/etc/bind/named.conf.options\";\ninclude \"/etc/bind/named.conf.local\";\n# include \"/etc/bind/named.conf.default-zones\";       # 在视图使用时注释掉的\ninclude \"/etc/bind/example/sec-trust-anchors.conf\";     #  在 dnssec 功能中需要做的引入\n```\n- /etc/bind/named.conf.options  \n\n```bash\ntls doh {\n   key-file \"/etc/bind/example/cert/key.pem\";\n   cert-file \"/etc/bind/example/cert/ca.pem\";\n};\n\nhttp dns-over-https {\n    endpoints {\"/dns-query\";};\n};\n\noptions {\n        directory \"/var/cache/bind\";\n        listen-on port 53 { localhost; };\n        listen-on port 443 tls doh http dns-over-https  { localhost; };     # 配合上述 tls  http 开启 DOH\n        recursion true;                # 否则会出现不能解析 wan 网域名\n        forwarders {\n            8.8.8.8;\n            223.5.5.5;\n        };\n        forward  first;\n        version  \"hiden version\";\n        allow-transfer { 10.13.3.107; };\n        allow-query {\n          example;\n          company;\n        };\n        auth-nxdomain true;\n        dnssec-validation false;\n};\n\nacl \"example\" {\n    10.10.6.0/24;\n    10.13.3.0/24;\n};\n\nacl \"company\" {\n    10.10.6.0/24;\n};\n\nview \"example\" {\n  match-clients { example; };\n  zone \"example.net\" IN  {\n       type master;\n       file \"/etc/bind/example/example.db.zones\";\n  };\n  zone \"13.10.in-addr.arpa.\" IN  {\n       type master;\n       file \"/etc/bind/example/example.reverse.zones\";\n  };\n};\n\nview \"company\" {\n  match-clients { company; };\n  zone \"company.com\" IN  {\n       type master;\n       file \"/etc/bind/example/company.db.zones\";\n  };\n};\n```\n\n视图使用主要参考本章[智能视图使用](##)\n\n- /etc/bind/example/example.db.zones  \n\n```\n$TTL 10M\n@       IN      SOA     example.top. admin.example.top. (\n                                   1   ; serial\n                                1200   ; refresh \n                                900    ; retry \n                                900    ; expire\n                               1200 )  ; minimum \n@        IN      NS      nameserver\nnameserver   IN  A       10.13.3.107\nnameserver  IN  A       10.13.3.109    \ntest         IN  A       10.13.3.109\nk8s          IN  A       10.13.3.110\n```\n\n- 反向区域解析文件 /etc/bind/example/example.reverse.zones  \n```\n$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n)\n       IN      NS      nameserver.      # 不能缺省这个\".\"\n\n107.3  IN    PTR    ldap.example.net.\n```\n\n- 测试  \n```\ndig   目标域名   @namserver    +short\ndig   目标ip   -x   +short\nnslookup\n```\n\n### 1.2.5  参数介绍  \n\nallow-update { none; };  定义允许执行动态 DNS 更新的客户端  \nallow-transfer { xx ; } 允许 xx 地址从您的 DNS 服务器复制数据  \nforward first; 优先选择转发到的 DNS 服务器  \nforwarders {}; 转发器，转发到另外的 DNS  \nrecursion yes; 启用递归查询  \ndnssec-validation no; 禁用 BIND9 服务器上的 DNSSEC 验证，此时返回的数据或许有准确度的问题  \nauth-nxdomain no; 符合 RFC1035  \n\n1. Refresh（刷新）：Refresh 指定了 DNS 服务器应从主服务器获取区域数据的频率。最佳的 Refresh 时间取决于你的特定需求，通常在几小时到一天之间。较短的 Refresh 时间可以更快地更新数据，但会增加主服务器的负载。  \n2. Retry（重试）：Retry 指定了 DNS 服务器在未能联系到主服务器时应进行的重试间隔。最佳的 Retry 时间通常在几分钟到一小时之间，取决于网络的可靠性和延迟。较短的 Retry 时间可以更快地恢复到主服务器，但会增加 DNS 查询负载。  \n3. Expire（过期）：Expire 指定了区域数据在主服务器不可用时的最大存储时间。最佳的 Expire 时间通常在几天到一周之间。较短的 Expire 时间可以更快地更新过期的数据，但会增加 DNS 查询的负载。  \n4. Minimum TTL（最小生存时间）：Minimum TTL 指定了 DNS 解析器或缓存服务器应保留解析结果的最小时间。最佳的 Minimum TTL 时间取决于你的特定需求，通常在几分钟到一天之间。较短的 Minimum TTL 时间可以更快地更新解析结果，但会增加 DNS 查询的负载。  \n\n----------------\n# 二、DNS 从服务器  \n## 2.1  配置  \n```\n/etc/bind/named.conf\n\t同于 master 即可\n```\n\n- /etc/bind/named.conf.options\n```\ntls doh {\n   key-file \"/etc/bind/example/cert/key.pem\";\n   cert-file \"/etc/bind/example/cert/ca.pem\";\n};\n\nhttp dns-over-https {\n    endpoints {\"/dns-query\";};\n};\n\noptions {\n        directory \"/var/cache/bind\";\n        listen-on port 53 { localhost; };\n        listen-on port 443 tls doh http default { localhost; };\n        recursion true;\n        forwarders {\n            8.8.8.8;\n            223.5.5.5;\n        };\n        forward  first;\n        version  \"hiden version\";\n        allow-query {\n          example;\n          company;\n        };\n        auth-nxdomain true;\n        dnssec-validation false;\n};\n\nacl \"example\" {\n    10.10.6.0/24;\n    10.13.3.0/24;\n};\n\nacl \"company\" {\n    10.10.6.0/24;\n};\n\nview \"example\" {\n  match-clients { example; };\n  zone \"example.net\" IN  {\n       type slave;\n       file \"/etc/bind/example/example.db.zones.signed\";\n       masters { 10.13.3.106; };\n  };\n  zone \"3.13.10.in-addr.arpa.\" IN  {\n       type slave;\n       masters { 10.13.3.106; };\n       file \"/etc/bind/example/example.reverse.zones\";\n  };\n};\n\nview \"company\" {\n  match-clients { company; };\n  zone \"company.com\" IN  {\n       type slave;\n       masters { 10.13.3.106; };\n       file \"/etc/bind/example/company.db.zones\";\n  };\n};\n```\n\n- /etc/ apparmor.d/usr.sbin.named  设置可写。dumping master file: /etc/bind/example/tmp-80LUGLiqE4: open: permission denied  \n```\n/etc/bind/example/** rw,\n\nsystemctl reload apparmor.service\n```\n\n## 2.2 测试记录同步  \n- 修改主服务器，解析记录，测试从服务器的同步情况  \n```\n$TTL 10M\n@       IN      SOA     example.top.  admin.example.top. (\n                                   2   ; serial   [[每次需要修改版本号]]\n                                1200   ; refresh \n                                900    ; retry \n                                900    ; expire\n                               1200 )  ; minimum \n@        IN      NS      nameserver\n@        IN      NS      nameserver2              [[较版本1新增]]\nnameserver   IN  A       10.13.3.107\nnameserver2  IN  A       10.13.3.109              [[较版本1新增]]\ntest         IN  A       10.13.3.109\nk8s          IN  A       10.13.3.110\nme           IN  A       10.10.6.1               [[较版本1新增]]\n```\n\n**热加载**新增的配置，每次修改记录时，需要同步修改***版本号***，slave 才能同步成功  \n```\nsudo rndc reload     # 主服务器执行即可\ndig -t a me.example.top @10.13.3.109\n```\n\n- 当从服务器有解析文件的，解析记录仍会向主服务器请求，主服务器宕机，从服务器缓存过期之后，也仍不能加载并实施解析区域记录文件  \n- 同一个网段在多个acl下，将不能正常解析。  \n\n## 2.3 测试公网域名  \n- 此時公网域名成功解析得到的是保留ip地址，ping 域名不能成功----因为公司的 ip 做了加密  \n- 不能成功解析则无记录返回  \n\n-------------\n# 三、 安全  \n## 3.1 功能同于bind-chroot  \n```\nvi /etc/apparmor.d/usr.sbin.named\n# 检查是否存在，否则增加以下内容\n  /etc/bind/** r,\n  /var/lib/bind/** rw,\n  /var/lib/bind/ rw,\n  /var/cache/bind/** lrw,\n  /var/cache/bind/ rw,\n  /var/log/named/** rw,\n  /var/log/named/ rw,\n```\n\n## 3.2 开启DNSSEC验证，[参考](https://www.cnblogs.com/anpengapple/p/5879363.html)  \n- 作用：对域名进行签名认证，保证域名的完整性和正确性，不会被修改  \n- 在新增的 dnssec_keys 目录中生成密钥  \n```\nsudo dnssec-keygen -f KSK -a RSASHA256 -b 2048 -n ZONE example.net.\nsudo dnssec-keygen -a RSASHA256  -b 2048 -n ZONE example.net.\n\n# 查看本域应用所需的密钥文件  \nls \nKexample.net.+008+16296.key   Kexample.net.+008+16296.private   Kexample.net.+008+23579.key  Kexample.net.+008+23579.private\n```\n\n- 将前面生成的两个公钥添加到区域配置文件末尾  \n```\n$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m )  ; minimum\n\n@        IN      NS      nameserver\n\nnameserver       IN      A       10.13.3.106\nldap   IN  A   10.13.3.107\ntest   IN  A   10.13.3.105\n\n$INCLUDE  \"/etc/bind/example/dnssec_keys/Kexample.net.+008+23579.key\"\n$INCLUDE  \"/etc/bind/example/dnssec_keys/Kexample.net.+008+16296.key\"\n```\n\n- 对区域文件签名，会生成一个新的zones.sigend. 如果新增了解析记录，需要再次加密  \n```\nsudo dnssec-signzone -K /etc/bind/example/dnssec_keys/ -o example.net. /etc/bind/example/example.db.zones\n -K  指定密钥文件路径    -o  域名   路径是区域解析文件路径\n```\n\n- 改动引用解析文件路径的位置  \n```shell\nview \"example\" {\n  match-clients { example; };\n  zone \"example.net\" IN  {\n       type master;\n       file \"/etc/bind/example/example.db.zones.signed\";\n  };\n};\n```\n\n- 生成信任锚文件 /etc/bind/example/sec-trust-anchors.conf  \n- 这里面的两条内容是刚才生成的两个密钥的内容。用公钥比较方便（也就是.key的文件）。注意复制的时候去掉“IN”和“DNSKEY”这两个词，以及后面的key要加引号  \n```bash\ntrusted-keys {\n   example.net.   256 3 8  \"AwEAAb+3BGqXqE/WwDICGRONYv1w4savuaD4cJ/VRL6xGg2b54OilEWE WMzUAOw4B/sPyKZDG/XTnaW4mD756l/swRuq9kO/sktgu4ZP4onmqeFM sdMTTmxesp6Q6ebqAPNzQfKyZwqX6Iq00qGslUmxr5FSOLWjGoze8afm TxbPW6Hi7JQ85mJ+TkpUNa+ymDS4qKi87rSi8NQTDbsZ0wH7+zX1TBOP jeUI/JsxD/bu1kD97AP9u2Sd4D8U0vyN8fN4LIIKfA5vurPaWPfQIM8r I0KQueAHdNLOPjaEWcKg/rBHFWZPxIeQGM8D2VXwkdPL5fefC59wONhK ys2RMqv3DIM=\";\n  example.net.   257 3 8 \"AwEAAbZo3hpm+0+32jgrTXog3CCUTTctP3LoBx1F0nbpoEBkWN1CA//O 7fzNY08pwblkKKW/LkYiQNQEQq50ThouV9UJ+CFRf/Fju6ggIpWpNjsu 8c2+zROZdJ9d2T6JnVTYPo1Iyn8ufn0hFjPRrwdvfQKSmnI9ZRx2eRFc ZFJpqNTj2LwzqoEKrbOn4oywqTWJL1Hyjv8e/kBojy7BghKWYnTGlpha 9CSin17qUQCY+o0qMzmezq+/AbxhdJwV9KYHWzWvNZjyyjBLyxwwsV4F shgmXm2tTuW5gPrnbfzaP+R/cElzl03mtjmJ//g5wWMMV8QKemBpbNoR ajzYYhhocWk=\";\n};\n```\n\n- 引入此信任锚文件 /etc/bind/name.conf  \n```\ninclude \"/etc/bind/example/sec-trust-anchors.conf\";\n```\n\n- 重启服务  \n- 验证  \n```shell\ndig +dnssec  test.example.net  @10.13.3.106\n\n; <<>> DiG 9.16.1-Ubuntu <<>> +dnssec test.example.net @10.13.3.106\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 28767\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags: do; udp: 1232\n; COOKIE: 0d6b52d25063b09401000000655592b51d0f8f6c0b072961 (good)\n;; QUESTION SECTION:\n;test.example.net.                        IN      A\n\n;; ANSWER SECTION:\ntest.example.net.         600     IN      A       10.13.3.105\ntest.example.net.         600     IN      RRSIG   A 8 3 600 20231216022642 20231116022642 16296 example.net. iUSB+maT6y22ySZdEZHElShHCVDbmjnHez39eosniP1wqvquyadVydlT lZ3XZbUMNTV3WrZhLEjuGaVwNajvAqeY07IPCivpr+VCuIPXccONBwZE 3ZRX5B2PcGnrhMWupH+jcoT5NTy5pAEdm5JXbtJljFyJk1XxQVhanzJO /TY7YMJWWDbj3WnywkEPQyP5UYExl4Y0E3BPUX/J4xuCspTovQhqo6BM HaC3XFMG1Li9CbHcfNkUjVtdi8oQmAdM6lMqFTz5KNpIRppqhEukcD9o w9slLc1vpjDwqzO7xPls8S9WbzMeHzHNbIrPcv88MQWUAIVyqodbhOvj 8ZKlgg==\n\n;; Query time: 0 msec\n;; SERVER: 10.13.3.106#53(10.13.3.106)\n;; WHEN: Thu Nov 16 11:55:33 CST 2023\n;; MSG SIZE  rcvd: 384\n```\n\n- 问题：  \n- 配置后，每个客户端需要添加信任锚文件以作签名验证  \n- 这个签名后的zone可以被伪造，使用dig命令输出的文件修改伪造  \n\n## 3.3 创建视图管理，智能DNS  \n[参考1](https://www.cnblogs.com/anpengapple/p/5879350.html)  \n[参考2](https://www.cnblogs.com/etangyushan/p/4335521.html)  \n[参考3](http://www.hangdaowangluo.com/archives/1633)  \n[ubuntu案例](https://www.server-world.info/en/note?os=Ubuntu_20.04&p=dns&f=5)  \n- vim  /etc/bind/named.conf  \n\n```bash\ninclude \"/etc/bind/named.conf.options\";\ninclude \"/etc/bind/named.conf.local\";\n# include \"/etc/bind/named.conf.default-zones\";\n```\n\n- cat  /etc/bind/named.conf.options  \n\n```\noptions {\n        directory \"/var/cache/bind\";\n        listen-on port 53 { localhost; };\n        recursion yes;        # 允许递归才能在智能dns解析万网域名\n        forwarders {\n          223.5.5.5;\n        };\n        forward  first;\n        version  \"hiden version\";   # 隐藏版本\n        allow-transfer { 10.13.3.106; };\n        allow-query { \n          example;\n          company;\n        };\n        auth-nxdomain true;\n        dnssec-validation false; # dns安全拓展的选项\n};\n# 此处定义目标ip地址段，划分可访问的域\nacl \"example\" {\n    10.13.3.0/24;\n    10.10.6.0/24;\n};\n\nacl \"company\" {\n    10.10.6.0/24;\n};\n# 此处制定目标ip可以访问的域名的解析区域\nview \"example\" {\n  match-clients { example; };\n  include \"/etc/bind/example/example.views\";\n};\n\nview \"company\" {\n  match-clients { company; };\n  include \"/etc/bind/example/company.views\";\n};\n```\n- views 文件中指定区域解析文件，eg：\n\n```bash\nzone \"example.net\" IN {                                          # 此处域名和 zones 文件中的域名一致\n      type master;\n      file \"/etc/bind/example/example.net.zones\";\n   };\nzone \"3.13.10.in-addr.arpa.\" IN {                         # 此处格式固定，设计反向解析的ip的网络位，和zones文件中的主机位结合成为完整ip地址\n      type master;\n      file \"/etc/bind/example/example.net.reverse.zones\";\n};\n\nzone \"example.top\" IN {                              # 配置此 dns 向 10.13.3.101 这个转发器请求解析 example.top 的域名。在全局 options 配置转发没有成功，选择了此方案。\n      type forward;\n      forwarders {10.13.3.101;};\n};\n```\n\n- 正向区域解析文件  \n```\n$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n) \n@        IN      NS      nameserver\n\nnameserver       IN      A       10.13.3.106\n\nldap   IN  A   10.13.3.107\ntest   IN  A   10.13.3.105\n```\n\n- 反向区域解析文件  \n```\n$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n)\n       IN      NS      nameserver.      # 不能缺省这个\".\"\n\n107  IN    PTR    ldap.example.net.\n```\n\n- 测试   \n```\ndig   目标域名   @namserver    +short\ndig   目标ip   -x   +short\nnslookup\n```\n\n## 3.4 加密  \n[知名公共DoT/DoH加密DNS服务器](https://runtufenxiang.com/6186/)   \n[配置](https://devblog.rayonnant.net/creating-a-dot-and-doh-server-using-nginx-and-bind/)    \n[bind9 tls / https](https://dididudu998.github.io/2022/02/15/configure-doh-bind.html)网络层的问题是DoT使用853的端口，很容易被封锁，而DoH使用443端口，一般不会被封锁    \n### 3.4.1 DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）   \n```\ntls mycert {\n    cert-file \"/etc/bind/example/cert.pem\";\n    key-file \"/etc/bind/example/key.pem\";\n};\n\noptions {\n    directory \"/var/cache/bind\";\n    listen-on port 853 tls mycert { localhost; };\n    forward  first;\n    forwarders {\n            223.5.5.5;\n            120.53.53.53;\n    };\n    allow-query { 10.13.3.0/24;};\n    auth-nxdomain true;\n    allow-update { none; };\n  //  allow-transfer { 10.13.3.106; };\n    version  \"hiden version\";\n    recursion false;\n};\n\nzone \"example.net\"{\n   type master;\n   file \"/etc/bind/example/example.net.zones\";\n};\n```\n\n- 客户端修改dns地址步骤如下：  \n- /etc/resolv.conf  是软链接，指向了/run/systemd/resolve/stub-resolv.conf。直接修改内容会被覆盖，没有意义  \n- vim /etc/systemd/resolved.conf  \n```\n[Resolve]\nDNS=10.13.3.106\n[[FallbackDNS]]=\nDNSOverTLS=opportunistic  # 或者yes\n```\n- systemctl restart systemd-resolved.service   \n- mv /etc/resolv.conf   /etc/resolv.conf.bak  \n- ln -s /run/systemd/resolve/resolv.conf /etc/  \n\n### 3.4.2 问题  \n- 以上配置之后，使用特定命令发现 DOT 是成功的，例如  \n```\nresolvectl query mee.example.net\n\tmee.example.net: 10.10.6.1                       -- link: ens160\n\t\n\t-- Information acquired via protocol DNS in 1.7ms.\n\t-- Data is authenticated: no\n\ndig +tls mee.example.net\n\t; <<>> DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu <<>> +tls mee.example.net\n\t;; global options: +cmd\n\t;; Got answer:\n\t;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 52275\n\t;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\t;; WARNING: recursion requested but not available\n\t\n\t;; OPT PSEUDOSECTION:\n\t; EDNS: version: 0, flags:; udp: 1232\n\t; COOKIE: 174ae084d3aed77f01000000655474d3fbb4902501bc69cb (good)\n\t;; QUESTION SECTION:\n\t;mee.example.net.                 IN      A\n\t\n\t;; ANSWER SECTION:\n\tmee.example.net.          600     IN      A       10.10.6.1\n\t\n\t;; Query time: 0 msec\n\t;; SERVER: 10.13.3.106#853(10.13.3.106) (TLS)\n\t;; WHEN: Wed Nov 15 15:35:47 CST 2023\n\t;; MSG SIZE  rcvd: 86\n以上访问了dns服务器853端口，所以返回正常解析\n```\n\n- 普通解析会失败  \n```\ndig mee.example.net  （nslookup ssh  ping）\n\t;; communications error to 10.13.3.106#53: connection refused\n\t;; communications error to 10.13.3.106#53: connection refused\n\t;; communications error to 10.13.3.106#53: connection refused\n\t\n\t; <<>> DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu <<>> mee.example.net\n\t;; global options: +cmd\n\t;; no servers could be reached\n```\n\n- 因此，仍然开启 53 端口，二者同时可以使用，但是如果需要特定的方式使用DNSOverTLS ，那么以目前在服务器上的使用上来看，使用是没有意义的。  \n- 在服务器使用 53，在浏览器使用自建 DOH，是适宜的  \n\n### 3.4.3  DOH 加密和转发  \n- 配置  \n```shell\ntls doh {\n   key-file \"/etc/bind/example/cert/key.pem\";\n   cert-file \"/etc/bind/example/cert/ca.pem\";\n};\n\nhttp dns-over-https {\n    endpoints {\"/dns-query\";};\n};\n\noptions {\n        listen-on port 443 tls doh http default { localhost; };\n\t\t......\n};\n```\n\n- 检测  \n```shell\ndig +https  test.example.net  @10.13.3.106 A\n\n; <<>> DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu <<>> +https test.example.net @10.13.3.106 A\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 15036\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 1232\n; COOKIE: dcdab07360fe04b2010000006555c9c6572491f7e49a2f35 (good)\n;; QUESTION SECTION:\n;test.example.net.                        IN      A\n\n;; ANSWER SECTION:\ntest.example.net.         600     IN      A       10.13.3.105\n\n;; Query time: 0 msec\n;; SERVER: 10.13.3.106#443(10.13.3.106) (HTTPS)\n;; WHEN: Thu Nov 16 15:50:30 CST 2023\n;; MSG SIZE  rcvd: 87\n```\n\n- 使用  \n此时在客户端使用 DOH ，浏览器设置 use secure dns ，custom url ： https://nameserver.example.net/dns-query  \n在客户端其他程序的使用中，仍然会访问 dns 的 53 端口  \n\n## 3.5 其他安全实践  \n- 下列参考[来源](https://www.secpulse.com/archives/52634.html)  \n```\n隐藏BIND版本号\n限定哪台主机能够发起区域传输\n```\n\n```\nversion  \"hiden version\";                             #  隐藏版本信息\nallow-transfer { 221.236.9.9; };    #  指定允许某从服务器进行区域传输到该服务器，此配置一般在主服务器配置\n```\n\n# 四、web 管理以及反向代理  \n[安装 webmin工具](https://www.mmcloud.com/2863.html)  \n[使用ngingx反代](https://devpress.csdn.net/cloud/6304db5f7e6682346619cf4b.html)  \n- 路径nginx/conf.d/webmin.conf   （检查443、80端口，确认dns地址和解析记录）  \n```\nupstream webmin {\n  server 10.13.3.107:10000;\n}\n\nserver {\n  listen 80;\n  server_name webmin.example.net;\n  return 301 https://$server_name$request_uri;\n}\n\nserver {\n  server_name webmin.example.net;\n  listen 443 ssl;\n  ssl_certificate webmin/tls_ca.pem;\n  ssl_certificate_key webmin/tls_key.pem;\n\n  location / {\n    proxy_pass      https://webmin;\n    proxy_redirect  off;\n    proxy_set_header   Host             $host:$server_port;\n    proxy_set_header   X-Real-IP        $remote_addr;\n    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto \"https\";\n    proxy_connect_timeout      10;\n    proxy_send_timeout         10;\n    proxy_read_timeout         10;\n    proxy_buffer_size          128k;\n    proxy_buffers              32 32k;\n    proxy_busy_buffers_size    256k;\n    proxy_temp_file_write_size 256k;\n  }\n}\n```\n# 五、bind9.18  nginx 反向代理  \n[反向代理参考](https://www.infvie.com/ops-notes/nginx-udp-dns.html)  \n\n\n\n[def]: DNS%20Server.md#3.3%20创建视图管理，智能DNS","source":"_posts/DNS-server.md","raw":"---\ntitle: DNS server\ndate: 2023-12-25 21:37:15\ntags:\n - DNS\n - Ubuntu\ncategories:\n  - ops\nsummary: 记录内网 DNS 的搭建，比较重要的是视图功能的使用、DNS Over Https、DNS Over TLS.\n---\n# 一、DNS 主服务器  \n- 手动更新源，并安装bind9.18  \n```\nsudo add-apt-repository ppa:isc/bind\napt update\nsudo apt install -y  bind9 bind9-utils\n```\n## 1.1 相关文件  \n[references](https://cshihong.github.io/2018/10/15/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/)  \n`/etc/bind/named.conf`:  主配置文件，包含 bind 服务器的全局设置和引用其他配置文件的指令  \n`/etc/bind/named.conf.default-zones`:  定义了默认的区域（zone），如  localhost 、反向解析等  \n`/etc/bind/named.conf.local`:  用于配置本地区域（zone）和其他定制区域的文件  \n`/etc/bind/named.conf.options`:  包含bind服务器的全局选项设置，如监听地址、转发器等  \n\n## 1.2 配置  \n### 1.2.1  解析方式  \n\n   |方式|作用|\n   |:--:|:--:|\n   |正向|域名-->IP|\n   |反向|IP-->域名|\n\n### 1.2.2  DNS记录类型  \n- A 记录：将域名指向一个 ipv4  \n- AAAA 记录：将主机名解析到一个指定的 IPv6  \n- CNAME 记录：别名解析，指将不同的域名都转到一个域名记录上，由这个域名记录统一解析管理，即当前解析的域名是另一个域名的跳转  \n- NS 记录：域名服务记录，用来指定该域名由哪个 DNS 服务器来解析，一般设置为多个，一个为主，其余为辅，且只能写域名的形式  \n- PTR 记录：反向解析，主要用于 IP 解析为 FQDN  \n- MX 记录： 邮件交换记录  \n- TXT 记录： 指某个主机名或域名的说明，通常用来做SPF记录（反垃圾邮件）  \n\n### 1.2.3  目录结构（需要修改部分）   \n/etc/bind  \n├── example  \n│   ├── db.zones  \n│   └── reverse.zones  \n├── named.conf  \n└──named.conf.options   \n### 1.2.4  配置文件  \n- /etc/bind/named.conf  \n```\ninclude \"/etc/bind/named.conf.options\";\ninclude \"/etc/bind/named.conf.local\";\n# include \"/etc/bind/named.conf.default-zones\";       # 在视图使用时注释掉的\ninclude \"/etc/bind/example/sec-trust-anchors.conf\";     #  在 dnssec 功能中需要做的引入\n```\n- /etc/bind/named.conf.options  \n\n```bash\ntls doh {\n   key-file \"/etc/bind/example/cert/key.pem\";\n   cert-file \"/etc/bind/example/cert/ca.pem\";\n};\n\nhttp dns-over-https {\n    endpoints {\"/dns-query\";};\n};\n\noptions {\n        directory \"/var/cache/bind\";\n        listen-on port 53 { localhost; };\n        listen-on port 443 tls doh http dns-over-https  { localhost; };     # 配合上述 tls  http 开启 DOH\n        recursion true;                # 否则会出现不能解析 wan 网域名\n        forwarders {\n            8.8.8.8;\n            223.5.5.5;\n        };\n        forward  first;\n        version  \"hiden version\";\n        allow-transfer { 10.13.3.107; };\n        allow-query {\n          example;\n          company;\n        };\n        auth-nxdomain true;\n        dnssec-validation false;\n};\n\nacl \"example\" {\n    10.10.6.0/24;\n    10.13.3.0/24;\n};\n\nacl \"company\" {\n    10.10.6.0/24;\n};\n\nview \"example\" {\n  match-clients { example; };\n  zone \"example.net\" IN  {\n       type master;\n       file \"/etc/bind/example/example.db.zones\";\n  };\n  zone \"13.10.in-addr.arpa.\" IN  {\n       type master;\n       file \"/etc/bind/example/example.reverse.zones\";\n  };\n};\n\nview \"company\" {\n  match-clients { company; };\n  zone \"company.com\" IN  {\n       type master;\n       file \"/etc/bind/example/company.db.zones\";\n  };\n};\n```\n\n视图使用主要参考本章[智能视图使用](##)\n\n- /etc/bind/example/example.db.zones  \n\n```\n$TTL 10M\n@       IN      SOA     example.top. admin.example.top. (\n                                   1   ; serial\n                                1200   ; refresh \n                                900    ; retry \n                                900    ; expire\n                               1200 )  ; minimum \n@        IN      NS      nameserver\nnameserver   IN  A       10.13.3.107\nnameserver  IN  A       10.13.3.109    \ntest         IN  A       10.13.3.109\nk8s          IN  A       10.13.3.110\n```\n\n- 反向区域解析文件 /etc/bind/example/example.reverse.zones  \n```\n$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n)\n       IN      NS      nameserver.      # 不能缺省这个\".\"\n\n107.3  IN    PTR    ldap.example.net.\n```\n\n- 测试  \n```\ndig   目标域名   @namserver    +short\ndig   目标ip   -x   +short\nnslookup\n```\n\n### 1.2.5  参数介绍  \n\nallow-update { none; };  定义允许执行动态 DNS 更新的客户端  \nallow-transfer { xx ; } 允许 xx 地址从您的 DNS 服务器复制数据  \nforward first; 优先选择转发到的 DNS 服务器  \nforwarders {}; 转发器，转发到另外的 DNS  \nrecursion yes; 启用递归查询  \ndnssec-validation no; 禁用 BIND9 服务器上的 DNSSEC 验证，此时返回的数据或许有准确度的问题  \nauth-nxdomain no; 符合 RFC1035  \n\n1. Refresh（刷新）：Refresh 指定了 DNS 服务器应从主服务器获取区域数据的频率。最佳的 Refresh 时间取决于你的特定需求，通常在几小时到一天之间。较短的 Refresh 时间可以更快地更新数据，但会增加主服务器的负载。  \n2. Retry（重试）：Retry 指定了 DNS 服务器在未能联系到主服务器时应进行的重试间隔。最佳的 Retry 时间通常在几分钟到一小时之间，取决于网络的可靠性和延迟。较短的 Retry 时间可以更快地恢复到主服务器，但会增加 DNS 查询负载。  \n3. Expire（过期）：Expire 指定了区域数据在主服务器不可用时的最大存储时间。最佳的 Expire 时间通常在几天到一周之间。较短的 Expire 时间可以更快地更新过期的数据，但会增加 DNS 查询的负载。  \n4. Minimum TTL（最小生存时间）：Minimum TTL 指定了 DNS 解析器或缓存服务器应保留解析结果的最小时间。最佳的 Minimum TTL 时间取决于你的特定需求，通常在几分钟到一天之间。较短的 Minimum TTL 时间可以更快地更新解析结果，但会增加 DNS 查询的负载。  \n\n----------------\n# 二、DNS 从服务器  \n## 2.1  配置  \n```\n/etc/bind/named.conf\n\t同于 master 即可\n```\n\n- /etc/bind/named.conf.options\n```\ntls doh {\n   key-file \"/etc/bind/example/cert/key.pem\";\n   cert-file \"/etc/bind/example/cert/ca.pem\";\n};\n\nhttp dns-over-https {\n    endpoints {\"/dns-query\";};\n};\n\noptions {\n        directory \"/var/cache/bind\";\n        listen-on port 53 { localhost; };\n        listen-on port 443 tls doh http default { localhost; };\n        recursion true;\n        forwarders {\n            8.8.8.8;\n            223.5.5.5;\n        };\n        forward  first;\n        version  \"hiden version\";\n        allow-query {\n          example;\n          company;\n        };\n        auth-nxdomain true;\n        dnssec-validation false;\n};\n\nacl \"example\" {\n    10.10.6.0/24;\n    10.13.3.0/24;\n};\n\nacl \"company\" {\n    10.10.6.0/24;\n};\n\nview \"example\" {\n  match-clients { example; };\n  zone \"example.net\" IN  {\n       type slave;\n       file \"/etc/bind/example/example.db.zones.signed\";\n       masters { 10.13.3.106; };\n  };\n  zone \"3.13.10.in-addr.arpa.\" IN  {\n       type slave;\n       masters { 10.13.3.106; };\n       file \"/etc/bind/example/example.reverse.zones\";\n  };\n};\n\nview \"company\" {\n  match-clients { company; };\n  zone \"company.com\" IN  {\n       type slave;\n       masters { 10.13.3.106; };\n       file \"/etc/bind/example/company.db.zones\";\n  };\n};\n```\n\n- /etc/ apparmor.d/usr.sbin.named  设置可写。dumping master file: /etc/bind/example/tmp-80LUGLiqE4: open: permission denied  \n```\n/etc/bind/example/** rw,\n\nsystemctl reload apparmor.service\n```\n\n## 2.2 测试记录同步  \n- 修改主服务器，解析记录，测试从服务器的同步情况  \n```\n$TTL 10M\n@       IN      SOA     example.top.  admin.example.top. (\n                                   2   ; serial   [[每次需要修改版本号]]\n                                1200   ; refresh \n                                900    ; retry \n                                900    ; expire\n                               1200 )  ; minimum \n@        IN      NS      nameserver\n@        IN      NS      nameserver2              [[较版本1新增]]\nnameserver   IN  A       10.13.3.107\nnameserver2  IN  A       10.13.3.109              [[较版本1新增]]\ntest         IN  A       10.13.3.109\nk8s          IN  A       10.13.3.110\nme           IN  A       10.10.6.1               [[较版本1新增]]\n```\n\n**热加载**新增的配置，每次修改记录时，需要同步修改***版本号***，slave 才能同步成功  \n```\nsudo rndc reload     # 主服务器执行即可\ndig -t a me.example.top @10.13.3.109\n```\n\n- 当从服务器有解析文件的，解析记录仍会向主服务器请求，主服务器宕机，从服务器缓存过期之后，也仍不能加载并实施解析区域记录文件  \n- 同一个网段在多个acl下，将不能正常解析。  \n\n## 2.3 测试公网域名  \n- 此時公网域名成功解析得到的是保留ip地址，ping 域名不能成功----因为公司的 ip 做了加密  \n- 不能成功解析则无记录返回  \n\n-------------\n# 三、 安全  \n## 3.1 功能同于bind-chroot  \n```\nvi /etc/apparmor.d/usr.sbin.named\n# 检查是否存在，否则增加以下内容\n  /etc/bind/** r,\n  /var/lib/bind/** rw,\n  /var/lib/bind/ rw,\n  /var/cache/bind/** lrw,\n  /var/cache/bind/ rw,\n  /var/log/named/** rw,\n  /var/log/named/ rw,\n```\n\n## 3.2 开启DNSSEC验证，[参考](https://www.cnblogs.com/anpengapple/p/5879363.html)  \n- 作用：对域名进行签名认证，保证域名的完整性和正确性，不会被修改  \n- 在新增的 dnssec_keys 目录中生成密钥  \n```\nsudo dnssec-keygen -f KSK -a RSASHA256 -b 2048 -n ZONE example.net.\nsudo dnssec-keygen -a RSASHA256  -b 2048 -n ZONE example.net.\n\n# 查看本域应用所需的密钥文件  \nls \nKexample.net.+008+16296.key   Kexample.net.+008+16296.private   Kexample.net.+008+23579.key  Kexample.net.+008+23579.private\n```\n\n- 将前面生成的两个公钥添加到区域配置文件末尾  \n```\n$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m )  ; minimum\n\n@        IN      NS      nameserver\n\nnameserver       IN      A       10.13.3.106\nldap   IN  A   10.13.3.107\ntest   IN  A   10.13.3.105\n\n$INCLUDE  \"/etc/bind/example/dnssec_keys/Kexample.net.+008+23579.key\"\n$INCLUDE  \"/etc/bind/example/dnssec_keys/Kexample.net.+008+16296.key\"\n```\n\n- 对区域文件签名，会生成一个新的zones.sigend. 如果新增了解析记录，需要再次加密  \n```\nsudo dnssec-signzone -K /etc/bind/example/dnssec_keys/ -o example.net. /etc/bind/example/example.db.zones\n -K  指定密钥文件路径    -o  域名   路径是区域解析文件路径\n```\n\n- 改动引用解析文件路径的位置  \n```shell\nview \"example\" {\n  match-clients { example; };\n  zone \"example.net\" IN  {\n       type master;\n       file \"/etc/bind/example/example.db.zones.signed\";\n  };\n};\n```\n\n- 生成信任锚文件 /etc/bind/example/sec-trust-anchors.conf  \n- 这里面的两条内容是刚才生成的两个密钥的内容。用公钥比较方便（也就是.key的文件）。注意复制的时候去掉“IN”和“DNSKEY”这两个词，以及后面的key要加引号  \n```bash\ntrusted-keys {\n   example.net.   256 3 8  \"AwEAAb+3BGqXqE/WwDICGRONYv1w4savuaD4cJ/VRL6xGg2b54OilEWE WMzUAOw4B/sPyKZDG/XTnaW4mD756l/swRuq9kO/sktgu4ZP4onmqeFM sdMTTmxesp6Q6ebqAPNzQfKyZwqX6Iq00qGslUmxr5FSOLWjGoze8afm TxbPW6Hi7JQ85mJ+TkpUNa+ymDS4qKi87rSi8NQTDbsZ0wH7+zX1TBOP jeUI/JsxD/bu1kD97AP9u2Sd4D8U0vyN8fN4LIIKfA5vurPaWPfQIM8r I0KQueAHdNLOPjaEWcKg/rBHFWZPxIeQGM8D2VXwkdPL5fefC59wONhK ys2RMqv3DIM=\";\n  example.net.   257 3 8 \"AwEAAbZo3hpm+0+32jgrTXog3CCUTTctP3LoBx1F0nbpoEBkWN1CA//O 7fzNY08pwblkKKW/LkYiQNQEQq50ThouV9UJ+CFRf/Fju6ggIpWpNjsu 8c2+zROZdJ9d2T6JnVTYPo1Iyn8ufn0hFjPRrwdvfQKSmnI9ZRx2eRFc ZFJpqNTj2LwzqoEKrbOn4oywqTWJL1Hyjv8e/kBojy7BghKWYnTGlpha 9CSin17qUQCY+o0qMzmezq+/AbxhdJwV9KYHWzWvNZjyyjBLyxwwsV4F shgmXm2tTuW5gPrnbfzaP+R/cElzl03mtjmJ//g5wWMMV8QKemBpbNoR ajzYYhhocWk=\";\n};\n```\n\n- 引入此信任锚文件 /etc/bind/name.conf  \n```\ninclude \"/etc/bind/example/sec-trust-anchors.conf\";\n```\n\n- 重启服务  \n- 验证  \n```shell\ndig +dnssec  test.example.net  @10.13.3.106\n\n; <<>> DiG 9.16.1-Ubuntu <<>> +dnssec test.example.net @10.13.3.106\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 28767\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags: do; udp: 1232\n; COOKIE: 0d6b52d25063b09401000000655592b51d0f8f6c0b072961 (good)\n;; QUESTION SECTION:\n;test.example.net.                        IN      A\n\n;; ANSWER SECTION:\ntest.example.net.         600     IN      A       10.13.3.105\ntest.example.net.         600     IN      RRSIG   A 8 3 600 20231216022642 20231116022642 16296 example.net. iUSB+maT6y22ySZdEZHElShHCVDbmjnHez39eosniP1wqvquyadVydlT lZ3XZbUMNTV3WrZhLEjuGaVwNajvAqeY07IPCivpr+VCuIPXccONBwZE 3ZRX5B2PcGnrhMWupH+jcoT5NTy5pAEdm5JXbtJljFyJk1XxQVhanzJO /TY7YMJWWDbj3WnywkEPQyP5UYExl4Y0E3BPUX/J4xuCspTovQhqo6BM HaC3XFMG1Li9CbHcfNkUjVtdi8oQmAdM6lMqFTz5KNpIRppqhEukcD9o w9slLc1vpjDwqzO7xPls8S9WbzMeHzHNbIrPcv88MQWUAIVyqodbhOvj 8ZKlgg==\n\n;; Query time: 0 msec\n;; SERVER: 10.13.3.106#53(10.13.3.106)\n;; WHEN: Thu Nov 16 11:55:33 CST 2023\n;; MSG SIZE  rcvd: 384\n```\n\n- 问题：  \n- 配置后，每个客户端需要添加信任锚文件以作签名验证  \n- 这个签名后的zone可以被伪造，使用dig命令输出的文件修改伪造  \n\n## 3.3 创建视图管理，智能DNS  \n[参考1](https://www.cnblogs.com/anpengapple/p/5879350.html)  \n[参考2](https://www.cnblogs.com/etangyushan/p/4335521.html)  \n[参考3](http://www.hangdaowangluo.com/archives/1633)  \n[ubuntu案例](https://www.server-world.info/en/note?os=Ubuntu_20.04&p=dns&f=5)  \n- vim  /etc/bind/named.conf  \n\n```bash\ninclude \"/etc/bind/named.conf.options\";\ninclude \"/etc/bind/named.conf.local\";\n# include \"/etc/bind/named.conf.default-zones\";\n```\n\n- cat  /etc/bind/named.conf.options  \n\n```\noptions {\n        directory \"/var/cache/bind\";\n        listen-on port 53 { localhost; };\n        recursion yes;        # 允许递归才能在智能dns解析万网域名\n        forwarders {\n          223.5.5.5;\n        };\n        forward  first;\n        version  \"hiden version\";   # 隐藏版本\n        allow-transfer { 10.13.3.106; };\n        allow-query { \n          example;\n          company;\n        };\n        auth-nxdomain true;\n        dnssec-validation false; # dns安全拓展的选项\n};\n# 此处定义目标ip地址段，划分可访问的域\nacl \"example\" {\n    10.13.3.0/24;\n    10.10.6.0/24;\n};\n\nacl \"company\" {\n    10.10.6.0/24;\n};\n# 此处制定目标ip可以访问的域名的解析区域\nview \"example\" {\n  match-clients { example; };\n  include \"/etc/bind/example/example.views\";\n};\n\nview \"company\" {\n  match-clients { company; };\n  include \"/etc/bind/example/company.views\";\n};\n```\n- views 文件中指定区域解析文件，eg：\n\n```bash\nzone \"example.net\" IN {                                          # 此处域名和 zones 文件中的域名一致\n      type master;\n      file \"/etc/bind/example/example.net.zones\";\n   };\nzone \"3.13.10.in-addr.arpa.\" IN {                         # 此处格式固定，设计反向解析的ip的网络位，和zones文件中的主机位结合成为完整ip地址\n      type master;\n      file \"/etc/bind/example/example.net.reverse.zones\";\n};\n\nzone \"example.top\" IN {                              # 配置此 dns 向 10.13.3.101 这个转发器请求解析 example.top 的域名。在全局 options 配置转发没有成功，选择了此方案。\n      type forward;\n      forwarders {10.13.3.101;};\n};\n```\n\n- 正向区域解析文件  \n```\n$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n) \n@        IN      NS      nameserver\n\nnameserver       IN      A       10.13.3.106\n\nldap   IN  A   10.13.3.107\ntest   IN  A   10.13.3.105\n```\n\n- 反向区域解析文件  \n```\n$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n)\n       IN      NS      nameserver.      # 不能缺省这个\".\"\n\n107  IN    PTR    ldap.example.net.\n```\n\n- 测试   \n```\ndig   目标域名   @namserver    +short\ndig   目标ip   -x   +short\nnslookup\n```\n\n## 3.4 加密  \n[知名公共DoT/DoH加密DNS服务器](https://runtufenxiang.com/6186/)   \n[配置](https://devblog.rayonnant.net/creating-a-dot-and-doh-server-using-nginx-and-bind/)    \n[bind9 tls / https](https://dididudu998.github.io/2022/02/15/configure-doh-bind.html)网络层的问题是DoT使用853的端口，很容易被封锁，而DoH使用443端口，一般不会被封锁    \n### 3.4.1 DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）   \n```\ntls mycert {\n    cert-file \"/etc/bind/example/cert.pem\";\n    key-file \"/etc/bind/example/key.pem\";\n};\n\noptions {\n    directory \"/var/cache/bind\";\n    listen-on port 853 tls mycert { localhost; };\n    forward  first;\n    forwarders {\n            223.5.5.5;\n            120.53.53.53;\n    };\n    allow-query { 10.13.3.0/24;};\n    auth-nxdomain true;\n    allow-update { none; };\n  //  allow-transfer { 10.13.3.106; };\n    version  \"hiden version\";\n    recursion false;\n};\n\nzone \"example.net\"{\n   type master;\n   file \"/etc/bind/example/example.net.zones\";\n};\n```\n\n- 客户端修改dns地址步骤如下：  \n- /etc/resolv.conf  是软链接，指向了/run/systemd/resolve/stub-resolv.conf。直接修改内容会被覆盖，没有意义  \n- vim /etc/systemd/resolved.conf  \n```\n[Resolve]\nDNS=10.13.3.106\n[[FallbackDNS]]=\nDNSOverTLS=opportunistic  # 或者yes\n```\n- systemctl restart systemd-resolved.service   \n- mv /etc/resolv.conf   /etc/resolv.conf.bak  \n- ln -s /run/systemd/resolve/resolv.conf /etc/  \n\n### 3.4.2 问题  \n- 以上配置之后，使用特定命令发现 DOT 是成功的，例如  \n```\nresolvectl query mee.example.net\n\tmee.example.net: 10.10.6.1                       -- link: ens160\n\t\n\t-- Information acquired via protocol DNS in 1.7ms.\n\t-- Data is authenticated: no\n\ndig +tls mee.example.net\n\t; <<>> DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu <<>> +tls mee.example.net\n\t;; global options: +cmd\n\t;; Got answer:\n\t;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 52275\n\t;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\t;; WARNING: recursion requested but not available\n\t\n\t;; OPT PSEUDOSECTION:\n\t; EDNS: version: 0, flags:; udp: 1232\n\t; COOKIE: 174ae084d3aed77f01000000655474d3fbb4902501bc69cb (good)\n\t;; QUESTION SECTION:\n\t;mee.example.net.                 IN      A\n\t\n\t;; ANSWER SECTION:\n\tmee.example.net.          600     IN      A       10.10.6.1\n\t\n\t;; Query time: 0 msec\n\t;; SERVER: 10.13.3.106#853(10.13.3.106) (TLS)\n\t;; WHEN: Wed Nov 15 15:35:47 CST 2023\n\t;; MSG SIZE  rcvd: 86\n以上访问了dns服务器853端口，所以返回正常解析\n```\n\n- 普通解析会失败  \n```\ndig mee.example.net  （nslookup ssh  ping）\n\t;; communications error to 10.13.3.106#53: connection refused\n\t;; communications error to 10.13.3.106#53: connection refused\n\t;; communications error to 10.13.3.106#53: connection refused\n\t\n\t; <<>> DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu <<>> mee.example.net\n\t;; global options: +cmd\n\t;; no servers could be reached\n```\n\n- 因此，仍然开启 53 端口，二者同时可以使用，但是如果需要特定的方式使用DNSOverTLS ，那么以目前在服务器上的使用上来看，使用是没有意义的。  \n- 在服务器使用 53，在浏览器使用自建 DOH，是适宜的  \n\n### 3.4.3  DOH 加密和转发  \n- 配置  \n```shell\ntls doh {\n   key-file \"/etc/bind/example/cert/key.pem\";\n   cert-file \"/etc/bind/example/cert/ca.pem\";\n};\n\nhttp dns-over-https {\n    endpoints {\"/dns-query\";};\n};\n\noptions {\n        listen-on port 443 tls doh http default { localhost; };\n\t\t......\n};\n```\n\n- 检测  \n```shell\ndig +https  test.example.net  @10.13.3.106 A\n\n; <<>> DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu <<>> +https test.example.net @10.13.3.106 A\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 15036\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 1232\n; COOKIE: dcdab07360fe04b2010000006555c9c6572491f7e49a2f35 (good)\n;; QUESTION SECTION:\n;test.example.net.                        IN      A\n\n;; ANSWER SECTION:\ntest.example.net.         600     IN      A       10.13.3.105\n\n;; Query time: 0 msec\n;; SERVER: 10.13.3.106#443(10.13.3.106) (HTTPS)\n;; WHEN: Thu Nov 16 15:50:30 CST 2023\n;; MSG SIZE  rcvd: 87\n```\n\n- 使用  \n此时在客户端使用 DOH ，浏览器设置 use secure dns ，custom url ： https://nameserver.example.net/dns-query  \n在客户端其他程序的使用中，仍然会访问 dns 的 53 端口  \n\n## 3.5 其他安全实践  \n- 下列参考[来源](https://www.secpulse.com/archives/52634.html)  \n```\n隐藏BIND版本号\n限定哪台主机能够发起区域传输\n```\n\n```\nversion  \"hiden version\";                             #  隐藏版本信息\nallow-transfer { 221.236.9.9; };    #  指定允许某从服务器进行区域传输到该服务器，此配置一般在主服务器配置\n```\n\n# 四、web 管理以及反向代理  \n[安装 webmin工具](https://www.mmcloud.com/2863.html)  \n[使用ngingx反代](https://devpress.csdn.net/cloud/6304db5f7e6682346619cf4b.html)  \n- 路径nginx/conf.d/webmin.conf   （检查443、80端口，确认dns地址和解析记录）  \n```\nupstream webmin {\n  server 10.13.3.107:10000;\n}\n\nserver {\n  listen 80;\n  server_name webmin.example.net;\n  return 301 https://$server_name$request_uri;\n}\n\nserver {\n  server_name webmin.example.net;\n  listen 443 ssl;\n  ssl_certificate webmin/tls_ca.pem;\n  ssl_certificate_key webmin/tls_key.pem;\n\n  location / {\n    proxy_pass      https://webmin;\n    proxy_redirect  off;\n    proxy_set_header   Host             $host:$server_port;\n    proxy_set_header   X-Real-IP        $remote_addr;\n    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto \"https\";\n    proxy_connect_timeout      10;\n    proxy_send_timeout         10;\n    proxy_read_timeout         10;\n    proxy_buffer_size          128k;\n    proxy_buffers              32 32k;\n    proxy_busy_buffers_size    256k;\n    proxy_temp_file_write_size 256k;\n  }\n}\n```\n# 五、bind9.18  nginx 反向代理  \n[反向代理参考](https://www.infvie.com/ops-notes/nginx-udp-dns.html)  \n\n\n\n[def]: DNS%20Server.md#3.3%20创建视图管理，智能DNS","slug":"DNS-server","published":1,"updated":"2024-01-05T03:29:19.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrhtjaho0006ltm72tmy0l6x","content":"<h1 id=\"一、DNS-主服务器\"><a href=\"#一、DNS-主服务器\" class=\"headerlink\" title=\"一、DNS 主服务器\"></a>一、DNS 主服务器</h1><ul>\n<li>手动更新源，并安装bind9.18  <pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo add-apt-repository ppa:isc&#x2F;bind\napt update\nsudo apt install -y  bind9 bind9-utils<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"1-1-相关文件\"><a href=\"#1-1-相关文件\" class=\"headerlink\" title=\"1.1 相关文件\"></a>1.1 相关文件</h2><p><a href=\"https://cshihong.github.io/2018/10/15/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/\">references</a><br><code>/etc/bind/named.conf</code>:  主配置文件，包含 bind 服务器的全局设置和引用其他配置文件的指令<br><code>/etc/bind/named.conf.default-zones</code>:  定义了默认的区域（zone），如  localhost 、反向解析等<br><code>/etc/bind/named.conf.local</code>:  用于配置本地区域（zone）和其他定制区域的文件<br><code>/etc/bind/named.conf.options</code>:  包含bind服务器的全局选项设置，如监听地址、转发器等  </p>\n<h2 id=\"1-2-配置\"><a href=\"#1-2-配置\" class=\"headerlink\" title=\"1.2 配置\"></a>1.2 配置</h2><h3 id=\"1-2-1-解析方式\"><a href=\"#1-2-1-解析方式\" class=\"headerlink\" title=\"1.2.1  解析方式\"></a>1.2.1  解析方式</h3><table>\n<thead>\n<tr>\n<th align=\"center\">方式</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">正向</td>\n<td align=\"center\">域名–&gt;IP</td>\n</tr>\n<tr>\n<td align=\"center\">反向</td>\n<td align=\"center\">IP–&gt;域名</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-2-2-DNS记录类型\"><a href=\"#1-2-2-DNS记录类型\" class=\"headerlink\" title=\"1.2.2  DNS记录类型\"></a>1.2.2  DNS记录类型</h3><ul>\n<li>A 记录：将域名指向一个 ipv4  </li>\n<li>AAAA 记录：将主机名解析到一个指定的 IPv6  </li>\n<li>CNAME 记录：别名解析，指将不同的域名都转到一个域名记录上，由这个域名记录统一解析管理，即当前解析的域名是另一个域名的跳转  </li>\n<li>NS 记录：域名服务记录，用来指定该域名由哪个 DNS 服务器来解析，一般设置为多个，一个为主，其余为辅，且只能写域名的形式  </li>\n<li>PTR 记录：反向解析，主要用于 IP 解析为 FQDN  </li>\n<li>MX 记录： 邮件交换记录  </li>\n<li>TXT 记录： 指某个主机名或域名的说明，通常用来做SPF记录（反垃圾邮件）</li>\n</ul>\n<h3 id=\"1-2-3-目录结构（需要修改部分）\"><a href=\"#1-2-3-目录结构（需要修改部分）\" class=\"headerlink\" title=\"1.2.3  目录结构（需要修改部分）\"></a>1.2.3  目录结构（需要修改部分）</h3><p>&#x2F;etc&#x2F;bind<br>├── example<br>│   ├── db.zones<br>│   └── reverse.zones<br>├── named.conf<br>└──named.conf.options   </p>\n<h3 id=\"1-2-4-配置文件\"><a href=\"#1-2-4-配置文件\" class=\"headerlink\" title=\"1.2.4  配置文件\"></a>1.2.4  配置文件</h3><ul>\n<li>&#x2F;etc&#x2F;bind&#x2F;named.conf  <pre class=\"line-numbers language-none\"><code class=\"language-none\">include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.options&quot;;\ninclude &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.local&quot;;\n# include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.default-zones&quot;;       # 在视图使用时注释掉的\ninclude &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;sec-trust-anchors.conf&quot;;     #  在 dnssec 功能中需要做的引入<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>&#x2F;etc&#x2F;bind&#x2F;named.conf.options</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tls doh &#123;\n   key-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;key.pem&quot;;\n   cert-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;ca.pem&quot;;\n&#125;;\n\nhttp dns-over-https &#123;\n    endpoints &#123;&quot;&#x2F;dns-query&quot;;&#125;;\n&#125;;\n\noptions &#123;\n        directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;\n        listen-on port 53 &#123; localhost; &#125;;\n        listen-on port 443 tls doh http dns-over-https  &#123; localhost; &#125;;     # 配合上述 tls  http 开启 DOH\n        recursion true;                # 否则会出现不能解析 wan 网域名\n        forwarders &#123;\n            8.8.8.8;\n            223.5.5.5;\n        &#125;;\n        forward  first;\n        version  &quot;hiden version&quot;;\n        allow-transfer &#123; 10.13.3.107; &#125;;\n        allow-query &#123;\n          example;\n          company;\n        &#125;;\n        auth-nxdomain true;\n        dnssec-validation false;\n&#125;;\n\nacl &quot;example&quot; &#123;\n    10.10.6.0&#x2F;24;\n    10.13.3.0&#x2F;24;\n&#125;;\n\nacl &quot;company&quot; &#123;\n    10.10.6.0&#x2F;24;\n&#125;;\n\nview &quot;example&quot; &#123;\n  match-clients &#123; example; &#125;;\n  zone &quot;example.net&quot; IN  &#123;\n       type master;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones&quot;;\n  &#125;;\n  zone &quot;13.10.in-addr.arpa.&quot; IN  &#123;\n       type master;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.reverse.zones&quot;;\n  &#125;;\n&#125;;\n\nview &quot;company&quot; &#123;\n  match-clients &#123; company; &#125;;\n  zone &quot;company.com&quot; IN  &#123;\n       type master;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;company.db.zones&quot;;\n  &#125;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>视图使用主要参考本章<a href=\"##\">智能视图使用</a></p>\n<ul>\n<li>&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.top. admin.example.top. (\n                                   1   ; serial\n                                1200   ; refresh \n                                900    ; retry \n                                900    ; expire\n                               1200 )  ; minimum \n@        IN      NS      nameserver\nnameserver   IN  A       10.13.3.107\nnameserver  IN  A       10.13.3.109    \ntest         IN  A       10.13.3.109\nk8s          IN  A       10.13.3.110<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>反向区域解析文件 &#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.reverse.zones  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n)\n       IN      NS      nameserver.      # 不能缺省这个&quot;.&quot;\n\n107.3  IN    PTR    ldap.example.net.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>测试  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dig   目标域名   @namserver    +short\ndig   目标ip   -x   +short\nnslookup<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"1-2-5-参数介绍\"><a href=\"#1-2-5-参数介绍\" class=\"headerlink\" title=\"1.2.5  参数介绍\"></a>1.2.5  参数介绍</h3><p>allow-update { none; };  定义允许执行动态 DNS 更新的客户端<br>allow-transfer { xx ; } 允许 xx 地址从您的 DNS 服务器复制数据<br>forward first; 优先选择转发到的 DNS 服务器<br>forwarders {}; 转发器，转发到另外的 DNS<br>recursion yes; 启用递归查询<br>dnssec-validation no; 禁用 BIND9 服务器上的 DNSSEC 验证，此时返回的数据或许有准确度的问题<br>auth-nxdomain no; 符合 RFC1035  </p>\n<ol>\n<li>Refresh（刷新）：Refresh 指定了 DNS 服务器应从主服务器获取区域数据的频率。最佳的 Refresh 时间取决于你的特定需求，通常在几小时到一天之间。较短的 Refresh 时间可以更快地更新数据，但会增加主服务器的负载。  </li>\n<li>Retry（重试）：Retry 指定了 DNS 服务器在未能联系到主服务器时应进行的重试间隔。最佳的 Retry 时间通常在几分钟到一小时之间，取决于网络的可靠性和延迟。较短的 Retry 时间可以更快地恢复到主服务器，但会增加 DNS 查询负载。  </li>\n<li>Expire（过期）：Expire 指定了区域数据在主服务器不可用时的最大存储时间。最佳的 Expire 时间通常在几天到一周之间。较短的 Expire 时间可以更快地更新过期的数据，但会增加 DNS 查询的负载。  </li>\n<li>Minimum TTL（最小生存时间）：Minimum TTL 指定了 DNS 解析器或缓存服务器应保留解析结果的最小时间。最佳的 Minimum TTL 时间取决于你的特定需求，通常在几分钟到一天之间。较短的 Minimum TTL 时间可以更快地更新解析结果，但会增加 DNS 查询的负载。</li>\n</ol>\n<hr>\n<h1 id=\"二、DNS-从服务器\"><a href=\"#二、DNS-从服务器\" class=\"headerlink\" title=\"二、DNS 从服务器\"></a>二、DNS 从服务器</h1><h2 id=\"2-1-配置\"><a href=\"#2-1-配置\" class=\"headerlink\" title=\"2.1  配置\"></a>2.1  配置</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;bind&#x2F;named.conf\n\t同于 master 即可<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>&#x2F;etc&#x2F;bind&#x2F;named.conf.options</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tls doh &#123;\n   key-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;key.pem&quot;;\n   cert-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;ca.pem&quot;;\n&#125;;\n\nhttp dns-over-https &#123;\n    endpoints &#123;&quot;&#x2F;dns-query&quot;;&#125;;\n&#125;;\n\noptions &#123;\n        directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;\n        listen-on port 53 &#123; localhost; &#125;;\n        listen-on port 443 tls doh http default &#123; localhost; &#125;;\n        recursion true;\n        forwarders &#123;\n            8.8.8.8;\n            223.5.5.5;\n        &#125;;\n        forward  first;\n        version  &quot;hiden version&quot;;\n        allow-query &#123;\n          example;\n          company;\n        &#125;;\n        auth-nxdomain true;\n        dnssec-validation false;\n&#125;;\n\nacl &quot;example&quot; &#123;\n    10.10.6.0&#x2F;24;\n    10.13.3.0&#x2F;24;\n&#125;;\n\nacl &quot;company&quot; &#123;\n    10.10.6.0&#x2F;24;\n&#125;;\n\nview &quot;example&quot; &#123;\n  match-clients &#123; example; &#125;;\n  zone &quot;example.net&quot; IN  &#123;\n       type slave;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones.signed&quot;;\n       masters &#123; 10.13.3.106; &#125;;\n  &#125;;\n  zone &quot;3.13.10.in-addr.arpa.&quot; IN  &#123;\n       type slave;\n       masters &#123; 10.13.3.106; &#125;;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.reverse.zones&quot;;\n  &#125;;\n&#125;;\n\nview &quot;company&quot; &#123;\n  match-clients &#123; company; &#125;;\n  zone &quot;company.com&quot; IN  &#123;\n       type slave;\n       masters &#123; 10.13.3.106; &#125;;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;company.db.zones&quot;;\n  &#125;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>&#x2F;etc&#x2F; apparmor.d&#x2F;usr.sbin.named  设置可写。dumping master file: &#x2F;etc&#x2F;bind&#x2F;example&#x2F;tmp-80LUGLiqE4: open: permission denied  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;bind&#x2F;example&#x2F;** rw,\n\nsystemctl reload apparmor.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"2-2-测试记录同步\"><a href=\"#2-2-测试记录同步\" class=\"headerlink\" title=\"2.2 测试记录同步\"></a>2.2 测试记录同步</h2><ul>\n<li>修改主服务器，解析记录，测试从服务器的同步情况  <pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.top.  admin.example.top. (\n                                   2   ; serial   [[每次需要修改版本号]]\n                                1200   ; refresh \n                                900    ; retry \n                                900    ; expire\n                               1200 )  ; minimum \n@        IN      NS      nameserver\n@        IN      NS      nameserver2              [[较版本1新增]]\nnameserver   IN  A       10.13.3.107\nnameserver2  IN  A       10.13.3.109              [[较版本1新增]]\ntest         IN  A       10.13.3.109\nk8s          IN  A       10.13.3.110\nme           IN  A       10.10.6.1               [[较版本1新增]]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<p><strong>热加载</strong>新增的配置，每次修改记录时，需要同步修改<em><strong>版本号</strong></em>，slave 才能同步成功  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo rndc reload     # 主服务器执行即可\ndig -t a me.example.top @10.13.3.109<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>当从服务器有解析文件的，解析记录仍会向主服务器请求，主服务器宕机，从服务器缓存过期之后，也仍不能加载并实施解析区域记录文件  </li>\n<li>同一个网段在多个acl下，将不能正常解析。</li>\n</ul>\n<h2 id=\"2-3-测试公网域名\"><a href=\"#2-3-测试公网域名\" class=\"headerlink\" title=\"2.3 测试公网域名\"></a>2.3 测试公网域名</h2><ul>\n<li>此時公网域名成功解析得到的是保留ip地址，ping 域名不能成功—-因为公司的 ip 做了加密  </li>\n<li>不能成功解析则无记录返回</li>\n</ul>\n<hr>\n<h1 id=\"三、-安全\"><a href=\"#三、-安全\" class=\"headerlink\" title=\"三、 安全\"></a>三、 安全</h1><h2 id=\"3-1-功能同于bind-chroot\"><a href=\"#3-1-功能同于bind-chroot\" class=\"headerlink\" title=\"3.1 功能同于bind-chroot\"></a>3.1 功能同于bind-chroot</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">vi &#x2F;etc&#x2F;apparmor.d&#x2F;usr.sbin.named\n# 检查是否存在，否则增加以下内容\n  &#x2F;etc&#x2F;bind&#x2F;** r,\n  &#x2F;var&#x2F;lib&#x2F;bind&#x2F;** rw,\n  &#x2F;var&#x2F;lib&#x2F;bind&#x2F; rw,\n  &#x2F;var&#x2F;cache&#x2F;bind&#x2F;** lrw,\n  &#x2F;var&#x2F;cache&#x2F;bind&#x2F; rw,\n  &#x2F;var&#x2F;log&#x2F;named&#x2F;** rw,\n  &#x2F;var&#x2F;log&#x2F;named&#x2F; rw,<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-2-开启DNSSEC验证，参考\"><a href=\"#3-2-开启DNSSEC验证，参考\" class=\"headerlink\" title=\"3.2 开启DNSSEC验证，参考\"></a>3.2 开启DNSSEC验证，<a href=\"https://www.cnblogs.com/anpengapple/p/5879363.html\">参考</a></h2><ul>\n<li><p>作用：对域名进行签名认证，保证域名的完整性和正确性，不会被修改  </p>\n</li>\n<li><p>在新增的 dnssec_keys 目录中生成密钥  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo dnssec-keygen -f KSK -a RSASHA256 -b 2048 -n ZONE example.net.\nsudo dnssec-keygen -a RSASHA256  -b 2048 -n ZONE example.net.\n\n# 查看本域应用所需的密钥文件  \nls \nKexample.net.+008+16296.key   Kexample.net.+008+16296.private   Kexample.net.+008+23579.key  Kexample.net.+008+23579.private<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>将前面生成的两个公钥添加到区域配置文件末尾  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m )  ; minimum\n\n@        IN      NS      nameserver\n\nnameserver       IN      A       10.13.3.106\nldap   IN  A   10.13.3.107\ntest   IN  A   10.13.3.105\n\n$INCLUDE  &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;dnssec_keys&#x2F;Kexample.net.+008+23579.key&quot;\n$INCLUDE  &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;dnssec_keys&#x2F;Kexample.net.+008+16296.key&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>对区域文件签名，会生成一个新的zones.sigend. 如果新增了解析记录，需要再次加密  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo dnssec-signzone -K &#x2F;etc&#x2F;bind&#x2F;example&#x2F;dnssec_keys&#x2F; -o example.net. &#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones\n -K  指定密钥文件路径    -o  域名   路径是区域解析文件路径<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>改动引用解析文件路径的位置  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">view &quot;example&quot; &#123;\n  match-clients &#123; example; &#125;;\n  zone &quot;example.net&quot; IN  &#123;\n       type master;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones.signed&quot;;\n  &#125;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>生成信任锚文件 &#x2F;etc&#x2F;bind&#x2F;example&#x2F;sec-trust-anchors.conf  </p>\n</li>\n<li><p>这里面的两条内容是刚才生成的两个密钥的内容。用公钥比较方便（也就是.key的文件）。注意复制的时候去掉“IN”和“DNSKEY”这两个词，以及后面的key要加引号  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">trusted-keys &#123;\n   example.net.   256 3 8  &quot;AwEAAb+3BGqXqE&#x2F;WwDICGRONYv1w4savuaD4cJ&#x2F;VRL6xGg2b54OilEWE WMzUAOw4B&#x2F;sPyKZDG&#x2F;XTnaW4mD756l&#x2F;swRuq9kO&#x2F;sktgu4ZP4onmqeFM sdMTTmxesp6Q6ebqAPNzQfKyZwqX6Iq00qGslUmxr5FSOLWjGoze8afm TxbPW6Hi7JQ85mJ+TkpUNa+ymDS4qKi87rSi8NQTDbsZ0wH7+zX1TBOP jeUI&#x2F;JsxD&#x2F;bu1kD97AP9u2Sd4D8U0vyN8fN4LIIKfA5vurPaWPfQIM8r I0KQueAHdNLOPjaEWcKg&#x2F;rBHFWZPxIeQGM8D2VXwkdPL5fefC59wONhK ys2RMqv3DIM&#x3D;&quot;;\n  example.net.   257 3 8 &quot;AwEAAbZo3hpm+0+32jgrTXog3CCUTTctP3LoBx1F0nbpoEBkWN1CA&#x2F;&#x2F;O 7fzNY08pwblkKKW&#x2F;LkYiQNQEQq50ThouV9UJ+CFRf&#x2F;Fju6ggIpWpNjsu 8c2+zROZdJ9d2T6JnVTYPo1Iyn8ufn0hFjPRrwdvfQKSmnI9ZRx2eRFc ZFJpqNTj2LwzqoEKrbOn4oywqTWJL1Hyjv8e&#x2F;kBojy7BghKWYnTGlpha 9CSin17qUQCY+o0qMzmezq+&#x2F;AbxhdJwV9KYHWzWvNZjyyjBLyxwwsV4F shgmXm2tTuW5gPrnbfzaP+R&#x2F;cElzl03mtjmJ&#x2F;&#x2F;g5wWMMV8QKemBpbNoR ajzYYhhocWk&#x3D;&quot;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>引入此信任锚文件 &#x2F;etc&#x2F;bind&#x2F;name.conf  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">include &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;sec-trust-anchors.conf&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>重启服务  </p>\n</li>\n<li><p>验证  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">dig +dnssec  test.example.net  @10.13.3.106\n\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; +dnssec test.example.net @10.13.3.106\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 28767\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags: do; udp: 1232\n; COOKIE: 0d6b52d25063b09401000000655592b51d0f8f6c0b072961 (good)\n;; QUESTION SECTION:\n;test.example.net.                        IN      A\n\n;; ANSWER SECTION:\ntest.example.net.         600     IN      A       10.13.3.105\ntest.example.net.         600     IN      RRSIG   A 8 3 600 20231216022642 20231116022642 16296 example.net. iUSB+maT6y22ySZdEZHElShHCVDbmjnHez39eosniP1wqvquyadVydlT lZ3XZbUMNTV3WrZhLEjuGaVwNajvAqeY07IPCivpr+VCuIPXccONBwZE 3ZRX5B2PcGnrhMWupH+jcoT5NTy5pAEdm5JXbtJljFyJk1XxQVhanzJO &#x2F;TY7YMJWWDbj3WnywkEPQyP5UYExl4Y0E3BPUX&#x2F;J4xuCspTovQhqo6BM HaC3XFMG1Li9CbHcfNkUjVtdi8oQmAdM6lMqFTz5KNpIRppqhEukcD9o w9slLc1vpjDwqzO7xPls8S9WbzMeHzHNbIrPcv88MQWUAIVyqodbhOvj 8ZKlgg&#x3D;&#x3D;\n\n;; Query time: 0 msec\n;; SERVER: 10.13.3.106#53(10.13.3.106)\n;; WHEN: Thu Nov 16 11:55:33 CST 2023\n;; MSG SIZE  rcvd: 384<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>问题：  </p>\n</li>\n<li><p>配置后，每个客户端需要添加信任锚文件以作签名验证  </p>\n</li>\n<li><p>这个签名后的zone可以被伪造，使用dig命令输出的文件修改伪造</p>\n</li>\n</ul>\n<h2 id=\"3-3-创建视图管理，智能DNS\"><a href=\"#3-3-创建视图管理，智能DNS\" class=\"headerlink\" title=\"3.3 创建视图管理，智能DNS\"></a>3.3 创建视图管理，智能DNS</h2><p><a href=\"https://www.cnblogs.com/anpengapple/p/5879350.html\">参考1</a><br><a href=\"https://www.cnblogs.com/etangyushan/p/4335521.html\">参考2</a><br><a href=\"http://www.hangdaowangluo.com/archives/1633\">参考3</a><br><a href=\"https://www.server-world.info/en/note?os=Ubuntu_20.04&p=dns&f=5\">ubuntu案例</a>  </p>\n<ul>\n<li>vim  &#x2F;etc&#x2F;bind&#x2F;named.conf</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.options&quot;;\ninclude &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.local&quot;;\n# include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.default-zones&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>cat  &#x2F;etc&#x2F;bind&#x2F;named.conf.options</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">options &#123;\n        directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;\n        listen-on port 53 &#123; localhost; &#125;;\n        recursion yes;        # 允许递归才能在智能dns解析万网域名\n        forwarders &#123;\n          223.5.5.5;\n        &#125;;\n        forward  first;\n        version  &quot;hiden version&quot;;   # 隐藏版本\n        allow-transfer &#123; 10.13.3.106; &#125;;\n        allow-query &#123; \n          example;\n          company;\n        &#125;;\n        auth-nxdomain true;\n        dnssec-validation false; # dns安全拓展的选项\n&#125;;\n# 此处定义目标ip地址段，划分可访问的域\nacl &quot;example&quot; &#123;\n    10.13.3.0&#x2F;24;\n    10.10.6.0&#x2F;24;\n&#125;;\n\nacl &quot;company&quot; &#123;\n    10.10.6.0&#x2F;24;\n&#125;;\n# 此处制定目标ip可以访问的域名的解析区域\nview &quot;example&quot; &#123;\n  match-clients &#123; example; &#125;;\n  include &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.views&quot;;\n&#125;;\n\nview &quot;company&quot; &#123;\n  match-clients &#123; company; &#125;;\n  include &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;company.views&quot;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>views 文件中指定区域解析文件，eg：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">zone &quot;example.net&quot; IN &#123;                                          # 此处域名和 zones 文件中的域名一致\n      type master;\n      file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.net.zones&quot;;\n   &#125;;\nzone &quot;3.13.10.in-addr.arpa.&quot; IN &#123;                         # 此处格式固定，设计反向解析的ip的网络位，和zones文件中的主机位结合成为完整ip地址\n      type master;\n      file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.net.reverse.zones&quot;;\n&#125;;\n\nzone &quot;example.top&quot; IN &#123;                              # 配置此 dns 向 10.13.3.101 这个转发器请求解析 example.top 的域名。在全局 options 配置转发没有成功，选择了此方案。\n      type forward;\n      forwarders &#123;10.13.3.101;&#125;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>正向区域解析文件  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n) \n@        IN      NS      nameserver\n\nnameserver       IN      A       10.13.3.106\n\nldap   IN  A   10.13.3.107\ntest   IN  A   10.13.3.105<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>反向区域解析文件  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n)\n       IN      NS      nameserver.      # 不能缺省这个&quot;.&quot;\n\n107  IN    PTR    ldap.example.net.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>测试   </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dig   目标域名   @namserver    +short\ndig   目标ip   -x   +short\nnslookup<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"3-4-加密\"><a href=\"#3-4-加密\" class=\"headerlink\" title=\"3.4 加密\"></a>3.4 加密</h2><p><a href=\"https://runtufenxiang.com/6186/\">知名公共DoT&#x2F;DoH加密DNS服务器</a><br><a href=\"https://devblog.rayonnant.net/creating-a-dot-and-doh-server-using-nginx-and-bind/\">配置</a><br><a href=\"https://dididudu998.github.io/2022/02/15/configure-doh-bind.html\">bind9 tls &#x2F; https</a>网络层的问题是DoT使用853的端口，很容易被封锁，而DoH使用443端口，一般不会被封锁    </p>\n<h3 id=\"3-4-1-DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）\"><a href=\"#3-4-1-DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）\" class=\"headerlink\" title=\"3.4.1 DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）\"></a>3.4.1 DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">tls mycert &#123;\n    cert-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert.pem&quot;;\n    key-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;key.pem&quot;;\n&#125;;\n\noptions &#123;\n    directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;\n    listen-on port 853 tls mycert &#123; localhost; &#125;;\n    forward  first;\n    forwarders &#123;\n            223.5.5.5;\n            120.53.53.53;\n    &#125;;\n    allow-query &#123; 10.13.3.0&#x2F;24;&#125;;\n    auth-nxdomain true;\n    allow-update &#123; none; &#125;;\n  &#x2F;&#x2F;  allow-transfer &#123; 10.13.3.106; &#125;;\n    version  &quot;hiden version&quot;;\n    recursion false;\n&#125;;\n\nzone &quot;example.net&quot;&#123;\n   type master;\n   file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.net.zones&quot;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>客户端修改dns地址步骤如下：  </li>\n<li>&#x2F;etc&#x2F;resolv.conf  是软链接，指向了&#x2F;run&#x2F;systemd&#x2F;resolve&#x2F;stub-resolv.conf。直接修改内容会被覆盖，没有意义  </li>\n<li>vim &#x2F;etc&#x2F;systemd&#x2F;resolved.conf  <pre class=\"line-numbers language-none\"><code class=\"language-none\">[Resolve]\nDNS&#x3D;10.13.3.106\n[[FallbackDNS]]&#x3D;\nDNSOverTLS&#x3D;opportunistic  # 或者yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>systemctl restart systemd-resolved.service   </li>\n<li>mv &#x2F;etc&#x2F;resolv.conf   &#x2F;etc&#x2F;resolv.conf.bak  </li>\n<li>ln -s &#x2F;run&#x2F;systemd&#x2F;resolve&#x2F;resolv.conf &#x2F;etc&#x2F;</li>\n</ul>\n<h3 id=\"3-4-2-问题\"><a href=\"#3-4-2-问题\" class=\"headerlink\" title=\"3.4.2 问题\"></a>3.4.2 问题</h3><ul>\n<li><p>以上配置之后，使用特定命令发现 DOT 是成功的，例如  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">resolvectl query mee.example.net\n\tmee.example.net: 10.10.6.1                       -- link: ens160\n\t\n\t-- Information acquired via protocol DNS in 1.7ms.\n\t-- Data is authenticated: no\n\ndig +tls mee.example.net\n\t; &lt;&lt;&gt;&gt; DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu &lt;&lt;&gt;&gt; +tls mee.example.net\n\t;; global options: +cmd\n\t;; Got answer:\n\t;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 52275\n\t;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\t;; WARNING: recursion requested but not available\n\t\n\t;; OPT PSEUDOSECTION:\n\t; EDNS: version: 0, flags:; udp: 1232\n\t; COOKIE: 174ae084d3aed77f01000000655474d3fbb4902501bc69cb (good)\n\t;; QUESTION SECTION:\n\t;mee.example.net.                 IN      A\n\t\n\t;; ANSWER SECTION:\n\tmee.example.net.          600     IN      A       10.10.6.1\n\t\n\t;; Query time: 0 msec\n\t;; SERVER: 10.13.3.106#853(10.13.3.106) (TLS)\n\t;; WHEN: Wed Nov 15 15:35:47 CST 2023\n\t;; MSG SIZE  rcvd: 86\n以上访问了dns服务器853端口，所以返回正常解析<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>普通解析会失败  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dig mee.example.net  （nslookup ssh  ping）\n\t;; communications error to 10.13.3.106#53: connection refused\n\t;; communications error to 10.13.3.106#53: connection refused\n\t;; communications error to 10.13.3.106#53: connection refused\n\t\n\t; &lt;&lt;&gt;&gt; DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu &lt;&lt;&gt;&gt; mee.example.net\n\t;; global options: +cmd\n\t;; no servers could be reached<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>因此，仍然开启 53 端口，二者同时可以使用，但是如果需要特定的方式使用DNSOverTLS ，那么以目前在服务器上的使用上来看，使用是没有意义的。  </p>\n</li>\n<li><p>在服务器使用 53，在浏览器使用自建 DOH，是适宜的</p>\n</li>\n</ul>\n<h3 id=\"3-4-3-DOH-加密和转发\"><a href=\"#3-4-3-DOH-加密和转发\" class=\"headerlink\" title=\"3.4.3  DOH 加密和转发\"></a>3.4.3  DOH 加密和转发</h3><ul>\n<li><p>配置  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tls doh &#123;\n   key-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;key.pem&quot;;\n   cert-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;ca.pem&quot;;\n&#125;;\n\nhttp dns-over-https &#123;\n    endpoints &#123;&quot;&#x2F;dns-query&quot;;&#125;;\n&#125;;\n\noptions &#123;\n        listen-on port 443 tls doh http default &#123; localhost; &#125;;\n\t\t......\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>检测  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">dig +https  test.example.net  @10.13.3.106 A\n\n; &lt;&lt;&gt;&gt; DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu &lt;&lt;&gt;&gt; +https test.example.net @10.13.3.106 A\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 15036\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 1232\n; COOKIE: dcdab07360fe04b2010000006555c9c6572491f7e49a2f35 (good)\n;; QUESTION SECTION:\n;test.example.net.                        IN      A\n\n;; ANSWER SECTION:\ntest.example.net.         600     IN      A       10.13.3.105\n\n;; Query time: 0 msec\n;; SERVER: 10.13.3.106#443(10.13.3.106) (HTTPS)\n;; WHEN: Thu Nov 16 15:50:30 CST 2023\n;; MSG SIZE  rcvd: 87<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>使用<br>此时在客户端使用 DOH ，浏览器设置 use secure dns ，custom url ： <a href=\"https://nameserver.example.net/dns-query\">https://nameserver.example.net/dns-query</a><br>在客户端其他程序的使用中，仍然会访问 dns 的 53 端口</p>\n</li>\n</ul>\n<h2 id=\"3-5-其他安全实践\"><a href=\"#3-5-其他安全实践\" class=\"headerlink\" title=\"3.5 其他安全实践\"></a>3.5 其他安全实践</h2><ul>\n<li>下列参考<a href=\"https://www.secpulse.com/archives/52634.html\">来源</a>  <pre class=\"line-numbers language-none\"><code class=\"language-none\">隐藏BIND版本号\n限定哪台主机能够发起区域传输<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">version  &quot;hiden version&quot;;                             #  隐藏版本信息\nallow-transfer &#123; 221.236.9.9; &#125;;    #  指定允许某从服务器进行区域传输到该服务器，此配置一般在主服务器配置<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"四、web-管理以及反向代理\"><a href=\"#四、web-管理以及反向代理\" class=\"headerlink\" title=\"四、web 管理以及反向代理\"></a>四、web 管理以及反向代理</h1><p><a href=\"https://www.mmcloud.com/2863.html\">安装 webmin工具</a><br><a href=\"https://devpress.csdn.net/cloud/6304db5f7e6682346619cf4b.html\">使用ngingx反代</a>  </p>\n<ul>\n<li>路径nginx&#x2F;conf.d&#x2F;webmin.conf   （检查443、80端口，确认dns地址和解析记录）  <pre class=\"line-numbers language-none\"><code class=\"language-none\">upstream webmin &#123;\n  server 10.13.3.107:10000;\n&#125;\n\nserver &#123;\n  listen 80;\n  server_name webmin.example.net;\n  return 301 https:&#x2F;&#x2F;$server_name$request_uri;\n&#125;\n\nserver &#123;\n  server_name webmin.example.net;\n  listen 443 ssl;\n  ssl_certificate webmin&#x2F;tls_ca.pem;\n  ssl_certificate_key webmin&#x2F;tls_key.pem;\n\n  location &#x2F; &#123;\n    proxy_pass      https:&#x2F;&#x2F;webmin;\n    proxy_redirect  off;\n    proxy_set_header   Host             $host:$server_port;\n    proxy_set_header   X-Real-IP        $remote_addr;\n    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto &quot;https&quot;;\n    proxy_connect_timeout      10;\n    proxy_send_timeout         10;\n    proxy_read_timeout         10;\n    proxy_buffer_size          128k;\n    proxy_buffers              32 32k;\n    proxy_busy_buffers_size    256k;\n    proxy_temp_file_write_size 256k;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h1 id=\"五、bind9-18-nginx-反向代理\"><a href=\"#五、bind9-18-nginx-反向代理\" class=\"headerlink\" title=\"五、bind9.18  nginx 反向代理\"></a>五、bind9.18  nginx 反向代理</h1><p><a href=\"https://www.infvie.com/ops-notes/nginx-udp-dns.html\">反向代理参考</a>  </p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"一、DNS-主服务器\"><a href=\"#一、DNS-主服务器\" class=\"headerlink\" title=\"一、DNS 主服务器\"></a>一、DNS 主服务器</h1><ul>\n<li>手动更新源，并安装bind9.18  <pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo add-apt-repository ppa:isc&#x2F;bind\napt update\nsudo apt install -y  bind9 bind9-utils<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"1-1-相关文件\"><a href=\"#1-1-相关文件\" class=\"headerlink\" title=\"1.1 相关文件\"></a>1.1 相关文件</h2><p><a href=\"https://cshihong.github.io/2018/10/15/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/\">references</a><br><code>/etc/bind/named.conf</code>:  主配置文件，包含 bind 服务器的全局设置和引用其他配置文件的指令<br><code>/etc/bind/named.conf.default-zones</code>:  定义了默认的区域（zone），如  localhost 、反向解析等<br><code>/etc/bind/named.conf.local</code>:  用于配置本地区域（zone）和其他定制区域的文件<br><code>/etc/bind/named.conf.options</code>:  包含bind服务器的全局选项设置，如监听地址、转发器等  </p>\n<h2 id=\"1-2-配置\"><a href=\"#1-2-配置\" class=\"headerlink\" title=\"1.2 配置\"></a>1.2 配置</h2><h3 id=\"1-2-1-解析方式\"><a href=\"#1-2-1-解析方式\" class=\"headerlink\" title=\"1.2.1  解析方式\"></a>1.2.1  解析方式</h3><table>\n<thead>\n<tr>\n<th align=\"center\">方式</th>\n<th align=\"center\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">正向</td>\n<td align=\"center\">域名–&gt;IP</td>\n</tr>\n<tr>\n<td align=\"center\">反向</td>\n<td align=\"center\">IP–&gt;域名</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-2-2-DNS记录类型\"><a href=\"#1-2-2-DNS记录类型\" class=\"headerlink\" title=\"1.2.2  DNS记录类型\"></a>1.2.2  DNS记录类型</h3><ul>\n<li>A 记录：将域名指向一个 ipv4  </li>\n<li>AAAA 记录：将主机名解析到一个指定的 IPv6  </li>\n<li>CNAME 记录：别名解析，指将不同的域名都转到一个域名记录上，由这个域名记录统一解析管理，即当前解析的域名是另一个域名的跳转  </li>\n<li>NS 记录：域名服务记录，用来指定该域名由哪个 DNS 服务器来解析，一般设置为多个，一个为主，其余为辅，且只能写域名的形式  </li>\n<li>PTR 记录：反向解析，主要用于 IP 解析为 FQDN  </li>\n<li>MX 记录： 邮件交换记录  </li>\n<li>TXT 记录： 指某个主机名或域名的说明，通常用来做SPF记录（反垃圾邮件）</li>\n</ul>\n<h3 id=\"1-2-3-目录结构（需要修改部分）\"><a href=\"#1-2-3-目录结构（需要修改部分）\" class=\"headerlink\" title=\"1.2.3  目录结构（需要修改部分）\"></a>1.2.3  目录结构（需要修改部分）</h3><p>&#x2F;etc&#x2F;bind<br>├── example<br>│   ├── db.zones<br>│   └── reverse.zones<br>├── named.conf<br>└──named.conf.options   </p>\n<h3 id=\"1-2-4-配置文件\"><a href=\"#1-2-4-配置文件\" class=\"headerlink\" title=\"1.2.4  配置文件\"></a>1.2.4  配置文件</h3><ul>\n<li>&#x2F;etc&#x2F;bind&#x2F;named.conf  <pre class=\"line-numbers language-none\"><code class=\"language-none\">include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.options&quot;;\ninclude &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.local&quot;;\n# include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.default-zones&quot;;       # 在视图使用时注释掉的\ninclude &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;sec-trust-anchors.conf&quot;;     #  在 dnssec 功能中需要做的引入<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>&#x2F;etc&#x2F;bind&#x2F;named.conf.options</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tls doh &#123;\n   key-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;key.pem&quot;;\n   cert-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;ca.pem&quot;;\n&#125;;\n\nhttp dns-over-https &#123;\n    endpoints &#123;&quot;&#x2F;dns-query&quot;;&#125;;\n&#125;;\n\noptions &#123;\n        directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;\n        listen-on port 53 &#123; localhost; &#125;;\n        listen-on port 443 tls doh http dns-over-https  &#123; localhost; &#125;;     # 配合上述 tls  http 开启 DOH\n        recursion true;                # 否则会出现不能解析 wan 网域名\n        forwarders &#123;\n            8.8.8.8;\n            223.5.5.5;\n        &#125;;\n        forward  first;\n        version  &quot;hiden version&quot;;\n        allow-transfer &#123; 10.13.3.107; &#125;;\n        allow-query &#123;\n          example;\n          company;\n        &#125;;\n        auth-nxdomain true;\n        dnssec-validation false;\n&#125;;\n\nacl &quot;example&quot; &#123;\n    10.10.6.0&#x2F;24;\n    10.13.3.0&#x2F;24;\n&#125;;\n\nacl &quot;company&quot; &#123;\n    10.10.6.0&#x2F;24;\n&#125;;\n\nview &quot;example&quot; &#123;\n  match-clients &#123; example; &#125;;\n  zone &quot;example.net&quot; IN  &#123;\n       type master;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones&quot;;\n  &#125;;\n  zone &quot;13.10.in-addr.arpa.&quot; IN  &#123;\n       type master;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.reverse.zones&quot;;\n  &#125;;\n&#125;;\n\nview &quot;company&quot; &#123;\n  match-clients &#123; company; &#125;;\n  zone &quot;company.com&quot; IN  &#123;\n       type master;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;company.db.zones&quot;;\n  &#125;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>视图使用主要参考本章<a href=\"##\">智能视图使用</a></p>\n<ul>\n<li>&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.top. admin.example.top. (\n                                   1   ; serial\n                                1200   ; refresh \n                                900    ; retry \n                                900    ; expire\n                               1200 )  ; minimum \n@        IN      NS      nameserver\nnameserver   IN  A       10.13.3.107\nnameserver  IN  A       10.13.3.109    \ntest         IN  A       10.13.3.109\nk8s          IN  A       10.13.3.110<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>反向区域解析文件 &#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.reverse.zones  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n)\n       IN      NS      nameserver.      # 不能缺省这个&quot;.&quot;\n\n107.3  IN    PTR    ldap.example.net.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>测试  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dig   目标域名   @namserver    +short\ndig   目标ip   -x   +short\nnslookup<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"1-2-5-参数介绍\"><a href=\"#1-2-5-参数介绍\" class=\"headerlink\" title=\"1.2.5  参数介绍\"></a>1.2.5  参数介绍</h3><p>allow-update { none; };  定义允许执行动态 DNS 更新的客户端<br>allow-transfer { xx ; } 允许 xx 地址从您的 DNS 服务器复制数据<br>forward first; 优先选择转发到的 DNS 服务器<br>forwarders {}; 转发器，转发到另外的 DNS<br>recursion yes; 启用递归查询<br>dnssec-validation no; 禁用 BIND9 服务器上的 DNSSEC 验证，此时返回的数据或许有准确度的问题<br>auth-nxdomain no; 符合 RFC1035  </p>\n<ol>\n<li>Refresh（刷新）：Refresh 指定了 DNS 服务器应从主服务器获取区域数据的频率。最佳的 Refresh 时间取决于你的特定需求，通常在几小时到一天之间。较短的 Refresh 时间可以更快地更新数据，但会增加主服务器的负载。  </li>\n<li>Retry（重试）：Retry 指定了 DNS 服务器在未能联系到主服务器时应进行的重试间隔。最佳的 Retry 时间通常在几分钟到一小时之间，取决于网络的可靠性和延迟。较短的 Retry 时间可以更快地恢复到主服务器，但会增加 DNS 查询负载。  </li>\n<li>Expire（过期）：Expire 指定了区域数据在主服务器不可用时的最大存储时间。最佳的 Expire 时间通常在几天到一周之间。较短的 Expire 时间可以更快地更新过期的数据，但会增加 DNS 查询的负载。  </li>\n<li>Minimum TTL（最小生存时间）：Minimum TTL 指定了 DNS 解析器或缓存服务器应保留解析结果的最小时间。最佳的 Minimum TTL 时间取决于你的特定需求，通常在几分钟到一天之间。较短的 Minimum TTL 时间可以更快地更新解析结果，但会增加 DNS 查询的负载。</li>\n</ol>\n<hr>\n<h1 id=\"二、DNS-从服务器\"><a href=\"#二、DNS-从服务器\" class=\"headerlink\" title=\"二、DNS 从服务器\"></a>二、DNS 从服务器</h1><h2 id=\"2-1-配置\"><a href=\"#2-1-配置\" class=\"headerlink\" title=\"2.1  配置\"></a>2.1  配置</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;bind&#x2F;named.conf\n\t同于 master 即可<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>&#x2F;etc&#x2F;bind&#x2F;named.conf.options</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tls doh &#123;\n   key-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;key.pem&quot;;\n   cert-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;ca.pem&quot;;\n&#125;;\n\nhttp dns-over-https &#123;\n    endpoints &#123;&quot;&#x2F;dns-query&quot;;&#125;;\n&#125;;\n\noptions &#123;\n        directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;\n        listen-on port 53 &#123; localhost; &#125;;\n        listen-on port 443 tls doh http default &#123; localhost; &#125;;\n        recursion true;\n        forwarders &#123;\n            8.8.8.8;\n            223.5.5.5;\n        &#125;;\n        forward  first;\n        version  &quot;hiden version&quot;;\n        allow-query &#123;\n          example;\n          company;\n        &#125;;\n        auth-nxdomain true;\n        dnssec-validation false;\n&#125;;\n\nacl &quot;example&quot; &#123;\n    10.10.6.0&#x2F;24;\n    10.13.3.0&#x2F;24;\n&#125;;\n\nacl &quot;company&quot; &#123;\n    10.10.6.0&#x2F;24;\n&#125;;\n\nview &quot;example&quot; &#123;\n  match-clients &#123; example; &#125;;\n  zone &quot;example.net&quot; IN  &#123;\n       type slave;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones.signed&quot;;\n       masters &#123; 10.13.3.106; &#125;;\n  &#125;;\n  zone &quot;3.13.10.in-addr.arpa.&quot; IN  &#123;\n       type slave;\n       masters &#123; 10.13.3.106; &#125;;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.reverse.zones&quot;;\n  &#125;;\n&#125;;\n\nview &quot;company&quot; &#123;\n  match-clients &#123; company; &#125;;\n  zone &quot;company.com&quot; IN  &#123;\n       type slave;\n       masters &#123; 10.13.3.106; &#125;;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;company.db.zones&quot;;\n  &#125;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>&#x2F;etc&#x2F; apparmor.d&#x2F;usr.sbin.named  设置可写。dumping master file: &#x2F;etc&#x2F;bind&#x2F;example&#x2F;tmp-80LUGLiqE4: open: permission denied  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;bind&#x2F;example&#x2F;** rw,\n\nsystemctl reload apparmor.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"2-2-测试记录同步\"><a href=\"#2-2-测试记录同步\" class=\"headerlink\" title=\"2.2 测试记录同步\"></a>2.2 测试记录同步</h2><ul>\n<li>修改主服务器，解析记录，测试从服务器的同步情况  <pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.top.  admin.example.top. (\n                                   2   ; serial   [[每次需要修改版本号]]\n                                1200   ; refresh \n                                900    ; retry \n                                900    ; expire\n                               1200 )  ; minimum \n@        IN      NS      nameserver\n@        IN      NS      nameserver2              [[较版本1新增]]\nnameserver   IN  A       10.13.3.107\nnameserver2  IN  A       10.13.3.109              [[较版本1新增]]\ntest         IN  A       10.13.3.109\nk8s          IN  A       10.13.3.110\nme           IN  A       10.10.6.1               [[较版本1新增]]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<p><strong>热加载</strong>新增的配置，每次修改记录时，需要同步修改<em><strong>版本号</strong></em>，slave 才能同步成功  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo rndc reload     # 主服务器执行即可\ndig -t a me.example.top @10.13.3.109<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>当从服务器有解析文件的，解析记录仍会向主服务器请求，主服务器宕机，从服务器缓存过期之后，也仍不能加载并实施解析区域记录文件  </li>\n<li>同一个网段在多个acl下，将不能正常解析。</li>\n</ul>\n<h2 id=\"2-3-测试公网域名\"><a href=\"#2-3-测试公网域名\" class=\"headerlink\" title=\"2.3 测试公网域名\"></a>2.3 测试公网域名</h2><ul>\n<li>此時公网域名成功解析得到的是保留ip地址，ping 域名不能成功—-因为公司的 ip 做了加密  </li>\n<li>不能成功解析则无记录返回</li>\n</ul>\n<hr>\n<h1 id=\"三、-安全\"><a href=\"#三、-安全\" class=\"headerlink\" title=\"三、 安全\"></a>三、 安全</h1><h2 id=\"3-1-功能同于bind-chroot\"><a href=\"#3-1-功能同于bind-chroot\" class=\"headerlink\" title=\"3.1 功能同于bind-chroot\"></a>3.1 功能同于bind-chroot</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">vi &#x2F;etc&#x2F;apparmor.d&#x2F;usr.sbin.named\n# 检查是否存在，否则增加以下内容\n  &#x2F;etc&#x2F;bind&#x2F;** r,\n  &#x2F;var&#x2F;lib&#x2F;bind&#x2F;** rw,\n  &#x2F;var&#x2F;lib&#x2F;bind&#x2F; rw,\n  &#x2F;var&#x2F;cache&#x2F;bind&#x2F;** lrw,\n  &#x2F;var&#x2F;cache&#x2F;bind&#x2F; rw,\n  &#x2F;var&#x2F;log&#x2F;named&#x2F;** rw,\n  &#x2F;var&#x2F;log&#x2F;named&#x2F; rw,<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3-2-开启DNSSEC验证，参考\"><a href=\"#3-2-开启DNSSEC验证，参考\" class=\"headerlink\" title=\"3.2 开启DNSSEC验证，参考\"></a>3.2 开启DNSSEC验证，<a href=\"https://www.cnblogs.com/anpengapple/p/5879363.html\">参考</a></h2><ul>\n<li><p>作用：对域名进行签名认证，保证域名的完整性和正确性，不会被修改  </p>\n</li>\n<li><p>在新增的 dnssec_keys 目录中生成密钥  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo dnssec-keygen -f KSK -a RSASHA256 -b 2048 -n ZONE example.net.\nsudo dnssec-keygen -a RSASHA256  -b 2048 -n ZONE example.net.\n\n# 查看本域应用所需的密钥文件  \nls \nKexample.net.+008+16296.key   Kexample.net.+008+16296.private   Kexample.net.+008+23579.key  Kexample.net.+008+23579.private<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>将前面生成的两个公钥添加到区域配置文件末尾  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m )  ; minimum\n\n@        IN      NS      nameserver\n\nnameserver       IN      A       10.13.3.106\nldap   IN  A   10.13.3.107\ntest   IN  A   10.13.3.105\n\n$INCLUDE  &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;dnssec_keys&#x2F;Kexample.net.+008+23579.key&quot;\n$INCLUDE  &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;dnssec_keys&#x2F;Kexample.net.+008+16296.key&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>对区域文件签名，会生成一个新的zones.sigend. 如果新增了解析记录，需要再次加密  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo dnssec-signzone -K &#x2F;etc&#x2F;bind&#x2F;example&#x2F;dnssec_keys&#x2F; -o example.net. &#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones\n -K  指定密钥文件路径    -o  域名   路径是区域解析文件路径<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>改动引用解析文件路径的位置  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">view &quot;example&quot; &#123;\n  match-clients &#123; example; &#125;;\n  zone &quot;example.net&quot; IN  &#123;\n       type master;\n       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones.signed&quot;;\n  &#125;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>生成信任锚文件 &#x2F;etc&#x2F;bind&#x2F;example&#x2F;sec-trust-anchors.conf  </p>\n</li>\n<li><p>这里面的两条内容是刚才生成的两个密钥的内容。用公钥比较方便（也就是.key的文件）。注意复制的时候去掉“IN”和“DNSKEY”这两个词，以及后面的key要加引号  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">trusted-keys &#123;\n   example.net.   256 3 8  &quot;AwEAAb+3BGqXqE&#x2F;WwDICGRONYv1w4savuaD4cJ&#x2F;VRL6xGg2b54OilEWE WMzUAOw4B&#x2F;sPyKZDG&#x2F;XTnaW4mD756l&#x2F;swRuq9kO&#x2F;sktgu4ZP4onmqeFM sdMTTmxesp6Q6ebqAPNzQfKyZwqX6Iq00qGslUmxr5FSOLWjGoze8afm TxbPW6Hi7JQ85mJ+TkpUNa+ymDS4qKi87rSi8NQTDbsZ0wH7+zX1TBOP jeUI&#x2F;JsxD&#x2F;bu1kD97AP9u2Sd4D8U0vyN8fN4LIIKfA5vurPaWPfQIM8r I0KQueAHdNLOPjaEWcKg&#x2F;rBHFWZPxIeQGM8D2VXwkdPL5fefC59wONhK ys2RMqv3DIM&#x3D;&quot;;\n  example.net.   257 3 8 &quot;AwEAAbZo3hpm+0+32jgrTXog3CCUTTctP3LoBx1F0nbpoEBkWN1CA&#x2F;&#x2F;O 7fzNY08pwblkKKW&#x2F;LkYiQNQEQq50ThouV9UJ+CFRf&#x2F;Fju6ggIpWpNjsu 8c2+zROZdJ9d2T6JnVTYPo1Iyn8ufn0hFjPRrwdvfQKSmnI9ZRx2eRFc ZFJpqNTj2LwzqoEKrbOn4oywqTWJL1Hyjv8e&#x2F;kBojy7BghKWYnTGlpha 9CSin17qUQCY+o0qMzmezq+&#x2F;AbxhdJwV9KYHWzWvNZjyyjBLyxwwsV4F shgmXm2tTuW5gPrnbfzaP+R&#x2F;cElzl03mtjmJ&#x2F;&#x2F;g5wWMMV8QKemBpbNoR ajzYYhhocWk&#x3D;&quot;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>引入此信任锚文件 &#x2F;etc&#x2F;bind&#x2F;name.conf  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">include &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;sec-trust-anchors.conf&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>重启服务  </p>\n</li>\n<li><p>验证  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">dig +dnssec  test.example.net  @10.13.3.106\n\n; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; +dnssec test.example.net @10.13.3.106\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 28767\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags: do; udp: 1232\n; COOKIE: 0d6b52d25063b09401000000655592b51d0f8f6c0b072961 (good)\n;; QUESTION SECTION:\n;test.example.net.                        IN      A\n\n;; ANSWER SECTION:\ntest.example.net.         600     IN      A       10.13.3.105\ntest.example.net.         600     IN      RRSIG   A 8 3 600 20231216022642 20231116022642 16296 example.net. iUSB+maT6y22ySZdEZHElShHCVDbmjnHez39eosniP1wqvquyadVydlT lZ3XZbUMNTV3WrZhLEjuGaVwNajvAqeY07IPCivpr+VCuIPXccONBwZE 3ZRX5B2PcGnrhMWupH+jcoT5NTy5pAEdm5JXbtJljFyJk1XxQVhanzJO &#x2F;TY7YMJWWDbj3WnywkEPQyP5UYExl4Y0E3BPUX&#x2F;J4xuCspTovQhqo6BM HaC3XFMG1Li9CbHcfNkUjVtdi8oQmAdM6lMqFTz5KNpIRppqhEukcD9o w9slLc1vpjDwqzO7xPls8S9WbzMeHzHNbIrPcv88MQWUAIVyqodbhOvj 8ZKlgg&#x3D;&#x3D;\n\n;; Query time: 0 msec\n;; SERVER: 10.13.3.106#53(10.13.3.106)\n;; WHEN: Thu Nov 16 11:55:33 CST 2023\n;; MSG SIZE  rcvd: 384<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>问题：  </p>\n</li>\n<li><p>配置后，每个客户端需要添加信任锚文件以作签名验证  </p>\n</li>\n<li><p>这个签名后的zone可以被伪造，使用dig命令输出的文件修改伪造</p>\n</li>\n</ul>\n<h2 id=\"3-3-创建视图管理，智能DNS\"><a href=\"#3-3-创建视图管理，智能DNS\" class=\"headerlink\" title=\"3.3 创建视图管理，智能DNS\"></a>3.3 创建视图管理，智能DNS</h2><p><a href=\"https://www.cnblogs.com/anpengapple/p/5879350.html\">参考1</a><br><a href=\"https://www.cnblogs.com/etangyushan/p/4335521.html\">参考2</a><br><a href=\"http://www.hangdaowangluo.com/archives/1633\">参考3</a><br><a href=\"https://www.server-world.info/en/note?os=Ubuntu_20.04&p=dns&f=5\">ubuntu案例</a>  </p>\n<ul>\n<li>vim  &#x2F;etc&#x2F;bind&#x2F;named.conf</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.options&quot;;\ninclude &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.local&quot;;\n# include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.default-zones&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>cat  &#x2F;etc&#x2F;bind&#x2F;named.conf.options</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">options &#123;\n        directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;\n        listen-on port 53 &#123; localhost; &#125;;\n        recursion yes;        # 允许递归才能在智能dns解析万网域名\n        forwarders &#123;\n          223.5.5.5;\n        &#125;;\n        forward  first;\n        version  &quot;hiden version&quot;;   # 隐藏版本\n        allow-transfer &#123; 10.13.3.106; &#125;;\n        allow-query &#123; \n          example;\n          company;\n        &#125;;\n        auth-nxdomain true;\n        dnssec-validation false; # dns安全拓展的选项\n&#125;;\n# 此处定义目标ip地址段，划分可访问的域\nacl &quot;example&quot; &#123;\n    10.13.3.0&#x2F;24;\n    10.10.6.0&#x2F;24;\n&#125;;\n\nacl &quot;company&quot; &#123;\n    10.10.6.0&#x2F;24;\n&#125;;\n# 此处制定目标ip可以访问的域名的解析区域\nview &quot;example&quot; &#123;\n  match-clients &#123; example; &#125;;\n  include &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.views&quot;;\n&#125;;\n\nview &quot;company&quot; &#123;\n  match-clients &#123; company; &#125;;\n  include &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;company.views&quot;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>views 文件中指定区域解析文件，eg：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">zone &quot;example.net&quot; IN &#123;                                          # 此处域名和 zones 文件中的域名一致\n      type master;\n      file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.net.zones&quot;;\n   &#125;;\nzone &quot;3.13.10.in-addr.arpa.&quot; IN &#123;                         # 此处格式固定，设计反向解析的ip的网络位，和zones文件中的主机位结合成为完整ip地址\n      type master;\n      file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.net.reverse.zones&quot;;\n&#125;;\n\nzone &quot;example.top&quot; IN &#123;                              # 配置此 dns 向 10.13.3.101 这个转发器请求解析 example.top 的域名。在全局 options 配置转发没有成功，选择了此方案。\n      type forward;\n      forwarders &#123;10.13.3.101;&#125;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>正向区域解析文件  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n) \n@        IN      NS      nameserver\n\nnameserver       IN      A       10.13.3.106\n\nldap   IN  A   10.13.3.107\ntest   IN  A   10.13.3.105<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>反向区域解析文件  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$TTL 10M\n@       IN      SOA     example.net.  admin.example.net. (\n                                  1   ; serial\n                                24h   ; refresh\n                                15m   ; retry\n                                1d    ; expire\n                                5m  ; minimum\n)\n       IN      NS      nameserver.      # 不能缺省这个&quot;.&quot;\n\n107  IN    PTR    ldap.example.net.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>测试   </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dig   目标域名   @namserver    +short\ndig   目标ip   -x   +short\nnslookup<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"3-4-加密\"><a href=\"#3-4-加密\" class=\"headerlink\" title=\"3.4 加密\"></a>3.4 加密</h2><p><a href=\"https://runtufenxiang.com/6186/\">知名公共DoT&#x2F;DoH加密DNS服务器</a><br><a href=\"https://devblog.rayonnant.net/creating-a-dot-and-doh-server-using-nginx-and-bind/\">配置</a><br><a href=\"https://dididudu998.github.io/2022/02/15/configure-doh-bind.html\">bind9 tls &#x2F; https</a>网络层的问题是DoT使用853的端口，很容易被封锁，而DoH使用443端口，一般不会被封锁    </p>\n<h3 id=\"3-4-1-DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）\"><a href=\"#3-4-1-DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）\" class=\"headerlink\" title=\"3.4.1 DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）\"></a>3.4.1 DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">tls mycert &#123;\n    cert-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert.pem&quot;;\n    key-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;key.pem&quot;;\n&#125;;\n\noptions &#123;\n    directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;\n    listen-on port 853 tls mycert &#123; localhost; &#125;;\n    forward  first;\n    forwarders &#123;\n            223.5.5.5;\n            120.53.53.53;\n    &#125;;\n    allow-query &#123; 10.13.3.0&#x2F;24;&#125;;\n    auth-nxdomain true;\n    allow-update &#123; none; &#125;;\n  &#x2F;&#x2F;  allow-transfer &#123; 10.13.3.106; &#125;;\n    version  &quot;hiden version&quot;;\n    recursion false;\n&#125;;\n\nzone &quot;example.net&quot;&#123;\n   type master;\n   file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.net.zones&quot;;\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>客户端修改dns地址步骤如下：  </li>\n<li>&#x2F;etc&#x2F;resolv.conf  是软链接，指向了&#x2F;run&#x2F;systemd&#x2F;resolve&#x2F;stub-resolv.conf。直接修改内容会被覆盖，没有意义  </li>\n<li>vim &#x2F;etc&#x2F;systemd&#x2F;resolved.conf  <pre class=\"line-numbers language-none\"><code class=\"language-none\">[Resolve]\nDNS&#x3D;10.13.3.106\n[[FallbackDNS]]&#x3D;\nDNSOverTLS&#x3D;opportunistic  # 或者yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>systemctl restart systemd-resolved.service   </li>\n<li>mv &#x2F;etc&#x2F;resolv.conf   &#x2F;etc&#x2F;resolv.conf.bak  </li>\n<li>ln -s &#x2F;run&#x2F;systemd&#x2F;resolve&#x2F;resolv.conf &#x2F;etc&#x2F;</li>\n</ul>\n<h3 id=\"3-4-2-问题\"><a href=\"#3-4-2-问题\" class=\"headerlink\" title=\"3.4.2 问题\"></a>3.4.2 问题</h3><ul>\n<li><p>以上配置之后，使用特定命令发现 DOT 是成功的，例如  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">resolvectl query mee.example.net\n\tmee.example.net: 10.10.6.1                       -- link: ens160\n\t\n\t-- Information acquired via protocol DNS in 1.7ms.\n\t-- Data is authenticated: no\n\ndig +tls mee.example.net\n\t; &lt;&lt;&gt;&gt; DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu &lt;&lt;&gt;&gt; +tls mee.example.net\n\t;; global options: +cmd\n\t;; Got answer:\n\t;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 52275\n\t;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\t;; WARNING: recursion requested but not available\n\t\n\t;; OPT PSEUDOSECTION:\n\t; EDNS: version: 0, flags:; udp: 1232\n\t; COOKIE: 174ae084d3aed77f01000000655474d3fbb4902501bc69cb (good)\n\t;; QUESTION SECTION:\n\t;mee.example.net.                 IN      A\n\t\n\t;; ANSWER SECTION:\n\tmee.example.net.          600     IN      A       10.10.6.1\n\t\n\t;; Query time: 0 msec\n\t;; SERVER: 10.13.3.106#853(10.13.3.106) (TLS)\n\t;; WHEN: Wed Nov 15 15:35:47 CST 2023\n\t;; MSG SIZE  rcvd: 86\n以上访问了dns服务器853端口，所以返回正常解析<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>普通解析会失败  </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dig mee.example.net  （nslookup ssh  ping）\n\t;; communications error to 10.13.3.106#53: connection refused\n\t;; communications error to 10.13.3.106#53: connection refused\n\t;; communications error to 10.13.3.106#53: connection refused\n\t\n\t; &lt;&lt;&gt;&gt; DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu &lt;&lt;&gt;&gt; mee.example.net\n\t;; global options: +cmd\n\t;; no servers could be reached<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>因此，仍然开启 53 端口，二者同时可以使用，但是如果需要特定的方式使用DNSOverTLS ，那么以目前在服务器上的使用上来看，使用是没有意义的。  </p>\n</li>\n<li><p>在服务器使用 53，在浏览器使用自建 DOH，是适宜的</p>\n</li>\n</ul>\n<h3 id=\"3-4-3-DOH-加密和转发\"><a href=\"#3-4-3-DOH-加密和转发\" class=\"headerlink\" title=\"3.4.3  DOH 加密和转发\"></a>3.4.3  DOH 加密和转发</h3><ul>\n<li><p>配置  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tls doh &#123;\n   key-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;key.pem&quot;;\n   cert-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;ca.pem&quot;;\n&#125;;\n\nhttp dns-over-https &#123;\n    endpoints &#123;&quot;&#x2F;dns-query&quot;;&#125;;\n&#125;;\n\noptions &#123;\n        listen-on port 443 tls doh http default &#123; localhost; &#125;;\n\t\t......\n&#125;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>检测  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">dig +https  test.example.net  @10.13.3.106 A\n\n; &lt;&lt;&gt;&gt; DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu &lt;&lt;&gt;&gt; +https test.example.net @10.13.3.106 A\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 15036\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 1232\n; COOKIE: dcdab07360fe04b2010000006555c9c6572491f7e49a2f35 (good)\n;; QUESTION SECTION:\n;test.example.net.                        IN      A\n\n;; ANSWER SECTION:\ntest.example.net.         600     IN      A       10.13.3.105\n\n;; Query time: 0 msec\n;; SERVER: 10.13.3.106#443(10.13.3.106) (HTTPS)\n;; WHEN: Thu Nov 16 15:50:30 CST 2023\n;; MSG SIZE  rcvd: 87<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>使用<br>此时在客户端使用 DOH ，浏览器设置 use secure dns ，custom url ： <a href=\"https://nameserver.example.net/dns-query\">https://nameserver.example.net/dns-query</a><br>在客户端其他程序的使用中，仍然会访问 dns 的 53 端口</p>\n</li>\n</ul>\n<h2 id=\"3-5-其他安全实践\"><a href=\"#3-5-其他安全实践\" class=\"headerlink\" title=\"3.5 其他安全实践\"></a>3.5 其他安全实践</h2><ul>\n<li>下列参考<a href=\"https://www.secpulse.com/archives/52634.html\">来源</a>  <pre class=\"line-numbers language-none\"><code class=\"language-none\">隐藏BIND版本号\n限定哪台主机能够发起区域传输<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">version  &quot;hiden version&quot;;                             #  隐藏版本信息\nallow-transfer &#123; 221.236.9.9; &#125;;    #  指定允许某从服务器进行区域传输到该服务器，此配置一般在主服务器配置<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"四、web-管理以及反向代理\"><a href=\"#四、web-管理以及反向代理\" class=\"headerlink\" title=\"四、web 管理以及反向代理\"></a>四、web 管理以及反向代理</h1><p><a href=\"https://www.mmcloud.com/2863.html\">安装 webmin工具</a><br><a href=\"https://devpress.csdn.net/cloud/6304db5f7e6682346619cf4b.html\">使用ngingx反代</a>  </p>\n<ul>\n<li>路径nginx&#x2F;conf.d&#x2F;webmin.conf   （检查443、80端口，确认dns地址和解析记录）  <pre class=\"line-numbers language-none\"><code class=\"language-none\">upstream webmin &#123;\n  server 10.13.3.107:10000;\n&#125;\n\nserver &#123;\n  listen 80;\n  server_name webmin.example.net;\n  return 301 https:&#x2F;&#x2F;$server_name$request_uri;\n&#125;\n\nserver &#123;\n  server_name webmin.example.net;\n  listen 443 ssl;\n  ssl_certificate webmin&#x2F;tls_ca.pem;\n  ssl_certificate_key webmin&#x2F;tls_key.pem;\n\n  location &#x2F; &#123;\n    proxy_pass      https:&#x2F;&#x2F;webmin;\n    proxy_redirect  off;\n    proxy_set_header   Host             $host:$server_port;\n    proxy_set_header   X-Real-IP        $remote_addr;\n    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto &quot;https&quot;;\n    proxy_connect_timeout      10;\n    proxy_send_timeout         10;\n    proxy_read_timeout         10;\n    proxy_buffer_size          128k;\n    proxy_buffers              32 32k;\n    proxy_busy_buffers_size    256k;\n    proxy_temp_file_write_size 256k;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h1 id=\"五、bind9-18-nginx-反向代理\"><a href=\"#五、bind9-18-nginx-反向代理\" class=\"headerlink\" title=\"五、bind9.18  nginx 反向代理\"></a>五、bind9.18  nginx 反向代理</h1><p><a href=\"https://www.infvie.com/ops-notes/nginx-udp-dns.html\">反向代理参考</a>  </p>\n"},{"title":"Failed to Post Blog","date":"2023-12-01T14:47:54.000Z","summary":"Find the reason why cannot Post a new blog","_content":"\nJust because of the wrong layout of lines under the `summary`. \nThe texts of a new line should be recognized.","source":"_posts/Failed-to-Post-Blog.md","raw":"---\ntitle: Failed to Post Blog\ndate: 2023-12-01 22:47:54\ntags: debug\ncategories: ops\nsummary: Find the reason why cannot Post a new blog\n---\n\nJust because of the wrong layout of lines under the `summary`. \nThe texts of a new line should be recognized.","slug":"Failed-to-Post-Blog","published":1,"updated":"2023-12-01T15:12:40.006Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrhtjaio0009ltm7abyd52j2","content":"<p>Just because of the wrong layout of lines under the <code>summary</code>.<br>The texts of a new line should be recognized.</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":"<p>Just because of the wrong layout of lines under the <code>summary</code>.<br>The texts of a new line should be recognized.</p>\n"},{"title":"Multiple Domians in OpenLdap Use Case","date":"2023-10-24T15:37:36.000Z","toc":true,"summary":"记录自己 OpenLDAP 在多域中的使用，以及集成应用且跨域实现用户登录的测试，内容来源网络和实践。","_content":"# OpenLDAP\n## 一、 概念\n[官方手册](https://www.openldap.org/doc/admin26/guide.html)\n\n### 1.1 常用属性\n- DN：Distinguished Name，LDAP记录项的标识，有唯一性，例如：dc:\"cn=admin,ou=developer,dc=163,dc=com\"  \n- dc= DomainComponent 为域组件，域名的一部分\n- cn=CommonName 为记录名，表示一个实体，最长到80个字符，可以为中文；\n- ou=OrganizationUnit 为组织单位，用于分类，最多四级，每级最长32字符，可以为中文；\n- uid=User id 为用户的唯一标识\n- c=Country 为国家名，可选，为2个字符长\n- o=Organization 为组织名，可选，可以3—64个字符长\n\n## 二、 手动安装和配置 LDAP\n\n### 2.1 安装 slapd (独立的 LDAP 守护进程，同时便于管理服务)\n```\nsudo apt install  -y slapd ldap-utils\n```\n\n### 2.2  重新配置 OpenLDAP，创建 base dn\n```\nsudo dpkg-reconfigure slapd   # 主要配置密码 (密码在下一步重置，便于配置连接)，DNS domain name(即 LDAP 服务中的 base dn)\n\n\t 说明：\n\t第一步回答 No\n\t第二步填写域名，比如 mycompany.com\n\t第三步填写组织名，比如 Company\n\t第四步填写管理员密码，比如 secret；第五步确认管理员密码\n\t第六步选择使用的数据库后端，比如 MDB\n\t第七步选择在清除 slapd 时是否移除数据库，比如 Yes\n\t第八步选择是否移除旧数据库，比如 Yes\n```\n\n### 2.3 生成密码，用于控制台登录的admin帐号，需要保存此密文密码\n```shell\nslappasswd\n\t{SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n```\n\n- 通过数据库修改admin用户的ldif文件\n```ldif\n/etc/ldap/slapd.d/cn\\=config/olcDatabase\\=\\{1\\}mdb.ldif\n\tolcDatabase: {1}mdb\n\tolcSuffix: dc=example,dc=top\n\tolcRootDN: cn=admin,dc=example,dc=top\n\tolcRootPW: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n```\n- olcDatabase: 定义使用的后端数据存储格式,遵循默认\n- olcSuffix: 设置 LDAP 服务的根\n- olcRootDN: 设置管理员用户的 dn\n- olcRootPW: 管理员用户的密码\n- 修改后重启服务\n```\nsudo slaptest -u   # 检查配置文件\nsudo systemctl enable slapd  --now\n\nsudo slapcat        # 输出看到当前数据库内容\n```\n\n### 2.4 正确的修改olcRootPW: 管理员用户的密码\n\n```\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nreplace: olcRootPW\nolcRootPW: example2020  # 保存在数据库文件中的时候将会被加密\n```\n\n```\nldapmodify -Y EXTERNAL -H ldapi:/// -f passmodify.ldif\n```\n\n```\n同时进入web ui，修改admin账户的密码，如果不修改两个密码都能管理域，二者修改一致之后，才是新的管理密码生效\n```\n\n### 2.5 简单结构展示\n\n略\n### 2.6 创建base dn \n\n#### 2.6.1 查看LDAP服务器的根目录信息\n```\nsudo ldapsearch -x -LLL -b '' -s base '(objectclass=*)'\n\tdn:\n\tobjectClass: top\n\tobjectClass: OpenLDAProotDSE\n```\n\n#### 2.6.2 基于 ldif 文件直接创建，不使用图形化交互。创建之后，对这个 base dn 设置管理员的密码\n```\n-\ndn: dc=example,dc=top\nchangetype: add\nobjectClass: top\nobjectClass: domain\n\n\n-\ndn: o=example,dc=example,dc=top\nchangetype: add\nobjectClass: organization\no: example\n```\n\n```\nldapmodify -x -D \"cn=admin,dc=example,dc=top\" -w example@2020  -f organization.ldif\n```\n\n### 2.7 创建多个 DIT + base dn （可以考虑尝试后端用 `mysql` 做数据库）\n#### 2.7.1 为新的库，准备存储路径，并通过`apparmor`做权限限制\n```\nmkdir  /var/lib/ldap2\nchown openldap:openldap  /var/lib/ldap2\nvim /etc/apparmor.d/usr.sbin.slapd\n\t\t# the databases and logs\n\t\t/var/lib/ldap2/ r,\n\t\t/var/lib/ldap2/** rwk,\n\t\t\n\t\t# lock file\n\t\t/var/lib/ldap2/alock kw,\n\nsudo systemctl  reload  apparmor \n```\n\n#### 2.7.2 准备 ldif 文件，创建新的 DIT（可以自定义路径）\n```\ndn: olcDatabase={2}mdb,cn=config\nchangetype: add\nobjectClass: olcDatabaseConfig\nobjectClass: olcMdbConfig\nolcDbDirectory: /var/lib/ldap2/\nolcDatabase: {2}Mdb\nolcDbIndex: objectClass eq\nolcDbIndex: cn,uid eq\nolcDbIndex: uidNumber,gidNumber eq\nolcDbIndex: member,memberUid eq\nolcLastMod: TRUE\nolcMonitoring: TRUE\nolcDBNoSync: TRUE\nolcAccess: {0}to attrs=userPassword by self write by anonymous auth by * non\n e\nolcAccess: {1}to attrs=shadowLastChange by self write by * read\nolcSuffix: dc=example,dc=tech\nolcRootDN: cn=admin,dc=example,dc=tech\nolcRootPW: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n```\n\n```\nsudo  ldapmodify -Y EXTERNAL -H ldapi:/// -f domian2.ldif\n```\n\n#### 2.7.3 新增并设置管理员\n```\n-\ndn: cn=admin,dc=example,dc=tech\nobjectClass: simpleSecurityObject\nobjectClass: organizationalRole\ncn: admin\nuserPassword: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n==========================\n# 以下是playbook中模板文件\n-\ndn: cn=admin,{{ item.base_dn }}  \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n```\n\n```\nsudo ldapadd -x -D \"cn=admin,dc=example,dc=tech\" -w example@2020 -f basedn2.ldif\n```\n\n#### 2.7.4 多 DIT 跨域 ACL\n- 查询服务器的域\n```\nldapsearch -x -H ldap://10.13.3.107 -b \"\" -s base namingContexts\n```\n\n- 设置一个全权限的 acl ，跨域访问，相应的用户需已经提前创建\n\n```\n让这个dn 用户: cn=user.tech,dc=example,dc=tech ;  可以阅读这个base dn : dc=example,dc=top 下的所有条目.\n对应关系：数据库----{1}mdb  存储的数据是来自 dn: dc=example,dc=top 。即，对谁的访问则将 acl 添加在谁的库下  \n\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {2}to dn.subtree=\"dc=example,dc=top\" by dn.base=\"cn=user.tech,dc=example,dc=tech\" read\n```\n\n```\nldapmodify   -Y   EXTERNAL   -H   ldapi:///   -f  xxx\n```\n#### 2.7.5 测试\n```\nroot@example-sys-test-06:/etc/ldap/example# ldapsearch -x -b \"dc=example,dc=top\" -D \"cn=user.tech,dc=example,dc=tech\" -w example@2020\n\t\t# extended LDIF\n\t\t#\n\t\t# LDAPv3\n\t\t# base <dc=example,dc=top> with scope subtree\n\t\t# filter: (objectclass=*)\n\t\t# requesting: ALL\n\t\t#\n\t\t\n\t\t# example.top\n\t\tdn: dc=example,dc=top\n\t\tobjectClass: top\n\t\tobjectClass: domain\n\t\tdc: example\n\t\t\n\t\t# admin, example.top\n\t\tdn: cn=admin,dc=example,dc=top\n\t\tobjectClass: simpleSecurityObject\n\t\tobjectClass: organizationalRole\n\t\tcn: admin\n\t\t\n\t\t# search result\n\t\tsearch: 2\n\t\tresult: 0 Success\n\t\t\n\t\t# numResponses: 3\n\t\t# numEntries: 2\nroot@example-sys-test-06:/etc/ldap/example# ldapsearch -x -b \"dc=example,dc=tech\" -D \"cn=admin,dc=example,dc=top\" -w example@2020\n\t\t# extended LDIF\n\t\t#\n\t\t# LDAPv3\n\t\t# base <dc=example,dc=tech> with scope subtree\n\t\t# filter: (objectclass=*)\n\t\t# requesting: ALL\n\t\t#\n\t\t\n\t\t# search result\n\t\tsearch: 2\n\t\tresult: 32 No such object\n\t\t\n\t\t# numResponses: 1\n```\n\n- 测试的日志\n```\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 fd=12 ACCEPT from IP=127.0.0.1:59834 (IP=0.0.0.0:389)\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=0 BIND dn=\"cn=user.tech,dc=example,dc=tech\" method=128\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=0 BIND dn=\"cn=user.tech,dc=example,dc=tech\" mech=SIMPLE ssf=0\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=0 RESULT tag=97 err=0 text=\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=1 SRCH base=\"dc=example,dc=top\" scope=2 deref=0 filter=\"(objectClass=*)\"\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=1 SEARCH RESULT tag=101 err=0 nentries=2 text=\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=2 UNBIND\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 fd=12 closed\n=================\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 fd=12 ACCEPT from IP=127.0.0.1:34916 (IP=0.0.0.0:389)\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" method=128\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" mech=SIMPLE ssf=0\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=0 RESULT tag=97 err=0 text=\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=1 SRCH base=\"dc=example,dc=tech\" scope=2 deref=0 filter=\"(objectClass=*)\"\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=1 SEARCH RESULT tag=101 err=32 nentries=0 text=\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=2 UNBIND\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 fd=12 closed\n```\n\n## 三、 web管理器配置\n\n### 3.1 安装  LAM （用于管理的Web UI）\n```\napt-get install ldap-account-manager\n```\n访问 http://ip/lam ，lam的所有配置都可以在web端配置，不需要去服务器上修改一行代码\n\n#### 3.1.1 LAM configuration ([helm 安装的主要修改内容](https://check-lc.github.io/ops_blog/2023/12/04/the-first-time-using-helm-charts/))\n<pre>\n主要内容：\n  LDAP_DOMAIN: example.net;ibexample.com\n  LDAP_BASE_DN: dc=example,dc=net;dc=ibexample,dc=com\n  LDAP_SERVER: ldaps://ldap01.example.net\n  LDAP_USER: cn=administrator,dc=example,dc=net\n  LAM_LANG: zh_CN\n  LAM_PASSWORD: lam\n</pre>\n\n- tree view编辑更高效\n\n- 如果选择 docker 安装镜像：ghcr.io/ldapaccountmanager/lam:8.4@sha256:283726bd23510f1c3bfbdcbfe861e6599e070616543aed02e9756075c97a9938\n#### 3.1.3 Nginx反向代理 LAM Web UI\n```\nupstream lam {\n  server 10.13.3.108:8001;\n}\n\nserver {\n  listen 80;\n  server_name lam.example.net;\n  return 301 https://$server_name$request_uri;\n}\n\nserver {\n  server_name lam.example.net;\n  listen 443 ssl;\n  ssl_certificate webmin/tls_ca.pem;\n  ssl_certificate_key webmin/tls_key.pem;\n\n  location / {\n     proxy_pass http://lam/;\n     proxy_set_header Host $host;\n     proxy_set_header X-Real-IP $remote_addr;\n     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n#     proxy_set_header X-Forwarded-Proto \"https\";\n     proxy_read_timeout 1800s;\n     proxy_http_version 1.1;\n     proxy_set_header Upgrade $http_upgrade;\n     proxy_set_header Connection \"upgrade\";\n    }\n  }\n```\n\n### 3.2 测试 phpldapadmin\n```\nSetting up php8.1 (8.1.2-1ubuntu2.14)                       # 版本信息，配置文件完整，存在证书认证并可以指定路径\nSetting up php (2:8.1+92ubuntu1) \nSetting up phpldapadmin (1.2.6.3-0.2)                                       \n```\n#### 3.2.1 安装\n```\napt-get install phpldapadmin -y\nnano /etc/phpldapadmin/config.php\n\t$servers->setValue('server','name','My LDAP Server');                      # 辨识，区分的作用\n\t$servers->setValue('server','host','69.87.216.102');                              #  修改ip为服务器 ip\n\t$servers->;setValue('server','base',array('dc=example,dc=com'));                    # 修改 array 内容为需求的根\n\t$servers->setValue('login','auth_type','session');                                              \n\t$servers->setValue('login','bind_id','cn=admin,dc=example,dc=com');           #   绑定登录帐号admin，相应修改 dn 号即可\n\t$servers->setValue('auto_number','min',array('uidNumber'=>10000,'gidNumber'=>10000));   # 规定 uid，gid 数字表示的起始范围\n```\n#### 3.2.2 为 phpLDAPadmin 配置 Apache\n```\na2dissite 000-default.conf        # 禁用默认的 Apache 虚拟主机配置文件\nsystemctl restart apache2          \n```\n\n## 四、 主从架构(弃用，此配置需要在从服务器拉取 refresh)\n[模式介绍](https://darkdark.top/ch5-replication.html)\n### 4.1 master 加载同步模块\n```\ncat /etc/ldap/mod_syncprov.ldif\n\t\tdn: cn=module,cn=config\n\t\tobjectClass: olcModuleList\n\t\tcn: module\n\t\tolcModulePath: /usr/lib/ldap\n\t\tolcModuleLoad: syncprov.la          # 此配置和上一句配置，实际是在请求这个路径的文件，/usr/lib/ldap/syncprov.la，不确定的可以用 find 查找\n\nldapadd -Y EXTERNAL -H ldapi:/// -f ./mod_syncprov.ldif\n```\n### 4.2 同步设置\n```\nroot@example-sys-test-06:/etc/ldap# cat syncprov.ldif \n\t\tdn: olcOverlay=syncprov,olcDatabase={1}mdb,cn=config       # 此处需要确认自己的数据库是什么样的，{2}hdb--旧版本默认 / {1}mdb--新版本默认\n\t\tobjectClass: olcOverlayConfig\n\t\tobjectClass: olcSyncProvConfig\n\t\tolcOverlay: syncprov\n\t\tolcSpCheckpoint: 100 10\n\t\tolcSpSessionLog: 100\n\nldapadd -Y EXTERNAL -H ldapi:/// -f ./syncprov.ldif                             # 修改并应用条目到 LDAP 服务  -Y EXTERNAL    将使用服务器配置的外部身份验证方法进行身份验证，而不是使用用户名和密码; -H 指定服务器连接; -f 指定文件\n```\n### 4.3 从服务器配置\n```\nroot@example-sys-test-07:/etc/ldap# cat syncrepl.ldif\n\t\tdn: olcDatabase={1}mdb,cn=config\n\t\tchangetype: modify\n\t\tadd: olcSyncRepl\n\t\tolcSyncRepl: rid=002\n\t\t  provider=ldap://10.13.3.106:389/        # 此处开始与上一行有缩进\n\t\t  bindmethod=simple\n\t\t  binddn=\"cn=admin,dc=example,dc=top\"\n\t\t  credentials=example@2020      \n\t\t  searchbase=\"dc=example,dc=top\"\n\t\t  scope=sub\n\t\t  schemachecking=on\n\t\t  type=refreshAndPersist\n\t\t  retry=\"5 5 300 +\"\n\t\t  attrs=\"*,+\"\n\t\t  interval=00:00:00:3\n\nldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/syncrepl.ldif\n```\n- 运行中，修改主服务器内数据后，对从服务器u做刷新，可以看到是否同步\n\n参数说明：\n- provider 为ldap master/slave的地址 ;\n- binddn：为域的基本信息，注这里一定要用管理员进行登录，否则同步不到用户的密码。\n- credentials: ldap管理员的密码\n- searchbase：选择要同步的独立域，根节点\n- scope：设置所有的条目匹配\n- schemachecking：设置同步更新时间检测\n- type：同步模式为refreshAndPersist， refreshOnly 模式下后续操作由客户端轮询完成\n- retry:同步更新重试次数和时间刚开始的5秒重试5次，以后每300秒重试一次\n- attrs:复制全部属性\n- interval 这里设置更新时间，这里为3秒一次，倒数第二个是分钟 以此类推。\n\n\n## 四、 镜像复制（互为主从）\n[模式介绍](https://darkdark.top/ch5-replication.html)\n### 4.1 为某域编辑 mirrorsync.ldif\n```\ndn: cn=module,cn=config         # 此段配置加载s ync 模块\nobjectClass: olcModuleList\ncn: module\nolcModulePath: /usr/lib/ldap\nolcModuleLoad: syncprov.la     # 此配置和上一句，实际是在请求这个路径的文件，/usr/lib/ldap/syncprov.la，不确定的可 find 查找\n\n-\ndn: olcOverlay=syncprov,olcDatabase={1}mdb,cn=config        \n\t # 此处需确认自己的数据库，{2}hdb--为旧版本默认 / {1}mdb--为新版本默认。路径 /etc/ldap/slapd.d/cn\\=config/olcDatabase\\=\\{1\\}mdb.ldif\nobjectClass: olcOverlayConfig\nobjectClass: olcSyncProvConfig\nolcOverlay: syncprov\nolcSpSessionLog: 100\n\n-\ndn: cn=config\nchangetype: modify\nreplace: olcServerID\nolcServerID: 0                                        # 用于标识本机的 server id\n\ndn: olcDatabase={1}mdb,cn=config      # 以下配置用于开启复制，指定主服务器\nchangetype: modify\nadd: olcSyncRepl\nolcSyncRepl: rid=000                             # 标识唯一的 replica id\n  provider=ldaps://ldap01.example.top       # 看上述记录介绍参数\n  bindmethod=simple\n  binddn=\"cn=admin,dc=example,dc=top\"\n  credentials=example@2020\n  searchbase=\"dc=example,dc=top\"\n  tls_reqcert=allow\n  scope=sub\n  schemachecking=on\n  type=refreshAndPersist\n  retry=\"30 5 300 3\"\n  interval=00:00:05:00\n-\nadd: olcMirrorMode                        # 开启 mirror mode\nolcMirrorMode: TRUE\n\n```\n\n### 4.2 ldap01.example.top下编辑 mirrorsync.ldif\n```\ndn: cn=module,cn=config\nobjectClass: olcModuleList\ncn: module\nolcModulePath: /usr/lib/ldap\nolcModuleLoad: syncprov.la\n\n-\ndn: olcOverlay=syncprov,olcDatabase={1}mdb,cn=config\nobjectClass: olcOverlayConfig\nobjectClass: olcSyncProvConfig\nolcOverlay: syncprov\nolcSpSessionLog: 100\n\n-\ndn: cn=config\nchangetype: modify\nreplace: olcServerID\nolcServerID: 1\n\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nadd: olcSyncRepl\nolcSyncRepl: rid=001\n  provider=ldaps://ldap.example.top\n  bindmethod=simple\n  binddn=\"cn=admin,dc=example,dc=top\"\n  credentials=example@2020\n  searchbase=\"dc=example,dc=top\"\n  tls_reqcert=allow\n  scope=sub\n  schemachecking=on\n  type=refreshAndPersist\n  retry=\"30 5 300 3\"\n  interval=00:00:05:00\n-\nadd: olcMirrorMode\nolcMirrorMode: TRUE\n\n```\n#### 4.2.1 加载配置\n```\nldapadd -Y EXTERNAL -H ldapi:/// -f mirrorsync.ldif\n```\n\n## 五、 TLS加密（自签名/权威证书）\n（自签名证书加密连接 nextcloud 失败，使用不便，采用 权威证书（多域合一）或stunnel）\n\n### 5.1 CA中心创建证书\n\t此时使用LDAP 主服务器 作为 CA 中心，自签名\n- 安装 gnutls-bin 和 ssl-cert 包\n```\nsudo apt install gnutls-bin ssl-cert\n```\n- 为证书授权中心创建私钥\n```\nsudo certtool --generate-privkey --bits 4096 --outfile /etc/ssl/private/mycakey.pem\n```\n- 创建模板文件来定义CA\n```\n/etc/ssl/ca.info\n\t cn = example (example company)  \n\t ca\n\t cert_signing_key\n\t expiration_days = 3650\n```\n- 创建自签名 CA (根)证书\n```\nsudo certtool --generate-self-signed \\\n--load-privkey /etc/ssl/private/mycakey.pem \\\n--template /etc/ssl/ca.info \\\n--outfile /usr/local/share/ca-certificates/mycacert.crt\n```\n- Note：\n\t`--outfile`路径是正确的，将CA证书写入`/usr/local/share/ca-certificates`。\n\t**update-ca-certificates** 将从这里获取受信任的本地CA。如果要从`/usr/share/ca-certificates`获取CA，需要调用`dpkg-reconfigure ca-certificates`\n\n- 将新的 CA 根证书添加到受信任 CA 列表\n```\nsudo update-ca-certificates     # 会创建一个/etc/ssl/certs/mycacert.pem符号链接，指向/usr/local/share/ca-certificates中的真实文件\n```\n### 5.2 创建 LDAP 服务的服务器私钥与证书\n- 创建私钥\n```\nsudo certtool --generate-privkey \\\n--bits 2048 \\\n--outfile /etc/ldap/ldap01_slapd_key.pem\n```\n- 服务器信息文件\n```\n/etc/ssl/ldap01.info\n\torganization = example\n\tcn = ldap01.example.top                     # 服务器证书的DN必须使用CN属性来命名服务器，并且CN必须携带服务器的完全限定域名，dns 需要有 A 记录解析\n\ttls_www_server\n\tencryption_key\n\tsigning_key\n\texpiration_days = 365\n证书有效期为1年，仅对_`ldap01`_主机名有效\n```\n- 创建LDAP服务器的证书\n```\nsudo certtool --generate-certificate \\\n--load-privkey /etc/ldap/ldap01_slapd_key.pem \\\n--load-ca-certificate /etc/ssl/certs/mycacert.pem \\\n--load-ca-privkey /etc/ssl/private/mycakey.pem \\\n--template /etc/ssl/ldap01.info \\\n--outfile /etc/ldap/ldap01_slapd_cert.pem\n```\n- 调整权限\n```\nsudo chgrp openldap /etc/ldap/ldap01_slapd_key.pem\nsudo chmod 0640 /etc/ldap/ldap01_slapd_key.pem\n```\n- ca根证书加入到受信列表\n```\nsudo cp   cacertificatefile  /usr/local/share/ca-certificates/mycacert.crt\nsudo update-ca-certificates\n```\n  \n- 对LDAP服务配置证书\n```\ndn: cn=config\nadd: olcTLSCACertificateFile\nolcTLSCACertificateFile: /etc/ssl/certs/mycacert.pem\n-\nadd: olcTLSCertificateFile\nolcTLSCertificateFile: /etc/ldap/ldap01_slapd_cert.pem\n-\nadd: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: /etc/ldap/ldap01_slapd_key.pem\n```\n- 配置slapd-config数据库：\n```\nsudo ldapmodify -Y EXTERNAL -H ldapi:/// -f certinfo.ldif \n```\n- 报错调整，更改`certinfo.ldif`，将`add`改成了`replace`，可以解决以下问题。修改后再次执行`ldapmodify`\n```\nldapmodify -Y EXTERNAL -H ldapi:/// -f certinfo.ldif \n\tSASL/EXTERNAL authentication started SASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth \n\tSASL SSF: 0 \n\tmodifying entry \"cn=config\" ldap_modify: Inappropriate matching (18) \n\tadditional info: modify/add: olcTLSCACertificateFile: no equality matching rule\n```\n- ldap-client增添配置文件\n```\n/etc/ldap/ldap.conf\n\t# LDAP Defaults\n\t# See ldap.conf(5) for details\n\t# This file should be world readable but not world writable.\t\n\tBASE       dc=example,dc=top                                                      # LDAP服务的基础DN\n\tURI ldap://localhost:389 ldaps://localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  /etc/ssl/certs/ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径\n\tTLS_REQCERT demand                                                        # \"demand\"，表示需要验证服务器的证书\n```\n- 需要访问 LDAPS（LDAP over SSL），需要编辑配置，并重启 slapd\n```\n/etc/default/slapd\n\tSLAPD_SERVICES=\"ldap:/// ldapi:/// ldaps:///\"\n```\n- 测试启动 TLS\n```\nldapwhoami -x -ZZ -H ldap://ldap01.example.com\nanonymous\n```\n- 测试连接\n```\nldapwhoami -x -H ldaps://ldap01.example.com\nanonymous\n```\n\n### 5.3 LDAP 从服务器的 TLS, 在主服务器创建后，拷贝证书到从服务器\n-  指定目录保存\n```\nmkdir ldap02-ssl\ncd ldap02-ssl\ncerttool --generate-privkey \\\n--bits 2048 \\\n--outfile ldap02_slapd_key.pem\n```\n- 编辑信息文件ldap02.info\n```\norganization = example\ncn = ldap02.example.top                      \ntls_www_server\nencryption_key\nsigning_key\nexpiration_days = 365\n```\n- 创建证书\n```\nsudo certtool --generate-certificate \\\n--load-privkey ldap02_slapd_key.pem \\\n--load-ca-certificate /etc/ssl/certs/mycacert.pem \\\n--load-ca-privkey /etc/ssl/private/mycakey.pem \\\n--template ldap02.info \\\n--outfile ldap02_slapd_cert.pem\n```\n\n```\ncp /etc/ssl/certs/mycacert.pem .\nscp -r ldap02-ssl user@ldap02_ip:\n```\n- 从服务器中安装证书\n```\nsudo cp ldap02_slapd_cert.pem ldap02_slapd_key.pem /etc/ldap\nsudo chgrp openldap /etc/ldap/ldap02_slapd_key.pem\nsudo chmod 0640 /etc/ldap/ldap02_slapd_key.pem\nsudo cp mycacert.pem /usr/local/share/ca-certificates/mycacert.crt\nsudo update-ca-certificates\n```\n- 对LDAP服务配置证书 `./certinfo.ldif `\n```\ndn: cn=config\nadd: olcTLSCACertificateFile\nolcTLSCACertificateFile: /etc/ssl/certs/mycacert.pem\n-\nadd: olcTLSCertificateFile\nolcTLSCertificateFile: /etc/ldap/ldap02_slapd_cert.pem\n-\nadd: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: /etc/ldap/ldap02_slapd_key.pem\n```\n- 配置slapd-config数据库：\n```\nsudo ldapmodify -Y EXTERNAL -H ldapi:/// -f certinfo.ldif \n```\n- 增添配置文件\n```\n/etc/ldap/ldap.conf\n\tBASE       dc=example,dc=top                                                      # LDAP服务的基础DN\n\tURI ldap://localhost:389 ldaps://localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  /etc/ssl/certs/ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径\n\tTLS_REQCERT demand                                                        # \"demand\"，表示需要验证服务器的证书\n```\n- 需要访问 LDAPS（LDAP over SSL），需要编辑配置，并重启 slapd\n```\n/etc/default/slapd\n\tSLAPD_SERVICES=\"ldap:/// ldapi:/// ldaps:///\"\n```\n- 测试启动 TLS\n```\nldapwhoami -x -ZZ -H ldap://ldap02.example.top\nanonymous\n```\n- 测试连接\n```\nldapwhoami -x -H ldaps://ldap02.example.top\nanonymous\n```\n\n### 5.4 使用合法证书\n\n- 将新的 CA 根证书添加到受信任 CA 列表（客户端操作，权威证书按理不需要拷贝，未测试）\n```\nsudo   cp   _.example.top-chain.pem   /usr/local/share/ca-certificates/mycacert.crt\nsudo update-ca-certificates\n```\n\n- 准备服务器证书和私钥（服务端）\n```\n ls /etc/ldap\n\tcertinfo.ldif   _.example.top-crt.pem   _.example.top-key.pem\nsudo chgrp openldap /etc/ldap/_.example.top-key.pem\nsudo chmod 0640 /etc/ldap/_.example.top-key.pem\n```\n\n- certinfo.ldif\n```\ndn: cn=config\nchangetype: modify\nreplace: olcTLSCACertificateFile\nolcTLSCACertificateFile: /etc/ssl/certs/mycacert.pem\n-\nreplace: olcTLSCertificateFile\nolcTLSCertificateFile: /etc/ldap/_.example.top-crt.pem\n-\nreplace: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: /etc/ldap/_.example.top-key.pem\n\n```\n\n```\nsudo ldapadd  -Y   EXTERNAL  -H  ldapi:///   -f    certinfo.ldif\n```\n\n\n- 增添配置文件，这是客户端需要连接 ldap 服务器使用的配置。可以忽略。\n```\n/etc/ldap/ldap.conf\n\tBASE       dc=example,dc=top                                                      # LDAP服务的基础DN\n\t[[URI]] ldap://localhost:389 ldaps://localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  /etc/ssl/certs/ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径，必需\n\tTLS_REQCERT allow                                                      # \"demand\"，表示需要验证服务器的证书\n```\n- 启用 ldaps，重启 slapd\n```\n/etc/default/slapd\n\tSLAPD_SERVICES=\"ldap:/// ldapi:/// ldaps:///\"\n```\n\n\n### 5.5 使用 nextcloud 测试加密连接\n\n- docker 安装 nexcloud，登录 UI ，右上角点击账户，选择应用\n- 应用捆绑包，启用 LDAP user and group backend\n- 设置连接\n- ldaps连接(严格一致才是tls加密，nextcloud应该只信任权威证书)\n\n- 明文传输 \n\n### 5.6 stunnel 加密传输两个应用的数据(例：phpldapadmin)\n\n链路： ldap user ui  ---- stunnel client  accept  ----  stunnel client connect  ---- stunnel server accept  ---- stunnel server connect ----ldap server port\n```\napt install -y stunnel4\nvim /etc/default/stunnel4\n\tENABLED=1\n```\n\n```\n# stunnel 服务端\n\tcert = /etc/stunnel/stunnel.pem\n\tkey = /etc/stunnel/stunnel-key.pem\n\tverify = 3\n\tclient = no\n\tdebug = 6\n\tpid = /var/run/stunnel4/stunnel4.pid\n\t\n\t[ldap]\n\taccept = 10.13.3.106:6360                # 监听 stunnel 服务的流量，客户端（是指stunnel 客户端）将连接此目标并发送流量到这里\n\tconnect = 10.13.3.106:389                # 转发到 stunnel 加密连接的服务的端口\n\tCAfile = /etc/stunnel/stunnel.pem\n\n# stunnel 客户端\n\tcert = /etc/stunnel/stunnel.pem\n\tkey = /etc/stunnel/stunnel-key.pem\n\tverify = 3\n\tclient = yes\n\tdebug = 6\n\tsetuid = stunnel4\n\tsetgid = stunnel4\n\tpid = /var/run/stunnel4/stunnel4.pid\n\t\n\t[ldap]\n\taccept = 10.13.3.107:389                # 监听 stunnel 服务的流量，客户端（是指ldap的客户端）将连接此目标并发送流量到这里\n\tconnect = 10.13.3.106:6360              # 加密连接并转发到 stunnel 的服务端\n\tCAfile = /etc/stunnel/stunnel.pem\n```\n\n```\n/etc/phpldapadmin/config.php\n\t$servers->setValue('server','host','69.87.216.102');  # 指向 stunnel 客户端，和他本地监听的端口\n\t$servers->setValue('server','port',389);\t\n```\n## 六、 其他模块\n### 6.1 日志模块\n```\n/etc/ldap/loglevel.ldif\n\tdn: cn=config\n\tchangetype: modify\n\treplace: olcLogLevel\n\tolcLogLevel: stats\n\nldapmodify  -Y  EXTERNAL  -H  ldapi:///  -f  loglevel.ldif               # 日志在/var/log/syslog | grep slapd , 比默认的级别详细\n```\n### 6.2 memberOf 开启\n```\n/etc/ldap/refint.ldif\n\t# enable_refint.ldif\n\tdn: cn=module{0},cn=config\n\tchangetype: modify\n\tadd: olcModuleLoad\n\tolcModuleLoad: refint.la\n\t-\n\tdn: olcOverlay=refint,olcDatabase={1}mdb,cn=config\n\tchangetype: add\n\tobjectClass: olcOverlayConfig\n\tobjectClass: olcRefintConfig\n\tolcOverlay: refint\n\nldapadd -Q -Y EXTERNAL -H ldapi:// -f refint.ldif\n```\n\n```\n/etc/ldap/memberof.ldif\n\tdn: cn=module,cn=config\n\tchangetype: add\n\tcn: module\n\tobjectClass: olcModuleList\n\tolcModulePath: /usr/lib/ldap\n\t\n\tdn: cn=module{0},cn=config\n\tchangetype: modify\n\tadd: olcModuleLoad\n\tolcModuleLoad: memberof.la\n\t\n\tdn: olcOverlay=memberof,olcDatabase={1}mdb,cn=config\n\tchangetype: add\n\tobjectClass: olcConfig\n\tobjectClass: olcMemberOf\n\tobjectClass: olcOverlayConfig\n\tobjectClass: top\n\tolcOverlay: memberof\n\tolcMemberOfDangling: ignore\n\tolcMemberOfRefInt: TRUE\n\tolcMemberOfGroupOC: groupOfNames\n\tolcMemberOfMemberAD: member\n\tolcMemberOfMemberOfAD: memberOf\n\nldapmodify -Y EXTERNAL -H ldapi:/// -f memberof.ldif\n```\n\n- 为条目添加此属性：LDIF文件中先创建用户的dn，然后创建目标组的dn，在创建组的时候将关联的用户写在member属性中\n\n### 6.3 Self Service Password 自助密码管理\n- 容器部署，解决 php 依赖准备繁琐\n- 镜像 ltbproject/self-service-password:1.5.3\n- 为 admin 用户设置修改密码的权限\n```\n下列权限可以使得 \"admin,example,net\" 对这个域 \"dc=example,dc=tech\" 做用户添加、属性修改\nolcAccess: {0}to attrs=userPassword,shadowLastChange by dn=\"cn=admin,dc=example,dc=net\" write by anonymous auth by self write by * none\nolcAccess: {1}to dn.subtree=\"dc=example,dc=tech\" by dn.base=\"cn=admin,dc=example,dc=net\" write\n```\n- 需要对企业邮箱帐号开启设置-帐号与安全-客户端设置-客户端授权密码\n- ssp.conf.php  成功配置版本，并映射到容器： /home/example/sspasswd/conf.php:/var/www/conf/config.inc.local.php\n```php\n<?php\n$debug = false;\n$keyphrase = \"example\";\n$use_sms = false;\n$use_questions = false;\n$lang = \"cn,zh-CN\";\n$use_change = true;\n#$reset_url = $_SERVER['HTTP_X_FORWARDED_PROTO'] . \"://\" . $_SERVER['HTTP_X_FORWARDED_HOST'] . $_SERVER['SCRIPT_NAME'];\n$reset_url = \"https://ssp.example.net\" . $_SERVER['HTTP_X_FORWARDED_HOST'] . $_SERVER['SCRIPT_NAME'];\n$show_menu = false;\n$logo = \"images/logo.png\";                # 这两项在配置前，需要确保图片映射路径在容器内部的 /var/www/html/images 下\n$background_image = \"images/back.png\";\n$default_action = \"sendtoken\";        # 默认展示在首页的修改密码的方式\n$show_menu = false;              # 关闭顶部的修改方式选择菜单\n\n# LDAP\n\n$ldap_url = \"ldap://10.13.3.107/\";\n$ldap_starttls = false;\n$ldap_binddn = \"cn=admin,dc=example,dc=net\";\n$ldap_bindpw = 'example@2020';\n#$ldap_bindpw = \"{SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\";\n$ldap_base = \"dc=example,dc=net\";\n#$ldap_base = \"dc=example,dc=tech\";    # 在这里同时书写两个，只会生效后一个域, 使用两个实例连接 ldap 服务\n$ldap_fullname_attribute = \"cn\";\n$ldap_filter = \"(&(objectClass=inetOrgPerson)($ldap_fullname_attribute={login}))\";\n$ldap_use_exop_passwd = false;\n$ldap_use_ppolicy_control = false;\n$TLS_REQCERT = \"allow\";\n\n# email\n$mail_attributes = array(\"mail\", \"gosaMailAlternateAddress\", \"proxyAddresses\");\n$mail_address_use_ldap = true;\n$mail_from = \"user5@example.net\";\n$mail_from_name = \"密码自主修改服务\";\n$mail_signature = \"如有疑问,请联系运维同事,英博智云.\";\n$notify_on_change = false;\n$mail_protocol = 'smtp';\n$mail_smtp_host = 'smtphz.qiye.163.com';\n$mail_smtp_auth = true;\n$mail_smtp_user = \"user5@example.net\";\n$mail_smtp_pass = 'TdhYDdgvN7Hpky5a';\n$mail_smtp_port = 465;\n$mail_smtp_timeout = 30;\n$mail_smtp_keepalive = false;\n$mail_smtp_secure = 'ssl';\n$mail_smtp_autotls = false;\n$mail_smtp_options = array();\n$mail_contenttype = 'text/plain';\n$mail_wordwrap = 0;\n$mail_charset = 'utf-8';\n$mail_priority = 3;\n\n# password policy\n$hash = \"SSHA\"; # 修改的用户密码传递过程中会采取这里指定的加密\n$pwd_min_length = 8;\n$pwd_max_length = 20;\n$pwd_min_lower = 1;\n$pwd_min_upper = 1;\n$pwd_min_digit = 1;\n$pwd_min_special = 1;\n$pwd_special_chars = \"^a-zA-Z0-9\";\n$pwd_complexity = 4;\n$pwd_no_reuse = true;\n$pwd_forbidden_words = array(\"example\", \"example\", \"example\", \"password\");\n$pwd_show_policy_pos = \"above\";\n$pwd_show_policy = \"onerror\";\n?>\n```\n\n```\ndocker run -p 8000:80 \\\n> --restart=always \\\n> --name sspass \\\n> -v /home/example/sspasswd/conf.php:/var/www/conf/config.inc.local.php \\\n> -itd docker.io/ltbproject/self-service-password\n```\n\n#### 6.3.1 不能进入修改链接 Token is not valid\n```\n注释了这两项\n#$use_tokens = true;\n#$crypt_tokens = true;\n```\n\n#### 6.3.2 反向代理 Self Service Password\n```\nupstream ssp {\n  server 10.13.3.108:8000;\n}\n\nserver {\n    listen 80;\n    server_name ssp.example.net;\n    return 301 https://$server_name$request_uri;\n}\nserver {\n    listen 443 ssl ;\n    server_name ssp.example.net;\n    ssl_certificate webmin/tls_ca.pem;\n    ssl_certificate_key webmin/tls_key.pem;\n\n    location / {\n      proxy_pass http://ssp;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto \"https\";\n      proxy_read_timeout 1800s;\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n###  6.4 LDAP 对目录信息的数据做备份还原和迁移\n####  6.4.1 备份\n\n```\nsudo slapcat -n 3 -l ./back3.ldif           # -n 指定数据库编号，数字对应各个dit的数据库编号( 配置数据库----olcDatabase={0}config.ldif; 目录信息数据库----olcDatabase={1}mdb.ldif )\n```\n\n#### 6.4.2 恢复\n原服务器上恢复，服务需要暂停\n```\nsudo systemctl stop slapd\n```\n\n配置目录一般位于 `/etc/openldap/slapd.d`，将原有配置删除，然后使用 `slapadd` 导入新的配置\n```\n$ rm -rf /etc/ldap/slapd.d/*\n$ slapadd  -n  0  -F  /etc/ldap/slapd.d  -l  ./config.2021-09-18.ldif\n$ chown -R openldap:openldap /etc/ldap/slapd.d\n```\n\n数据目录一般位于 `/var/lib/ldap-*`，模拟时，将原有数据删除，然后使用 `slapadd` 导入新的数据：\n```\n$ rm  -rf  /var/lib/ldap-example/*         # 定制了不同的$default_action = \"sendtoken\";\n$show_menu = false;dit有不同的目录分别存储不同domain的内容，注意，导入前目录必需首先存在，且权属 openldap:openldap。\n$ slapadd -n 1 -F /etc/openldap/slapd.d -l ./data.2021-09-18.ldif\n$ chown -R openldap:openldap  /var/lib/ldap-example\n$ systemctl start slapd\n```\n#### 6.4.3 openldap的迁移\nplaybook 新建的服务器，执行恢复\n```\nslapadd -n 1 -F /etc/openldap/slapd.d -l ./data.2021-09-18.ldif\n\n[[如果导入失败，或者数据已存在，删除rm]] -rf /var/lib/ldap/*  重新导入\n```\n\n\n## 七、 命令资料\n> [来自此处](https://blog.csdn.net/jenyzhang/article/details/56487627)\n>ldap  \n    |-slapd             目录服务的主要程序  \n    |-slurpd           目录服务进行复制的程序  \n    |-slapadd           向目录中添加数据  \n    |-slapcat           把目录中的条目导出成ldif文件  \n    |-slapindex         重建目录的索引  \n    |-ldapcompare       对目录的条目的属性进行比较  \n    |-ldapadd           向目录服务中添加条目  \n    |-ldapdelete        删除目录中的条目  \n    |-ldapmodify        更新目录中条目的值  \n    |-ldapmodrdn        更改条目的DN  \n    |-ldappasswd        更改条目的密码  \n    |-ldapsearch        对目录进行查询\n\n>ldapadd  \n      -x   进行简单认证  \n      -D   用来绑定服务器的DN  \n      -h   目录服务的地址  \n      -w   绑定DN的密码  \n      -f   使用ldif文件进行条目添加的文件  \n      \n- 例子\n       ldapadd -x -D \"cn=root,dc=starxing,dc=com\" -w secret -f /root/test.ldif  \n       ldapadd -x -D \"cn=root,dc=starxing,dc=com\" -w secret (这样写就是在命令行添加条目)  \n       \n> ldapsearch  \n      -x   进行简单认证  \n      -D   用来绑定服务器的DN  \n      -w   绑定DN的密码  \n      -b   指定要查询的根节点  \n      -H   制定要查询的服务器\n      -s   指定搜索范围的类型\n     \n- 例子\n \tldapsearch -x -D \"cn=root,dc=starxing,dc=com\" -w secret -b \"dc=starxing,dc=com\"  \n       使用简单认证，用 \"cn=root,dc=starxing,dc=com\" 进行绑定，  \n       要查询的根是 \"dc=starxing,dc=com\"。这样会把绑定的用户能访问\"dc=starxing,dc=com\"下的所有数据显示出来。\n       ldapsearch -x -W -D \"cn=administrator,cn=users,dc=osdn,dc=zzti,dc=edu,dc=cn\" -b \"cn=administrator,cn=users,dc=osdn,dc=zzti,dc=edu,dc=cn\" -h troy.osdn.zzti.edu.cn\n\t ldapsearch -b \"dc=canon-is,dc=jp\" -H ldaps://192.168.0.92:636\n\t   (需要修改openldap客户端的配置文件ldap.conf,参考：http://ms.ntcb.edu.tw/~steven/l-penguin.s/article/ldap-5.htm)\n\n>ldapdelete   \n      ldapdelete -x -D \"cn=Manager,dc=test,dc=com\" -w secret \"uid=test1,ou=People,dc=test,dc=com\"  \n      ldapdelete -x -D 'cn=root,dc=it,dc=com' -w secert 'uid=zyx,dc=it,dc=com'  \n      这样就可以删除'uid=zyx,dc=it,dc=com'记录了，应该注意一点，其下有子条目的不能删除  \n\t\n\t\n- 例子1  递归删除所有：\nldapdelete -x -D 'cn=administrator,dc=example,dc=net' -w example@2020 -r \"ou=example,dc=example,dc=net\"\n\n- 例子2  删除一个acl策略。acl-dele.ldif\n\t   dn: olcDatabase={3}mdb,cn=config\n\t   delete: olcAccess\n\t   olcAccess: {2}\n\t   olcAccess: {3}\n\t   olcAccess: {4}  \n   ldapmodify -Y EXTERNAL -H ldapi:/// -f acl-dele.ldif\n\n  \n> ldappasswd  \n    -x   进行简单认证  \n    -D   用来绑定服务器的DN  \n    -w   绑定DN的密码  \n    -S   提示的输入密码  \n    -s pass 把密码设置为pass  \n    -a pass 设置old passwd为pass  \n    -A   提示的设置old passwd  \n    -H   是指要绑定的服务器  \n    -I   使用sasl会话方式  \n    \n- 例子\n    ldappasswd -x -D 'cm=root,dc=it,dc=com' -w secret 'uid=zyx,dc=it,dc=com' -S  \n       New password:  \n       Re-enter new password:  \n       就可以更改密码了，如果原来记录中没有密码，将会自动生成一个userPassword。  \n    \n> ldapmodify  \n     -a 添加新的条目.缺省的是修改存在的条目.  \n     -C 自动追踪引用.  \n     -c 出错后继续执行程序并不中止.缺省情况下出错的立即停止.比如如果你的ldif 文件内的某个条目在[数据库](http://lib.csdn.net/base/mysql \"MySQL知识库\")内并不存在,缺省情况下程序立即退出,但如果使用了该参数,程序忽略该错误继续执行.  \n     -n 用于调试到服务器的通讯.但并不实际执行搜索.服务器关闭时,返回错误；服务器  \n       打开时,常和-v 参数一起[测试](http://lib.csdn.net/base/softwaretest \"软件测试知识库\")到服务器是否是一条通路.  \n     -v 运行在详细模块.在标准输出中打出一些比较详细的信息.比如:连接到服务器的  \n       ip 地址和端口号等.  \n     -M  打开 manage DSA IT 控制. -MM 把该控制设置为重要的.  \n     -f file 从文件内读取条目的修改信息而不是从标准输入读取.  \n    -x 使用简单认证.  \n    -D binddn 指定搜索的用户名(一般为一dn 值).  \n    -W 指定了该参数,系统将弹出一提示入用户的密码.它和-w 参数相对使用.  \n    -w bindpasswd 直接指定用户的密码. 它和-W 参数相对使用.  \n    -H ldapuri 指定连接到服务器uri(ip 地址和端口号,常见格式为 ldap://hostname:port ).如果使用了-H 就不能使用-h 和-p 参数.  \n    -h ldaphost 指定要连接的主机的名称/ip 地址.它和-p 一起使用 \n    -p ldapport 指定要连接目录服务器的端口号.它和-h 一起使用，如果使用了-h 和-p 参数就不能使用-H 参数.  \n    -Z 使用StartTLS 扩展操作.如果使用-ZZ,命令强制使用StartTLS 握手成功.  \n    -V 启用证书认证功能,目录服务器使用客户端证书进行身份验证,必须与-ZZ 强制启用  \n       TLS 方式配合使用,并且匿名绑定到目录服务器.  \n    -e 设置客户端证书文件,例: -e cert/client.crt  \n    -E 设置客户端证书私钥文件,例: -E cert/client.key  \n\n- 例子\nldapmodify -x -D \"cn=root,dc=it,dc=com\" -W -f modify.ldif    #   将modify.ldif中的记录更新原有的记录。\n\n\n## 八、 参考链接\n[指南](https://github.com/jt6562/LDAP-read-notes/blob/master/ldap-guide/OpenLDAP%E7%AE%A1%E7%90%86%E5%91%98%E6%89%8B%E5%86%8C.md)\n[知识总结](https://www.cnblogs.com/kevingrace/p/5773974.html)\n[参考1](https://www.cnblogs.com/js1314/p/12887893.html)\n[参考2](https://cloud.tencent.com/developer/article/1932586)\n[参考3](https://blog.csdn.net/u011607971/article/details/121126289?spm=1001.2014.3001.5501#t3)\n[Ubuntu wiki](https://ubuntu.com/server/docs/service-ldap-with-tls)\n[tls参考1](https://www.cnblogs.com/shu-sheng/p/14450815.html)\n[tls参考2](https://hmli.ustc.edu.cn/doc/linux/ubuntu-ldap/ubuntu-ldap.html#id14)\n[tls参考3](https://zhuanlan.zhihu.com/p/643010354)\n\n## 九、问题：\n### 9.1 从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果\n###  9.2 日志功能开启失败\n\t已经调整日志级别，在系统日志中查看并grep\n### 9.3 证书缺失(只能使用ldap01,这个信息查询）\n\t采取使用权威证书\n### 9.4 重启slap报错 tls init   failed\n\t解决办法：重新生成证书\n### 9.5 报错 ldap_start_tls: Connect error (-11)    \\n    additional info: (unknown error code)\n\t可能是由于服务器证书的通用名（Common Name）字段是否与主机名不一致，请检查主机名和服务器证书\n### 9.6 连接问题\n```\nldapsearch -H ldaps://ldap.example.top  -D \"cn=admin,dc=example,dc=top\" -W            # 在服务器本机执行此查询的报错。但是在另一个机器可以成功查询\n\tldap_sasl_bind(SIMPLE): Can't contact LDAP server (-1)                                 # 配置 ldap.conf 之后成功解决并有输出 tls=demand/allow----作用是证书检查\n```\n### 9.7 在多域的使用中，不能正常添加子条目，出现“shadow context; no update referral”\n```\n1. 首先尝试重新部署，发现执行镜像复制的剧本之前可以正常创建所有的条目\n    解决：在mirror mode 开启时，需要指定相应的数据库\n2.  shadow context; no update referral  根本原因是需要检查权限\n```\n### 9.8 使用的脚本一致，测试环境和生产环境结果不一致; 主要是不能长时间正常保持客户端连接并查询\n- 脚本中的组织信息ldif文件有问题，经测试不影响。\n- memberOf，属性不可单独添加，通过 groupofNames 指定 member 之后会自动关联。已经修正使用方式，结果未改变。\n- 2204 系统和 2004 系统的slapd版本不一致（并没有影响）。\n- 将orgnization的任务和前一部分拆分，否则会出现读取不到 rootdn（手动测试是成功的）（然而脚本中修改后并没有解决这个问题）。\n- 将organization拆分，在此之前重启服务，未解决。\n- 将organization拆分，在此之前先重启虚拟机。（有效、怀疑是服务中某些连接的状态在ansible执行中没有更新）（仍然失效了，经过一夜之后失效）。\n- 另一台2204主机安装正常使用，怀疑虚拟机系统问题。\n\n## 十、 验证\n### 10.1 检测连接命令： \n\n ldaps://    ----ldap over ssl  使用636 ，从连接开始加密   ;        ldap://           ---ldap_start_tls(-ZZ参数):    使用389，从传输开始加密\n```\nldapsearch -H ldaps://ldap01.example.top:636 -D \"cn=admin,dc=example,dc=top\" -W -b \"dc=example,dc=top\" -s sub \"(objectClass=person)\"\n\nldapsearch -H ldap://10.13.3.106  -D \"cn=admin,dc=example,dc=top\" -W -b \"dc=example,dc=top\" -s sub \"(objectClass=person)\"\n\nldapsearch -H ldap://ldap01.example.top  -D \"cn=admin,dc=example,dc=top\" -W -b \"dc=example,dc=top\" -s sub \"(objectClass=person)\"\n```\n### 10.2 验证和日志\ntag 101 应表明在查询; tag 97 是在认证\n```\nldapsearch -H ldap://ldap01.example.top  -D \"cn=admin,dc=example,dc=top\" -W   -ZZ      #  启用了tls功能 ，-ZZ 参数，仍然是 389 端口，连接后在传输过程中加密\n\t\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn=1240 fd=14 ACCEPT from IP=10.13.3.107:60674 (IP=0.0.0.0:389)\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn=1240 op=0 EXT oid=1.3.6.1.4.1.1466.20037\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn=1240 op=0 STARTTLS\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn=1240 op=0 RESULT oid= err=0 text=\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn=1240 fd=14 TLS established tls_ssf=256 ssf=256\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=1 BIND dn=\"cn=admin,dc=example,dc=top\" method=128\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=1 BIND dn=\"cn=admin,dc=example,dc=top\" mech=SIMPLE ssf=0\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=1 RESULT tag=97 err=0 text=\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=2 SRCH base=\"dc=example,dc=top\" scope=2 deref=0 filter=\"(objectClass=*)\"\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=2 SEARCH RESULT tag=101 err=0 nentries=6 text=\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=3 UNBIND\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 fd=14 closed\n```\n\n```\nldapsearch -H ldap://ldap01.example.top  -D \"cn=admin,dc=example,dc=top\" -W        # 明文传输\n\t\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 fd=14 ACCEPT from IP=10.13.3.107:37760 (IP=0.0.0.0:389)\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" method=128\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" mech=SIMPLE ssf=0\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=0 RESULT tag=97 err=0 text=\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=1 SRCH base=\"dc=example,dc=top\" scope=2 deref=0 filter=\"(objectClass=*)\"\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=1 SEARCH RESULT tag=101 err=0 nentries=6 text=\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=2 UNBIND\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 fd=14 closed\n```\n\n```\nldapsearch -H ldaps://ldap01.example.top  -D \"cn=admin,dc=example,dc=top\" -W        # 从连接就开始加密\n\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 fd=14 ACCEPT from IP=10.13.3.107:58726 (IP=0.0.0.0:636)\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 fd=14 TLS established tls_ssf=256 ssf=256\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" method=128\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" mech=SIMPLE ssf=0\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=0 RESULT tag=97 err=0 text=\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=1 SRCH base=\"dc=example,dc=top\" scope=2 deref=0 filter=\"(objectClass=*)\"\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=1 SEARCH RESULT tag=101 err=0 nentries=6 text=\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=2 UNBIND\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 fd=14 closed\n```\n\n```\n ldapsearch -H ldaps://ldap01.example.top  -D \"cn=admin,dc=example,dc=top\" -W -ZZ\n\t\tldap_start_tls: Operations error (1)\n\t        additional info: TLS already started\n\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 fd=14 ACCEPT from IP=10.13.3.107:39894 (IP=0.0.0.0:636)\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 fd=14 TLS established tls_ssf=256 ssf=256\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 op=0 EXT oid=1.3.6.1.4.1.1466.20037\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 op=0 STARTTLS\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 op=0 RESULT oid= err=1 text=TLS already started                # 证明二者冲突，不能同时开启\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 op=1 UNBIND\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 fd=14 closed\n```\n\n## 十一、应用服务\n### 11.1 建立 ldap 管理/只读帐号\n```\ndn: cn=admin,dc=xxx,dc=xx \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi  \n  \n-  \ndn: cn=reader,dc=xxx2,dc=xx2  \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n```\n\n###  11.2 详细的公司架构 ldif\n```\ndn: ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example  \n  \ndn: ou=example-bod,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-bod  \n  \ndn: cn=user1,ou=example-bod,ou=example,dc=example,dc=net  \ncn: user1  \ndepartmentnumber: 1  \ndisplayname: Zheng Yu  \nmail: user1@example.net  \nobjectclass: inetOrgPerson  \nsn: Zheng  \ntitle: President  \nuid: 10000  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-bod-admin,ou=example-bod,ou=example,dc=example,dc=net  \ncn: example-bod-admin  \nmember: cn=user1,ou=example-bod,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: ou=example-bus,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-bus  \n  \ndn: cn=user8,ou=example-bus,ou=example,dc=example,dc=net  \ncn: user8  \ndepartmentnumber: 2  \ndisplayname: Sun Minghong  \nmail: user8@example.net  \nobjectclass: inetOrgPerson  \nsn: Sun  \ntitle: Financial Manager  \nuid: 10001  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-bus-admin,ou=example-bus,ou=example,dc=example,dc=net  \ncn: example-bus-admin  \nmember: cn=user8,ou=example-bus,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: ou=example-sys,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-sys  \n  \ndn: cn=user2,ou=example-sys,ou=example,dc=example,dc=net  \ncn: user2  \ndepartmentnumber: 3  \ndisplayname: Xie Jian  \nmail: user2@example.net  \nobjectclass: inetOrgPerson  \nsn: Xie  \ntitle: Senior Systems Engineer  \nuid: 10002  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-sys-admin,ou=example-sys,ou=example,dc=example,dc=net  \ncn: example-sys-admin  \nmember: cn=user2,ou=example-sys,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: cn=user5,ou=example-sys,ou=example,dc=example,dc=net  \ncn: user5  \ndepartmentnumber: 3  \ndisplayname: Long Chao  \nmail: user5@example.net  \nobjectclass: inetOrgPerson  \nsn: Long  \ntitle: System Engineer  \nuid: 10003  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-sys-junior,ou=example-sys,ou=example,dc=example,dc=net  \ncn: example-sys-junior  \nmember: cn=user5,ou=example-sys,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: ou=example-ops,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-ops  \n  \ndn: cn=user6.tang,ou=example-ops,ou=example,dc=example,dc=net  \ncn: user6.tang  \ndepartmentnumber: 4  \ndisplayname: Tang Binchao  \nmail: user6.tang@example.net  \nobjectclass: inetOrgPerson  \nsn: Tang  \ntitle: System Engineer  \nuid: 10004  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-ops-admin,ou=example-ops,ou=example,dc=example,dc=net  \ncn: example-ops-admin  \nmember: cn=user6.tang,ou=example-ops,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: ou=example-dev,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-dev  \n  \ndn: cn=user3,ou=example-dev,ou=example,dc=example,dc=net  \ncn: user3  \ndepartmentnumber: 5  \ndisplayname: Chen Cheng  \nmail: user3@example.net  \nobjectclass: inetOrgPerson  \nsn: Chen  \ntitle: Senior Development Engineer  \nuid: 10005  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-dev-admin,ou=example-dev,ou=example,dc=example,dc=net  \ncn: example-dev-admin  \nmember: cn=user3,ou=example-dev,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: cn=user4.li,ou=example-dev,ou=example,dc=example,dc=net  \ncn: user4.li  \ndepartmentnumber: 5  \ndisplayname: Li user4  \nmail: user4.li@example.net  \nobjectclass: inetOrgPerson  \nsn: Li  \ntitle: Development Engineer  \nuid: 10006  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=user7,ou=example-dev,ou=example,dc=example,dc=net  \ncn: user7  \ndepartmentnumber: 5  \ndisplayname: Luo Xujun  \nmail: user7@example.net  \nobjectclass: inetOrgPerson  \nsn: Luo  \ntitle: Development Engineer  \nuid: 10007  \nuserpassword: {SSHA}/2+Coei5Fje+th7mOJgu43Ms3hBia2Qu  \n  \ndn: cn=example-dev-senior,ou=example-dev,ou=example,dc=example,dc=net  \ncn: example-dev-senior  \nmember: cn=user4.li,ou=example-dev,ou=example,dc=example,dc=net  \nmember: cn=user7,ou=example-dev,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: ou=example-rob,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-rob\n```\n\n###  11.3 第一版 ACL\n```\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {2}to dn.subtree=\"ou=example,dc=example,dc=net\" filter=\"(&(objectClass=inetOrgPerson)(|(memberOf=cn=example-bod-admin,ou=example-bod,ou=example,dc=example,dc=net)(memberOf=cn=example-sys-admin,ou=example-sys,ou=example,dc=example,dc=net)(memberOf=cn=example-ops-admin,ou=example-ops,ou=example,dc=example,dc=net)))\" by dn.base=\"cn=exampleread,dc=ibexample,dc=com\" read\n\ndn: olcDatabase={4}mdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {0}to attrs=userPassword by self write by dn.base=\"cn=exampleadmin,dc=example,dc=net\" write  by anonymous auth  by * none\nolcAccess: {2}to dn.subtree=\"dc=ibexample,dc=com\" by dn.base=\"cn=exampleadmin,dc=example,dc=net\" write by dn.base=\"cn=exampleread,dc=ibexample,dc=com\" read\n```\n\n###  11.4 最终的acl（写两个域、读两个域、reader_example 可以读取某些admin组，实现映射到example域下集成的应用）\n- 添加\n```\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {2}to dn.subtree=\"dc=example,dc=net\" by dn.base=\"cn=exampleread,dc=example,dc=net\" read\nolcAccess: {3}to dn.subtree=\"dc=example,dc=net\" filter=\"(&(objectClass=inetOrgPerson)(|(memberOf=cn=example-bod-admin,ou=example-bod,ou=example,dc=example,dc=net)(memberOf=cn=example-sys-admin,ou=example-sys,ou=example,dc=example,dc=net)(memberOf=cn=example-ops-admin,ou=example-ops,ou=example,dc=example,dc=net)))\" by dn.base=\"cn=exampleread,dc=ibexample,dc=com\" read\n \ndn: olcDatabase={2}mdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {0}to attrs=userPassword by self write by dn.base=\"cn=exampleadmin,dc=example,dc=net\" write  by anonymous auth  by * none\nolcAccess: {2}to dn.subtree=\"dc=ibexample,dc=com\" by dn.base=\"cn=exampleadmin,dc=example,dc=net\" write by dn.base=\"cn=exampleread,dc=ibexample,dc=com\" read by dn.base=\"cn=exampleread,dc=example,dc=net\" read\n```\n\n- 删除\n```\ndn: olcDatabase={1}mdb,cn=config\ndelete: olcAccess\nolcAccess: {2}to..........\nolcAccess: {3}to........\n \n\nldapmodify -Y EXTERNAL -H ldapi:/// -f acl-dele.ldif\n```\n\n- 数据库内 ACL 顺序测试，{}里面是优先级，生效在前（涉及范围大的 ACL 应书写在前）\n```\nolcAccess: {0}to attrs=userPassword by self write by anonymous auth  by dn.base=\"cn=admin,dc=example,dc=net\" write  by * none   \nolcAccess: {1}to attrs=shadowLastChange by self write by * read\nolcAccess: {2}to dn.subtree=\"cn=example-sys-admin,ou=example-sys,dc=example,dc=tech\" by dn.base=\"cn=reader,dc=example,dc=net\" read by dn.base=\"cn=admin,dc=example,dc=net\" write    # 如果没有此条acl,该条目将不能在 lam 中被 admin 管理\n olcAccess: {3}to dn.subtree=\"dc=example,dc=tech\" by dn.base=\"cn=admin,dc=example,dc=net\" write      # 此条优先级最低\n```\n\n## 十二、集成其他应用\n### 12.1  conflunce \n```\nolcAccess: {0}to attrs=userPassword by self write by anonymous auth by * none\nolcAccess: {1}to attrs=shadowLastChange by self write by * read\nolcAccess: {2}to dn.subtree=\"dc=example,dc=net\" by dn.base=\"cn=reader,dc=ibexample,dc=com\" read\n```\n#### 12.1.1 连接 之后的 acl 过滤案例\n'(&(objectclass=inetorgperson)(|(cn=user5)(cn=user2)))'  过滤出指定用户----在用户模式设置。\n\n'(&(objectclass=groupOfNames)(|(cn=example-sys-junior)(cn=example-sys-admin)))' 过滤指定组----在组模式设置（在ldap中创建的组 objectclass 是groupOfNames）\n \n#### 12.1.2 更详细的 acl 需求\n- example\n```\nolcAccess: {0}to attrs=userPassword by self write  by anonymous auth  by * none\nolcAccess: {1}to attrs=shadowLastChange by self write by * read\nolcAccess: {2}to dn.subtree=\"dc=example,dc=net\" filter=\"(&(objectClass=inetOrg\n Person)(|(memberOf=cn=example-bod-admin,ou=example-bod,ou=example,dc=example,dc=net\n )(memberOf=cn=example-sys-admin,ou=example-sys,ou=example,dc=example,dc=net)(member\n Of=cn=example-ops-admin,ou=example-ops,ou=example,dc=example,dc=net)))\" by dn.base=\n \"cn=reader,dc=ibexample,dc=com\" read  by dn.base= \"cn=reader,dc=example,dc=net\" read\n\nsearch时，必须要具体到用户层级，例如nextcloud，需要指定基础用户树如下\n\ncn=user2,ou=example-sys,ou=example,dc=example,dc=net\ncn=user1,ou=example-bod,ou=example,dc=example,dc=net\ncn=user6.tang,ou=example-ops,ou=example,dc=example,dc=net\ndc=ibexample,dc=com\n```\n\n- example\n```\nolcAccess: {0}to attrs=userPassword by self write by dn.base=\"cn=admin,dc=example,dc=net\" write  by anonymous auth  by * none\nolcAccess: {1}to attrs=shadowLastChange by self write by * read\nolcAccess: {2}to dn.subtree=\"dc=ibexample,dc=com\" by dn.base=\"cn=admin,dc=example,dc=net\" write by dn.base=\"cn=reader,dc=ibexample,dc=com\" read\n```\n\n### 12.2 集成 vault\n- 过滤特定用户\n```\n(&(objectClass=inetOrgPerson)({{.UserAttr}}={{.Username}})(|(cn=user2)(cn=user1)(cn=%s)))\n```\n- 过滤某个组\n```\n(&(objectClass=inetOrgPerson)({{.UserAttr}}={{.Username}})(memberof=CN=example-sys-admin,OU=example-sys,OU=example,DC=example,DC=net))\n```\n- 过滤多个组\n```\n(&(objectclass=inetOrgPerson)({{.UserAttr}}={{.Username}})(|(memberof=CN=example-sys-admin,OU=example-sys,OU=example,DC=example,DC=net)(memberof=CN=example-dev-admin,OU=example-dev,OU=example,DC=example,DC=net)))\n```\n- 过滤特定用户和特定组\n```\n(&(objectclass=inetOrgPerson)({{.UserAttr}}={{.Username}})(|(|(cn=user4.li))(|(memberof=CN=example-sys-admin,OU=example-sys,OU=example,DC=example,DC=net)(memberof=CN=example-dev-admin,OU=example-dev,OU=example,DC=example,DC=net))(cn=%s)))\n```\n- 错误\n```\n(&(objectClass=inetOrgPerson)({{.UserAttr}}={{.Username}})(|(cn=user2)(cn=user1))(cn=%s))  会失败\n\n以下 1 条，写在group filter的时候会出现不能过滤，所有人都可以登录\n(&(objectclass=inetOrgPerson)(|(memberof=CN=example-sys-admin,OU=example-sys,OU=example,DC=example,DC=net)(memberof=CN=example-dev-admin,OU=example-dev,OU=example,DC=example,DC=net)))\n```\n\n\n\n","source":"_posts/Multiple-Domians-in-OpenLDAP-Use-Case.md","raw":"---\ntitle: Multiple Domians in OpenLdap Use Case\ndate: 2023-10-24 23:37:36\ntags:\n  - OpenLDAP\ncategories:\n  - ops\ntoc: true\nsummary: 记录自己 OpenLDAP 在多域中的使用，以及集成应用且跨域实现用户登录的测试，内容来源网络和实践。\n---\n# OpenLDAP\n## 一、 概念\n[官方手册](https://www.openldap.org/doc/admin26/guide.html)\n\n### 1.1 常用属性\n- DN：Distinguished Name，LDAP记录项的标识，有唯一性，例如：dc:\"cn=admin,ou=developer,dc=163,dc=com\"  \n- dc= DomainComponent 为域组件，域名的一部分\n- cn=CommonName 为记录名，表示一个实体，最长到80个字符，可以为中文；\n- ou=OrganizationUnit 为组织单位，用于分类，最多四级，每级最长32字符，可以为中文；\n- uid=User id 为用户的唯一标识\n- c=Country 为国家名，可选，为2个字符长\n- o=Organization 为组织名，可选，可以3—64个字符长\n\n## 二、 手动安装和配置 LDAP\n\n### 2.1 安装 slapd (独立的 LDAP 守护进程，同时便于管理服务)\n```\nsudo apt install  -y slapd ldap-utils\n```\n\n### 2.2  重新配置 OpenLDAP，创建 base dn\n```\nsudo dpkg-reconfigure slapd   # 主要配置密码 (密码在下一步重置，便于配置连接)，DNS domain name(即 LDAP 服务中的 base dn)\n\n\t 说明：\n\t第一步回答 No\n\t第二步填写域名，比如 mycompany.com\n\t第三步填写组织名，比如 Company\n\t第四步填写管理员密码，比如 secret；第五步确认管理员密码\n\t第六步选择使用的数据库后端，比如 MDB\n\t第七步选择在清除 slapd 时是否移除数据库，比如 Yes\n\t第八步选择是否移除旧数据库，比如 Yes\n```\n\n### 2.3 生成密码，用于控制台登录的admin帐号，需要保存此密文密码\n```shell\nslappasswd\n\t{SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n```\n\n- 通过数据库修改admin用户的ldif文件\n```ldif\n/etc/ldap/slapd.d/cn\\=config/olcDatabase\\=\\{1\\}mdb.ldif\n\tolcDatabase: {1}mdb\n\tolcSuffix: dc=example,dc=top\n\tolcRootDN: cn=admin,dc=example,dc=top\n\tolcRootPW: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n```\n- olcDatabase: 定义使用的后端数据存储格式,遵循默认\n- olcSuffix: 设置 LDAP 服务的根\n- olcRootDN: 设置管理员用户的 dn\n- olcRootPW: 管理员用户的密码\n- 修改后重启服务\n```\nsudo slaptest -u   # 检查配置文件\nsudo systemctl enable slapd  --now\n\nsudo slapcat        # 输出看到当前数据库内容\n```\n\n### 2.4 正确的修改olcRootPW: 管理员用户的密码\n\n```\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nreplace: olcRootPW\nolcRootPW: example2020  # 保存在数据库文件中的时候将会被加密\n```\n\n```\nldapmodify -Y EXTERNAL -H ldapi:/// -f passmodify.ldif\n```\n\n```\n同时进入web ui，修改admin账户的密码，如果不修改两个密码都能管理域，二者修改一致之后，才是新的管理密码生效\n```\n\n### 2.5 简单结构展示\n\n略\n### 2.6 创建base dn \n\n#### 2.6.1 查看LDAP服务器的根目录信息\n```\nsudo ldapsearch -x -LLL -b '' -s base '(objectclass=*)'\n\tdn:\n\tobjectClass: top\n\tobjectClass: OpenLDAProotDSE\n```\n\n#### 2.6.2 基于 ldif 文件直接创建，不使用图形化交互。创建之后，对这个 base dn 设置管理员的密码\n```\n-\ndn: dc=example,dc=top\nchangetype: add\nobjectClass: top\nobjectClass: domain\n\n\n-\ndn: o=example,dc=example,dc=top\nchangetype: add\nobjectClass: organization\no: example\n```\n\n```\nldapmodify -x -D \"cn=admin,dc=example,dc=top\" -w example@2020  -f organization.ldif\n```\n\n### 2.7 创建多个 DIT + base dn （可以考虑尝试后端用 `mysql` 做数据库）\n#### 2.7.1 为新的库，准备存储路径，并通过`apparmor`做权限限制\n```\nmkdir  /var/lib/ldap2\nchown openldap:openldap  /var/lib/ldap2\nvim /etc/apparmor.d/usr.sbin.slapd\n\t\t# the databases and logs\n\t\t/var/lib/ldap2/ r,\n\t\t/var/lib/ldap2/** rwk,\n\t\t\n\t\t# lock file\n\t\t/var/lib/ldap2/alock kw,\n\nsudo systemctl  reload  apparmor \n```\n\n#### 2.7.2 准备 ldif 文件，创建新的 DIT（可以自定义路径）\n```\ndn: olcDatabase={2}mdb,cn=config\nchangetype: add\nobjectClass: olcDatabaseConfig\nobjectClass: olcMdbConfig\nolcDbDirectory: /var/lib/ldap2/\nolcDatabase: {2}Mdb\nolcDbIndex: objectClass eq\nolcDbIndex: cn,uid eq\nolcDbIndex: uidNumber,gidNumber eq\nolcDbIndex: member,memberUid eq\nolcLastMod: TRUE\nolcMonitoring: TRUE\nolcDBNoSync: TRUE\nolcAccess: {0}to attrs=userPassword by self write by anonymous auth by * non\n e\nolcAccess: {1}to attrs=shadowLastChange by self write by * read\nolcSuffix: dc=example,dc=tech\nolcRootDN: cn=admin,dc=example,dc=tech\nolcRootPW: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n```\n\n```\nsudo  ldapmodify -Y EXTERNAL -H ldapi:/// -f domian2.ldif\n```\n\n#### 2.7.3 新增并设置管理员\n```\n-\ndn: cn=admin,dc=example,dc=tech\nobjectClass: simpleSecurityObject\nobjectClass: organizationalRole\ncn: admin\nuserPassword: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n==========================\n# 以下是playbook中模板文件\n-\ndn: cn=admin,{{ item.base_dn }}  \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n```\n\n```\nsudo ldapadd -x -D \"cn=admin,dc=example,dc=tech\" -w example@2020 -f basedn2.ldif\n```\n\n#### 2.7.4 多 DIT 跨域 ACL\n- 查询服务器的域\n```\nldapsearch -x -H ldap://10.13.3.107 -b \"\" -s base namingContexts\n```\n\n- 设置一个全权限的 acl ，跨域访问，相应的用户需已经提前创建\n\n```\n让这个dn 用户: cn=user.tech,dc=example,dc=tech ;  可以阅读这个base dn : dc=example,dc=top 下的所有条目.\n对应关系：数据库----{1}mdb  存储的数据是来自 dn: dc=example,dc=top 。即，对谁的访问则将 acl 添加在谁的库下  \n\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {2}to dn.subtree=\"dc=example,dc=top\" by dn.base=\"cn=user.tech,dc=example,dc=tech\" read\n```\n\n```\nldapmodify   -Y   EXTERNAL   -H   ldapi:///   -f  xxx\n```\n#### 2.7.5 测试\n```\nroot@example-sys-test-06:/etc/ldap/example# ldapsearch -x -b \"dc=example,dc=top\" -D \"cn=user.tech,dc=example,dc=tech\" -w example@2020\n\t\t# extended LDIF\n\t\t#\n\t\t# LDAPv3\n\t\t# base <dc=example,dc=top> with scope subtree\n\t\t# filter: (objectclass=*)\n\t\t# requesting: ALL\n\t\t#\n\t\t\n\t\t# example.top\n\t\tdn: dc=example,dc=top\n\t\tobjectClass: top\n\t\tobjectClass: domain\n\t\tdc: example\n\t\t\n\t\t# admin, example.top\n\t\tdn: cn=admin,dc=example,dc=top\n\t\tobjectClass: simpleSecurityObject\n\t\tobjectClass: organizationalRole\n\t\tcn: admin\n\t\t\n\t\t# search result\n\t\tsearch: 2\n\t\tresult: 0 Success\n\t\t\n\t\t# numResponses: 3\n\t\t# numEntries: 2\nroot@example-sys-test-06:/etc/ldap/example# ldapsearch -x -b \"dc=example,dc=tech\" -D \"cn=admin,dc=example,dc=top\" -w example@2020\n\t\t# extended LDIF\n\t\t#\n\t\t# LDAPv3\n\t\t# base <dc=example,dc=tech> with scope subtree\n\t\t# filter: (objectclass=*)\n\t\t# requesting: ALL\n\t\t#\n\t\t\n\t\t# search result\n\t\tsearch: 2\n\t\tresult: 32 No such object\n\t\t\n\t\t# numResponses: 1\n```\n\n- 测试的日志\n```\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 fd=12 ACCEPT from IP=127.0.0.1:59834 (IP=0.0.0.0:389)\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=0 BIND dn=\"cn=user.tech,dc=example,dc=tech\" method=128\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=0 BIND dn=\"cn=user.tech,dc=example,dc=tech\" mech=SIMPLE ssf=0\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=0 RESULT tag=97 err=0 text=\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=1 SRCH base=\"dc=example,dc=top\" scope=2 deref=0 filter=\"(objectClass=*)\"\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=1 SEARCH RESULT tag=101 err=0 nentries=2 text=\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 op=2 UNBIND\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn=1097 fd=12 closed\n=================\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 fd=12 ACCEPT from IP=127.0.0.1:34916 (IP=0.0.0.0:389)\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" method=128\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" mech=SIMPLE ssf=0\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=0 RESULT tag=97 err=0 text=\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=1 SRCH base=\"dc=example,dc=tech\" scope=2 deref=0 filter=\"(objectClass=*)\"\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=1 SEARCH RESULT tag=101 err=32 nentries=0 text=\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 op=2 UNBIND\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn=1098 fd=12 closed\n```\n\n## 三、 web管理器配置\n\n### 3.1 安装  LAM （用于管理的Web UI）\n```\napt-get install ldap-account-manager\n```\n访问 http://ip/lam ，lam的所有配置都可以在web端配置，不需要去服务器上修改一行代码\n\n#### 3.1.1 LAM configuration ([helm 安装的主要修改内容](https://check-lc.github.io/ops_blog/2023/12/04/the-first-time-using-helm-charts/))\n<pre>\n主要内容：\n  LDAP_DOMAIN: example.net;ibexample.com\n  LDAP_BASE_DN: dc=example,dc=net;dc=ibexample,dc=com\n  LDAP_SERVER: ldaps://ldap01.example.net\n  LDAP_USER: cn=administrator,dc=example,dc=net\n  LAM_LANG: zh_CN\n  LAM_PASSWORD: lam\n</pre>\n\n- tree view编辑更高效\n\n- 如果选择 docker 安装镜像：ghcr.io/ldapaccountmanager/lam:8.4@sha256:283726bd23510f1c3bfbdcbfe861e6599e070616543aed02e9756075c97a9938\n#### 3.1.3 Nginx反向代理 LAM Web UI\n```\nupstream lam {\n  server 10.13.3.108:8001;\n}\n\nserver {\n  listen 80;\n  server_name lam.example.net;\n  return 301 https://$server_name$request_uri;\n}\n\nserver {\n  server_name lam.example.net;\n  listen 443 ssl;\n  ssl_certificate webmin/tls_ca.pem;\n  ssl_certificate_key webmin/tls_key.pem;\n\n  location / {\n     proxy_pass http://lam/;\n     proxy_set_header Host $host;\n     proxy_set_header X-Real-IP $remote_addr;\n     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n#     proxy_set_header X-Forwarded-Proto \"https\";\n     proxy_read_timeout 1800s;\n     proxy_http_version 1.1;\n     proxy_set_header Upgrade $http_upgrade;\n     proxy_set_header Connection \"upgrade\";\n    }\n  }\n```\n\n### 3.2 测试 phpldapadmin\n```\nSetting up php8.1 (8.1.2-1ubuntu2.14)                       # 版本信息，配置文件完整，存在证书认证并可以指定路径\nSetting up php (2:8.1+92ubuntu1) \nSetting up phpldapadmin (1.2.6.3-0.2)                                       \n```\n#### 3.2.1 安装\n```\napt-get install phpldapadmin -y\nnano /etc/phpldapadmin/config.php\n\t$servers->setValue('server','name','My LDAP Server');                      # 辨识，区分的作用\n\t$servers->setValue('server','host','69.87.216.102');                              #  修改ip为服务器 ip\n\t$servers->;setValue('server','base',array('dc=example,dc=com'));                    # 修改 array 内容为需求的根\n\t$servers->setValue('login','auth_type','session');                                              \n\t$servers->setValue('login','bind_id','cn=admin,dc=example,dc=com');           #   绑定登录帐号admin，相应修改 dn 号即可\n\t$servers->setValue('auto_number','min',array('uidNumber'=>10000,'gidNumber'=>10000));   # 规定 uid，gid 数字表示的起始范围\n```\n#### 3.2.2 为 phpLDAPadmin 配置 Apache\n```\na2dissite 000-default.conf        # 禁用默认的 Apache 虚拟主机配置文件\nsystemctl restart apache2          \n```\n\n## 四、 主从架构(弃用，此配置需要在从服务器拉取 refresh)\n[模式介绍](https://darkdark.top/ch5-replication.html)\n### 4.1 master 加载同步模块\n```\ncat /etc/ldap/mod_syncprov.ldif\n\t\tdn: cn=module,cn=config\n\t\tobjectClass: olcModuleList\n\t\tcn: module\n\t\tolcModulePath: /usr/lib/ldap\n\t\tolcModuleLoad: syncprov.la          # 此配置和上一句配置，实际是在请求这个路径的文件，/usr/lib/ldap/syncprov.la，不确定的可以用 find 查找\n\nldapadd -Y EXTERNAL -H ldapi:/// -f ./mod_syncprov.ldif\n```\n### 4.2 同步设置\n```\nroot@example-sys-test-06:/etc/ldap# cat syncprov.ldif \n\t\tdn: olcOverlay=syncprov,olcDatabase={1}mdb,cn=config       # 此处需要确认自己的数据库是什么样的，{2}hdb--旧版本默认 / {1}mdb--新版本默认\n\t\tobjectClass: olcOverlayConfig\n\t\tobjectClass: olcSyncProvConfig\n\t\tolcOverlay: syncprov\n\t\tolcSpCheckpoint: 100 10\n\t\tolcSpSessionLog: 100\n\nldapadd -Y EXTERNAL -H ldapi:/// -f ./syncprov.ldif                             # 修改并应用条目到 LDAP 服务  -Y EXTERNAL    将使用服务器配置的外部身份验证方法进行身份验证，而不是使用用户名和密码; -H 指定服务器连接; -f 指定文件\n```\n### 4.3 从服务器配置\n```\nroot@example-sys-test-07:/etc/ldap# cat syncrepl.ldif\n\t\tdn: olcDatabase={1}mdb,cn=config\n\t\tchangetype: modify\n\t\tadd: olcSyncRepl\n\t\tolcSyncRepl: rid=002\n\t\t  provider=ldap://10.13.3.106:389/        # 此处开始与上一行有缩进\n\t\t  bindmethod=simple\n\t\t  binddn=\"cn=admin,dc=example,dc=top\"\n\t\t  credentials=example@2020      \n\t\t  searchbase=\"dc=example,dc=top\"\n\t\t  scope=sub\n\t\t  schemachecking=on\n\t\t  type=refreshAndPersist\n\t\t  retry=\"5 5 300 +\"\n\t\t  attrs=\"*,+\"\n\t\t  interval=00:00:00:3\n\nldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/syncrepl.ldif\n```\n- 运行中，修改主服务器内数据后，对从服务器u做刷新，可以看到是否同步\n\n参数说明：\n- provider 为ldap master/slave的地址 ;\n- binddn：为域的基本信息，注这里一定要用管理员进行登录，否则同步不到用户的密码。\n- credentials: ldap管理员的密码\n- searchbase：选择要同步的独立域，根节点\n- scope：设置所有的条目匹配\n- schemachecking：设置同步更新时间检测\n- type：同步模式为refreshAndPersist， refreshOnly 模式下后续操作由客户端轮询完成\n- retry:同步更新重试次数和时间刚开始的5秒重试5次，以后每300秒重试一次\n- attrs:复制全部属性\n- interval 这里设置更新时间，这里为3秒一次，倒数第二个是分钟 以此类推。\n\n\n## 四、 镜像复制（互为主从）\n[模式介绍](https://darkdark.top/ch5-replication.html)\n### 4.1 为某域编辑 mirrorsync.ldif\n```\ndn: cn=module,cn=config         # 此段配置加载s ync 模块\nobjectClass: olcModuleList\ncn: module\nolcModulePath: /usr/lib/ldap\nolcModuleLoad: syncprov.la     # 此配置和上一句，实际是在请求这个路径的文件，/usr/lib/ldap/syncprov.la，不确定的可 find 查找\n\n-\ndn: olcOverlay=syncprov,olcDatabase={1}mdb,cn=config        \n\t # 此处需确认自己的数据库，{2}hdb--为旧版本默认 / {1}mdb--为新版本默认。路径 /etc/ldap/slapd.d/cn\\=config/olcDatabase\\=\\{1\\}mdb.ldif\nobjectClass: olcOverlayConfig\nobjectClass: olcSyncProvConfig\nolcOverlay: syncprov\nolcSpSessionLog: 100\n\n-\ndn: cn=config\nchangetype: modify\nreplace: olcServerID\nolcServerID: 0                                        # 用于标识本机的 server id\n\ndn: olcDatabase={1}mdb,cn=config      # 以下配置用于开启复制，指定主服务器\nchangetype: modify\nadd: olcSyncRepl\nolcSyncRepl: rid=000                             # 标识唯一的 replica id\n  provider=ldaps://ldap01.example.top       # 看上述记录介绍参数\n  bindmethod=simple\n  binddn=\"cn=admin,dc=example,dc=top\"\n  credentials=example@2020\n  searchbase=\"dc=example,dc=top\"\n  tls_reqcert=allow\n  scope=sub\n  schemachecking=on\n  type=refreshAndPersist\n  retry=\"30 5 300 3\"\n  interval=00:00:05:00\n-\nadd: olcMirrorMode                        # 开启 mirror mode\nolcMirrorMode: TRUE\n\n```\n\n### 4.2 ldap01.example.top下编辑 mirrorsync.ldif\n```\ndn: cn=module,cn=config\nobjectClass: olcModuleList\ncn: module\nolcModulePath: /usr/lib/ldap\nolcModuleLoad: syncprov.la\n\n-\ndn: olcOverlay=syncprov,olcDatabase={1}mdb,cn=config\nobjectClass: olcOverlayConfig\nobjectClass: olcSyncProvConfig\nolcOverlay: syncprov\nolcSpSessionLog: 100\n\n-\ndn: cn=config\nchangetype: modify\nreplace: olcServerID\nolcServerID: 1\n\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nadd: olcSyncRepl\nolcSyncRepl: rid=001\n  provider=ldaps://ldap.example.top\n  bindmethod=simple\n  binddn=\"cn=admin,dc=example,dc=top\"\n  credentials=example@2020\n  searchbase=\"dc=example,dc=top\"\n  tls_reqcert=allow\n  scope=sub\n  schemachecking=on\n  type=refreshAndPersist\n  retry=\"30 5 300 3\"\n  interval=00:00:05:00\n-\nadd: olcMirrorMode\nolcMirrorMode: TRUE\n\n```\n#### 4.2.1 加载配置\n```\nldapadd -Y EXTERNAL -H ldapi:/// -f mirrorsync.ldif\n```\n\n## 五、 TLS加密（自签名/权威证书）\n（自签名证书加密连接 nextcloud 失败，使用不便，采用 权威证书（多域合一）或stunnel）\n\n### 5.1 CA中心创建证书\n\t此时使用LDAP 主服务器 作为 CA 中心，自签名\n- 安装 gnutls-bin 和 ssl-cert 包\n```\nsudo apt install gnutls-bin ssl-cert\n```\n- 为证书授权中心创建私钥\n```\nsudo certtool --generate-privkey --bits 4096 --outfile /etc/ssl/private/mycakey.pem\n```\n- 创建模板文件来定义CA\n```\n/etc/ssl/ca.info\n\t cn = example (example company)  \n\t ca\n\t cert_signing_key\n\t expiration_days = 3650\n```\n- 创建自签名 CA (根)证书\n```\nsudo certtool --generate-self-signed \\\n--load-privkey /etc/ssl/private/mycakey.pem \\\n--template /etc/ssl/ca.info \\\n--outfile /usr/local/share/ca-certificates/mycacert.crt\n```\n- Note：\n\t`--outfile`路径是正确的，将CA证书写入`/usr/local/share/ca-certificates`。\n\t**update-ca-certificates** 将从这里获取受信任的本地CA。如果要从`/usr/share/ca-certificates`获取CA，需要调用`dpkg-reconfigure ca-certificates`\n\n- 将新的 CA 根证书添加到受信任 CA 列表\n```\nsudo update-ca-certificates     # 会创建一个/etc/ssl/certs/mycacert.pem符号链接，指向/usr/local/share/ca-certificates中的真实文件\n```\n### 5.2 创建 LDAP 服务的服务器私钥与证书\n- 创建私钥\n```\nsudo certtool --generate-privkey \\\n--bits 2048 \\\n--outfile /etc/ldap/ldap01_slapd_key.pem\n```\n- 服务器信息文件\n```\n/etc/ssl/ldap01.info\n\torganization = example\n\tcn = ldap01.example.top                     # 服务器证书的DN必须使用CN属性来命名服务器，并且CN必须携带服务器的完全限定域名，dns 需要有 A 记录解析\n\ttls_www_server\n\tencryption_key\n\tsigning_key\n\texpiration_days = 365\n证书有效期为1年，仅对_`ldap01`_主机名有效\n```\n- 创建LDAP服务器的证书\n```\nsudo certtool --generate-certificate \\\n--load-privkey /etc/ldap/ldap01_slapd_key.pem \\\n--load-ca-certificate /etc/ssl/certs/mycacert.pem \\\n--load-ca-privkey /etc/ssl/private/mycakey.pem \\\n--template /etc/ssl/ldap01.info \\\n--outfile /etc/ldap/ldap01_slapd_cert.pem\n```\n- 调整权限\n```\nsudo chgrp openldap /etc/ldap/ldap01_slapd_key.pem\nsudo chmod 0640 /etc/ldap/ldap01_slapd_key.pem\n```\n- ca根证书加入到受信列表\n```\nsudo cp   cacertificatefile  /usr/local/share/ca-certificates/mycacert.crt\nsudo update-ca-certificates\n```\n  \n- 对LDAP服务配置证书\n```\ndn: cn=config\nadd: olcTLSCACertificateFile\nolcTLSCACertificateFile: /etc/ssl/certs/mycacert.pem\n-\nadd: olcTLSCertificateFile\nolcTLSCertificateFile: /etc/ldap/ldap01_slapd_cert.pem\n-\nadd: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: /etc/ldap/ldap01_slapd_key.pem\n```\n- 配置slapd-config数据库：\n```\nsudo ldapmodify -Y EXTERNAL -H ldapi:/// -f certinfo.ldif \n```\n- 报错调整，更改`certinfo.ldif`，将`add`改成了`replace`，可以解决以下问题。修改后再次执行`ldapmodify`\n```\nldapmodify -Y EXTERNAL -H ldapi:/// -f certinfo.ldif \n\tSASL/EXTERNAL authentication started SASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth \n\tSASL SSF: 0 \n\tmodifying entry \"cn=config\" ldap_modify: Inappropriate matching (18) \n\tadditional info: modify/add: olcTLSCACertificateFile: no equality matching rule\n```\n- ldap-client增添配置文件\n```\n/etc/ldap/ldap.conf\n\t# LDAP Defaults\n\t# See ldap.conf(5) for details\n\t# This file should be world readable but not world writable.\t\n\tBASE       dc=example,dc=top                                                      # LDAP服务的基础DN\n\tURI ldap://localhost:389 ldaps://localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  /etc/ssl/certs/ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径\n\tTLS_REQCERT demand                                                        # \"demand\"，表示需要验证服务器的证书\n```\n- 需要访问 LDAPS（LDAP over SSL），需要编辑配置，并重启 slapd\n```\n/etc/default/slapd\n\tSLAPD_SERVICES=\"ldap:/// ldapi:/// ldaps:///\"\n```\n- 测试启动 TLS\n```\nldapwhoami -x -ZZ -H ldap://ldap01.example.com\nanonymous\n```\n- 测试连接\n```\nldapwhoami -x -H ldaps://ldap01.example.com\nanonymous\n```\n\n### 5.3 LDAP 从服务器的 TLS, 在主服务器创建后，拷贝证书到从服务器\n-  指定目录保存\n```\nmkdir ldap02-ssl\ncd ldap02-ssl\ncerttool --generate-privkey \\\n--bits 2048 \\\n--outfile ldap02_slapd_key.pem\n```\n- 编辑信息文件ldap02.info\n```\norganization = example\ncn = ldap02.example.top                      \ntls_www_server\nencryption_key\nsigning_key\nexpiration_days = 365\n```\n- 创建证书\n```\nsudo certtool --generate-certificate \\\n--load-privkey ldap02_slapd_key.pem \\\n--load-ca-certificate /etc/ssl/certs/mycacert.pem \\\n--load-ca-privkey /etc/ssl/private/mycakey.pem \\\n--template ldap02.info \\\n--outfile ldap02_slapd_cert.pem\n```\n\n```\ncp /etc/ssl/certs/mycacert.pem .\nscp -r ldap02-ssl user@ldap02_ip:\n```\n- 从服务器中安装证书\n```\nsudo cp ldap02_slapd_cert.pem ldap02_slapd_key.pem /etc/ldap\nsudo chgrp openldap /etc/ldap/ldap02_slapd_key.pem\nsudo chmod 0640 /etc/ldap/ldap02_slapd_key.pem\nsudo cp mycacert.pem /usr/local/share/ca-certificates/mycacert.crt\nsudo update-ca-certificates\n```\n- 对LDAP服务配置证书 `./certinfo.ldif `\n```\ndn: cn=config\nadd: olcTLSCACertificateFile\nolcTLSCACertificateFile: /etc/ssl/certs/mycacert.pem\n-\nadd: olcTLSCertificateFile\nolcTLSCertificateFile: /etc/ldap/ldap02_slapd_cert.pem\n-\nadd: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: /etc/ldap/ldap02_slapd_key.pem\n```\n- 配置slapd-config数据库：\n```\nsudo ldapmodify -Y EXTERNAL -H ldapi:/// -f certinfo.ldif \n```\n- 增添配置文件\n```\n/etc/ldap/ldap.conf\n\tBASE       dc=example,dc=top                                                      # LDAP服务的基础DN\n\tURI ldap://localhost:389 ldaps://localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  /etc/ssl/certs/ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径\n\tTLS_REQCERT demand                                                        # \"demand\"，表示需要验证服务器的证书\n```\n- 需要访问 LDAPS（LDAP over SSL），需要编辑配置，并重启 slapd\n```\n/etc/default/slapd\n\tSLAPD_SERVICES=\"ldap:/// ldapi:/// ldaps:///\"\n```\n- 测试启动 TLS\n```\nldapwhoami -x -ZZ -H ldap://ldap02.example.top\nanonymous\n```\n- 测试连接\n```\nldapwhoami -x -H ldaps://ldap02.example.top\nanonymous\n```\n\n### 5.4 使用合法证书\n\n- 将新的 CA 根证书添加到受信任 CA 列表（客户端操作，权威证书按理不需要拷贝，未测试）\n```\nsudo   cp   _.example.top-chain.pem   /usr/local/share/ca-certificates/mycacert.crt\nsudo update-ca-certificates\n```\n\n- 准备服务器证书和私钥（服务端）\n```\n ls /etc/ldap\n\tcertinfo.ldif   _.example.top-crt.pem   _.example.top-key.pem\nsudo chgrp openldap /etc/ldap/_.example.top-key.pem\nsudo chmod 0640 /etc/ldap/_.example.top-key.pem\n```\n\n- certinfo.ldif\n```\ndn: cn=config\nchangetype: modify\nreplace: olcTLSCACertificateFile\nolcTLSCACertificateFile: /etc/ssl/certs/mycacert.pem\n-\nreplace: olcTLSCertificateFile\nolcTLSCertificateFile: /etc/ldap/_.example.top-crt.pem\n-\nreplace: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: /etc/ldap/_.example.top-key.pem\n\n```\n\n```\nsudo ldapadd  -Y   EXTERNAL  -H  ldapi:///   -f    certinfo.ldif\n```\n\n\n- 增添配置文件，这是客户端需要连接 ldap 服务器使用的配置。可以忽略。\n```\n/etc/ldap/ldap.conf\n\tBASE       dc=example,dc=top                                                      # LDAP服务的基础DN\n\t[[URI]] ldap://localhost:389 ldaps://localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  /etc/ssl/certs/ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径，必需\n\tTLS_REQCERT allow                                                      # \"demand\"，表示需要验证服务器的证书\n```\n- 启用 ldaps，重启 slapd\n```\n/etc/default/slapd\n\tSLAPD_SERVICES=\"ldap:/// ldapi:/// ldaps:///\"\n```\n\n\n### 5.5 使用 nextcloud 测试加密连接\n\n- docker 安装 nexcloud，登录 UI ，右上角点击账户，选择应用\n- 应用捆绑包，启用 LDAP user and group backend\n- 设置连接\n- ldaps连接(严格一致才是tls加密，nextcloud应该只信任权威证书)\n\n- 明文传输 \n\n### 5.6 stunnel 加密传输两个应用的数据(例：phpldapadmin)\n\n链路： ldap user ui  ---- stunnel client  accept  ----  stunnel client connect  ---- stunnel server accept  ---- stunnel server connect ----ldap server port\n```\napt install -y stunnel4\nvim /etc/default/stunnel4\n\tENABLED=1\n```\n\n```\n# stunnel 服务端\n\tcert = /etc/stunnel/stunnel.pem\n\tkey = /etc/stunnel/stunnel-key.pem\n\tverify = 3\n\tclient = no\n\tdebug = 6\n\tpid = /var/run/stunnel4/stunnel4.pid\n\t\n\t[ldap]\n\taccept = 10.13.3.106:6360                # 监听 stunnel 服务的流量，客户端（是指stunnel 客户端）将连接此目标并发送流量到这里\n\tconnect = 10.13.3.106:389                # 转发到 stunnel 加密连接的服务的端口\n\tCAfile = /etc/stunnel/stunnel.pem\n\n# stunnel 客户端\n\tcert = /etc/stunnel/stunnel.pem\n\tkey = /etc/stunnel/stunnel-key.pem\n\tverify = 3\n\tclient = yes\n\tdebug = 6\n\tsetuid = stunnel4\n\tsetgid = stunnel4\n\tpid = /var/run/stunnel4/stunnel4.pid\n\t\n\t[ldap]\n\taccept = 10.13.3.107:389                # 监听 stunnel 服务的流量，客户端（是指ldap的客户端）将连接此目标并发送流量到这里\n\tconnect = 10.13.3.106:6360              # 加密连接并转发到 stunnel 的服务端\n\tCAfile = /etc/stunnel/stunnel.pem\n```\n\n```\n/etc/phpldapadmin/config.php\n\t$servers->setValue('server','host','69.87.216.102');  # 指向 stunnel 客户端，和他本地监听的端口\n\t$servers->setValue('server','port',389);\t\n```\n## 六、 其他模块\n### 6.1 日志模块\n```\n/etc/ldap/loglevel.ldif\n\tdn: cn=config\n\tchangetype: modify\n\treplace: olcLogLevel\n\tolcLogLevel: stats\n\nldapmodify  -Y  EXTERNAL  -H  ldapi:///  -f  loglevel.ldif               # 日志在/var/log/syslog | grep slapd , 比默认的级别详细\n```\n### 6.2 memberOf 开启\n```\n/etc/ldap/refint.ldif\n\t# enable_refint.ldif\n\tdn: cn=module{0},cn=config\n\tchangetype: modify\n\tadd: olcModuleLoad\n\tolcModuleLoad: refint.la\n\t-\n\tdn: olcOverlay=refint,olcDatabase={1}mdb,cn=config\n\tchangetype: add\n\tobjectClass: olcOverlayConfig\n\tobjectClass: olcRefintConfig\n\tolcOverlay: refint\n\nldapadd -Q -Y EXTERNAL -H ldapi:// -f refint.ldif\n```\n\n```\n/etc/ldap/memberof.ldif\n\tdn: cn=module,cn=config\n\tchangetype: add\n\tcn: module\n\tobjectClass: olcModuleList\n\tolcModulePath: /usr/lib/ldap\n\t\n\tdn: cn=module{0},cn=config\n\tchangetype: modify\n\tadd: olcModuleLoad\n\tolcModuleLoad: memberof.la\n\t\n\tdn: olcOverlay=memberof,olcDatabase={1}mdb,cn=config\n\tchangetype: add\n\tobjectClass: olcConfig\n\tobjectClass: olcMemberOf\n\tobjectClass: olcOverlayConfig\n\tobjectClass: top\n\tolcOverlay: memberof\n\tolcMemberOfDangling: ignore\n\tolcMemberOfRefInt: TRUE\n\tolcMemberOfGroupOC: groupOfNames\n\tolcMemberOfMemberAD: member\n\tolcMemberOfMemberOfAD: memberOf\n\nldapmodify -Y EXTERNAL -H ldapi:/// -f memberof.ldif\n```\n\n- 为条目添加此属性：LDIF文件中先创建用户的dn，然后创建目标组的dn，在创建组的时候将关联的用户写在member属性中\n\n### 6.3 Self Service Password 自助密码管理\n- 容器部署，解决 php 依赖准备繁琐\n- 镜像 ltbproject/self-service-password:1.5.3\n- 为 admin 用户设置修改密码的权限\n```\n下列权限可以使得 \"admin,example,net\" 对这个域 \"dc=example,dc=tech\" 做用户添加、属性修改\nolcAccess: {0}to attrs=userPassword,shadowLastChange by dn=\"cn=admin,dc=example,dc=net\" write by anonymous auth by self write by * none\nolcAccess: {1}to dn.subtree=\"dc=example,dc=tech\" by dn.base=\"cn=admin,dc=example,dc=net\" write\n```\n- 需要对企业邮箱帐号开启设置-帐号与安全-客户端设置-客户端授权密码\n- ssp.conf.php  成功配置版本，并映射到容器： /home/example/sspasswd/conf.php:/var/www/conf/config.inc.local.php\n```php\n<?php\n$debug = false;\n$keyphrase = \"example\";\n$use_sms = false;\n$use_questions = false;\n$lang = \"cn,zh-CN\";\n$use_change = true;\n#$reset_url = $_SERVER['HTTP_X_FORWARDED_PROTO'] . \"://\" . $_SERVER['HTTP_X_FORWARDED_HOST'] . $_SERVER['SCRIPT_NAME'];\n$reset_url = \"https://ssp.example.net\" . $_SERVER['HTTP_X_FORWARDED_HOST'] . $_SERVER['SCRIPT_NAME'];\n$show_menu = false;\n$logo = \"images/logo.png\";                # 这两项在配置前，需要确保图片映射路径在容器内部的 /var/www/html/images 下\n$background_image = \"images/back.png\";\n$default_action = \"sendtoken\";        # 默认展示在首页的修改密码的方式\n$show_menu = false;              # 关闭顶部的修改方式选择菜单\n\n# LDAP\n\n$ldap_url = \"ldap://10.13.3.107/\";\n$ldap_starttls = false;\n$ldap_binddn = \"cn=admin,dc=example,dc=net\";\n$ldap_bindpw = 'example@2020';\n#$ldap_bindpw = \"{SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\";\n$ldap_base = \"dc=example,dc=net\";\n#$ldap_base = \"dc=example,dc=tech\";    # 在这里同时书写两个，只会生效后一个域, 使用两个实例连接 ldap 服务\n$ldap_fullname_attribute = \"cn\";\n$ldap_filter = \"(&(objectClass=inetOrgPerson)($ldap_fullname_attribute={login}))\";\n$ldap_use_exop_passwd = false;\n$ldap_use_ppolicy_control = false;\n$TLS_REQCERT = \"allow\";\n\n# email\n$mail_attributes = array(\"mail\", \"gosaMailAlternateAddress\", \"proxyAddresses\");\n$mail_address_use_ldap = true;\n$mail_from = \"user5@example.net\";\n$mail_from_name = \"密码自主修改服务\";\n$mail_signature = \"如有疑问,请联系运维同事,英博智云.\";\n$notify_on_change = false;\n$mail_protocol = 'smtp';\n$mail_smtp_host = 'smtphz.qiye.163.com';\n$mail_smtp_auth = true;\n$mail_smtp_user = \"user5@example.net\";\n$mail_smtp_pass = 'TdhYDdgvN7Hpky5a';\n$mail_smtp_port = 465;\n$mail_smtp_timeout = 30;\n$mail_smtp_keepalive = false;\n$mail_smtp_secure = 'ssl';\n$mail_smtp_autotls = false;\n$mail_smtp_options = array();\n$mail_contenttype = 'text/plain';\n$mail_wordwrap = 0;\n$mail_charset = 'utf-8';\n$mail_priority = 3;\n\n# password policy\n$hash = \"SSHA\"; # 修改的用户密码传递过程中会采取这里指定的加密\n$pwd_min_length = 8;\n$pwd_max_length = 20;\n$pwd_min_lower = 1;\n$pwd_min_upper = 1;\n$pwd_min_digit = 1;\n$pwd_min_special = 1;\n$pwd_special_chars = \"^a-zA-Z0-9\";\n$pwd_complexity = 4;\n$pwd_no_reuse = true;\n$pwd_forbidden_words = array(\"example\", \"example\", \"example\", \"password\");\n$pwd_show_policy_pos = \"above\";\n$pwd_show_policy = \"onerror\";\n?>\n```\n\n```\ndocker run -p 8000:80 \\\n> --restart=always \\\n> --name sspass \\\n> -v /home/example/sspasswd/conf.php:/var/www/conf/config.inc.local.php \\\n> -itd docker.io/ltbproject/self-service-password\n```\n\n#### 6.3.1 不能进入修改链接 Token is not valid\n```\n注释了这两项\n#$use_tokens = true;\n#$crypt_tokens = true;\n```\n\n#### 6.3.2 反向代理 Self Service Password\n```\nupstream ssp {\n  server 10.13.3.108:8000;\n}\n\nserver {\n    listen 80;\n    server_name ssp.example.net;\n    return 301 https://$server_name$request_uri;\n}\nserver {\n    listen 443 ssl ;\n    server_name ssp.example.net;\n    ssl_certificate webmin/tls_ca.pem;\n    ssl_certificate_key webmin/tls_key.pem;\n\n    location / {\n      proxy_pass http://ssp;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto \"https\";\n      proxy_read_timeout 1800s;\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n###  6.4 LDAP 对目录信息的数据做备份还原和迁移\n####  6.4.1 备份\n\n```\nsudo slapcat -n 3 -l ./back3.ldif           # -n 指定数据库编号，数字对应各个dit的数据库编号( 配置数据库----olcDatabase={0}config.ldif; 目录信息数据库----olcDatabase={1}mdb.ldif )\n```\n\n#### 6.4.2 恢复\n原服务器上恢复，服务需要暂停\n```\nsudo systemctl stop slapd\n```\n\n配置目录一般位于 `/etc/openldap/slapd.d`，将原有配置删除，然后使用 `slapadd` 导入新的配置\n```\n$ rm -rf /etc/ldap/slapd.d/*\n$ slapadd  -n  0  -F  /etc/ldap/slapd.d  -l  ./config.2021-09-18.ldif\n$ chown -R openldap:openldap /etc/ldap/slapd.d\n```\n\n数据目录一般位于 `/var/lib/ldap-*`，模拟时，将原有数据删除，然后使用 `slapadd` 导入新的数据：\n```\n$ rm  -rf  /var/lib/ldap-example/*         # 定制了不同的$default_action = \"sendtoken\";\n$show_menu = false;dit有不同的目录分别存储不同domain的内容，注意，导入前目录必需首先存在，且权属 openldap:openldap。\n$ slapadd -n 1 -F /etc/openldap/slapd.d -l ./data.2021-09-18.ldif\n$ chown -R openldap:openldap  /var/lib/ldap-example\n$ systemctl start slapd\n```\n#### 6.4.3 openldap的迁移\nplaybook 新建的服务器，执行恢复\n```\nslapadd -n 1 -F /etc/openldap/slapd.d -l ./data.2021-09-18.ldif\n\n[[如果导入失败，或者数据已存在，删除rm]] -rf /var/lib/ldap/*  重新导入\n```\n\n\n## 七、 命令资料\n> [来自此处](https://blog.csdn.net/jenyzhang/article/details/56487627)\n>ldap  \n    |-slapd             目录服务的主要程序  \n    |-slurpd           目录服务进行复制的程序  \n    |-slapadd           向目录中添加数据  \n    |-slapcat           把目录中的条目导出成ldif文件  \n    |-slapindex         重建目录的索引  \n    |-ldapcompare       对目录的条目的属性进行比较  \n    |-ldapadd           向目录服务中添加条目  \n    |-ldapdelete        删除目录中的条目  \n    |-ldapmodify        更新目录中条目的值  \n    |-ldapmodrdn        更改条目的DN  \n    |-ldappasswd        更改条目的密码  \n    |-ldapsearch        对目录进行查询\n\n>ldapadd  \n      -x   进行简单认证  \n      -D   用来绑定服务器的DN  \n      -h   目录服务的地址  \n      -w   绑定DN的密码  \n      -f   使用ldif文件进行条目添加的文件  \n      \n- 例子\n       ldapadd -x -D \"cn=root,dc=starxing,dc=com\" -w secret -f /root/test.ldif  \n       ldapadd -x -D \"cn=root,dc=starxing,dc=com\" -w secret (这样写就是在命令行添加条目)  \n       \n> ldapsearch  \n      -x   进行简单认证  \n      -D   用来绑定服务器的DN  \n      -w   绑定DN的密码  \n      -b   指定要查询的根节点  \n      -H   制定要查询的服务器\n      -s   指定搜索范围的类型\n     \n- 例子\n \tldapsearch -x -D \"cn=root,dc=starxing,dc=com\" -w secret -b \"dc=starxing,dc=com\"  \n       使用简单认证，用 \"cn=root,dc=starxing,dc=com\" 进行绑定，  \n       要查询的根是 \"dc=starxing,dc=com\"。这样会把绑定的用户能访问\"dc=starxing,dc=com\"下的所有数据显示出来。\n       ldapsearch -x -W -D \"cn=administrator,cn=users,dc=osdn,dc=zzti,dc=edu,dc=cn\" -b \"cn=administrator,cn=users,dc=osdn,dc=zzti,dc=edu,dc=cn\" -h troy.osdn.zzti.edu.cn\n\t ldapsearch -b \"dc=canon-is,dc=jp\" -H ldaps://192.168.0.92:636\n\t   (需要修改openldap客户端的配置文件ldap.conf,参考：http://ms.ntcb.edu.tw/~steven/l-penguin.s/article/ldap-5.htm)\n\n>ldapdelete   \n      ldapdelete -x -D \"cn=Manager,dc=test,dc=com\" -w secret \"uid=test1,ou=People,dc=test,dc=com\"  \n      ldapdelete -x -D 'cn=root,dc=it,dc=com' -w secert 'uid=zyx,dc=it,dc=com'  \n      这样就可以删除'uid=zyx,dc=it,dc=com'记录了，应该注意一点，其下有子条目的不能删除  \n\t\n\t\n- 例子1  递归删除所有：\nldapdelete -x -D 'cn=administrator,dc=example,dc=net' -w example@2020 -r \"ou=example,dc=example,dc=net\"\n\n- 例子2  删除一个acl策略。acl-dele.ldif\n\t   dn: olcDatabase={3}mdb,cn=config\n\t   delete: olcAccess\n\t   olcAccess: {2}\n\t   olcAccess: {3}\n\t   olcAccess: {4}  \n   ldapmodify -Y EXTERNAL -H ldapi:/// -f acl-dele.ldif\n\n  \n> ldappasswd  \n    -x   进行简单认证  \n    -D   用来绑定服务器的DN  \n    -w   绑定DN的密码  \n    -S   提示的输入密码  \n    -s pass 把密码设置为pass  \n    -a pass 设置old passwd为pass  \n    -A   提示的设置old passwd  \n    -H   是指要绑定的服务器  \n    -I   使用sasl会话方式  \n    \n- 例子\n    ldappasswd -x -D 'cm=root,dc=it,dc=com' -w secret 'uid=zyx,dc=it,dc=com' -S  \n       New password:  \n       Re-enter new password:  \n       就可以更改密码了，如果原来记录中没有密码，将会自动生成一个userPassword。  \n    \n> ldapmodify  \n     -a 添加新的条目.缺省的是修改存在的条目.  \n     -C 自动追踪引用.  \n     -c 出错后继续执行程序并不中止.缺省情况下出错的立即停止.比如如果你的ldif 文件内的某个条目在[数据库](http://lib.csdn.net/base/mysql \"MySQL知识库\")内并不存在,缺省情况下程序立即退出,但如果使用了该参数,程序忽略该错误继续执行.  \n     -n 用于调试到服务器的通讯.但并不实际执行搜索.服务器关闭时,返回错误；服务器  \n       打开时,常和-v 参数一起[测试](http://lib.csdn.net/base/softwaretest \"软件测试知识库\")到服务器是否是一条通路.  \n     -v 运行在详细模块.在标准输出中打出一些比较详细的信息.比如:连接到服务器的  \n       ip 地址和端口号等.  \n     -M  打开 manage DSA IT 控制. -MM 把该控制设置为重要的.  \n     -f file 从文件内读取条目的修改信息而不是从标准输入读取.  \n    -x 使用简单认证.  \n    -D binddn 指定搜索的用户名(一般为一dn 值).  \n    -W 指定了该参数,系统将弹出一提示入用户的密码.它和-w 参数相对使用.  \n    -w bindpasswd 直接指定用户的密码. 它和-W 参数相对使用.  \n    -H ldapuri 指定连接到服务器uri(ip 地址和端口号,常见格式为 ldap://hostname:port ).如果使用了-H 就不能使用-h 和-p 参数.  \n    -h ldaphost 指定要连接的主机的名称/ip 地址.它和-p 一起使用 \n    -p ldapport 指定要连接目录服务器的端口号.它和-h 一起使用，如果使用了-h 和-p 参数就不能使用-H 参数.  \n    -Z 使用StartTLS 扩展操作.如果使用-ZZ,命令强制使用StartTLS 握手成功.  \n    -V 启用证书认证功能,目录服务器使用客户端证书进行身份验证,必须与-ZZ 强制启用  \n       TLS 方式配合使用,并且匿名绑定到目录服务器.  \n    -e 设置客户端证书文件,例: -e cert/client.crt  \n    -E 设置客户端证书私钥文件,例: -E cert/client.key  \n\n- 例子\nldapmodify -x -D \"cn=root,dc=it,dc=com\" -W -f modify.ldif    #   将modify.ldif中的记录更新原有的记录。\n\n\n## 八、 参考链接\n[指南](https://github.com/jt6562/LDAP-read-notes/blob/master/ldap-guide/OpenLDAP%E7%AE%A1%E7%90%86%E5%91%98%E6%89%8B%E5%86%8C.md)\n[知识总结](https://www.cnblogs.com/kevingrace/p/5773974.html)\n[参考1](https://www.cnblogs.com/js1314/p/12887893.html)\n[参考2](https://cloud.tencent.com/developer/article/1932586)\n[参考3](https://blog.csdn.net/u011607971/article/details/121126289?spm=1001.2014.3001.5501#t3)\n[Ubuntu wiki](https://ubuntu.com/server/docs/service-ldap-with-tls)\n[tls参考1](https://www.cnblogs.com/shu-sheng/p/14450815.html)\n[tls参考2](https://hmli.ustc.edu.cn/doc/linux/ubuntu-ldap/ubuntu-ldap.html#id14)\n[tls参考3](https://zhuanlan.zhihu.com/p/643010354)\n\n## 九、问题：\n### 9.1 从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果\n###  9.2 日志功能开启失败\n\t已经调整日志级别，在系统日志中查看并grep\n### 9.3 证书缺失(只能使用ldap01,这个信息查询）\n\t采取使用权威证书\n### 9.4 重启slap报错 tls init   failed\n\t解决办法：重新生成证书\n### 9.5 报错 ldap_start_tls: Connect error (-11)    \\n    additional info: (unknown error code)\n\t可能是由于服务器证书的通用名（Common Name）字段是否与主机名不一致，请检查主机名和服务器证书\n### 9.6 连接问题\n```\nldapsearch -H ldaps://ldap.example.top  -D \"cn=admin,dc=example,dc=top\" -W            # 在服务器本机执行此查询的报错。但是在另一个机器可以成功查询\n\tldap_sasl_bind(SIMPLE): Can't contact LDAP server (-1)                                 # 配置 ldap.conf 之后成功解决并有输出 tls=demand/allow----作用是证书检查\n```\n### 9.7 在多域的使用中，不能正常添加子条目，出现“shadow context; no update referral”\n```\n1. 首先尝试重新部署，发现执行镜像复制的剧本之前可以正常创建所有的条目\n    解决：在mirror mode 开启时，需要指定相应的数据库\n2.  shadow context; no update referral  根本原因是需要检查权限\n```\n### 9.8 使用的脚本一致，测试环境和生产环境结果不一致; 主要是不能长时间正常保持客户端连接并查询\n- 脚本中的组织信息ldif文件有问题，经测试不影响。\n- memberOf，属性不可单独添加，通过 groupofNames 指定 member 之后会自动关联。已经修正使用方式，结果未改变。\n- 2204 系统和 2004 系统的slapd版本不一致（并没有影响）。\n- 将orgnization的任务和前一部分拆分，否则会出现读取不到 rootdn（手动测试是成功的）（然而脚本中修改后并没有解决这个问题）。\n- 将organization拆分，在此之前重启服务，未解决。\n- 将organization拆分，在此之前先重启虚拟机。（有效、怀疑是服务中某些连接的状态在ansible执行中没有更新）（仍然失效了，经过一夜之后失效）。\n- 另一台2204主机安装正常使用，怀疑虚拟机系统问题。\n\n## 十、 验证\n### 10.1 检测连接命令： \n\n ldaps://    ----ldap over ssl  使用636 ，从连接开始加密   ;        ldap://           ---ldap_start_tls(-ZZ参数):    使用389，从传输开始加密\n```\nldapsearch -H ldaps://ldap01.example.top:636 -D \"cn=admin,dc=example,dc=top\" -W -b \"dc=example,dc=top\" -s sub \"(objectClass=person)\"\n\nldapsearch -H ldap://10.13.3.106  -D \"cn=admin,dc=example,dc=top\" -W -b \"dc=example,dc=top\" -s sub \"(objectClass=person)\"\n\nldapsearch -H ldap://ldap01.example.top  -D \"cn=admin,dc=example,dc=top\" -W -b \"dc=example,dc=top\" -s sub \"(objectClass=person)\"\n```\n### 10.2 验证和日志\ntag 101 应表明在查询; tag 97 是在认证\n```\nldapsearch -H ldap://ldap01.example.top  -D \"cn=admin,dc=example,dc=top\" -W   -ZZ      #  启用了tls功能 ，-ZZ 参数，仍然是 389 端口，连接后在传输过程中加密\n\t\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn=1240 fd=14 ACCEPT from IP=10.13.3.107:60674 (IP=0.0.0.0:389)\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn=1240 op=0 EXT oid=1.3.6.1.4.1.1466.20037\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn=1240 op=0 STARTTLS\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn=1240 op=0 RESULT oid= err=0 text=\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn=1240 fd=14 TLS established tls_ssf=256 ssf=256\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=1 BIND dn=\"cn=admin,dc=example,dc=top\" method=128\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=1 BIND dn=\"cn=admin,dc=example,dc=top\" mech=SIMPLE ssf=0\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=1 RESULT tag=97 err=0 text=\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=2 SRCH base=\"dc=example,dc=top\" scope=2 deref=0 filter=\"(objectClass=*)\"\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=2 SEARCH RESULT tag=101 err=0 nentries=6 text=\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 op=3 UNBIND\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn=1240 fd=14 closed\n```\n\n```\nldapsearch -H ldap://ldap01.example.top  -D \"cn=admin,dc=example,dc=top\" -W        # 明文传输\n\t\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 fd=14 ACCEPT from IP=10.13.3.107:37760 (IP=0.0.0.0:389)\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" method=128\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" mech=SIMPLE ssf=0\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=0 RESULT tag=97 err=0 text=\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=1 SRCH base=\"dc=example,dc=top\" scope=2 deref=0 filter=\"(objectClass=*)\"\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=1 SEARCH RESULT tag=101 err=0 nentries=6 text=\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 op=2 UNBIND\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn=1246 fd=14 closed\n```\n\n```\nldapsearch -H ldaps://ldap01.example.top  -D \"cn=admin,dc=example,dc=top\" -W        # 从连接就开始加密\n\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 fd=14 ACCEPT from IP=10.13.3.107:58726 (IP=0.0.0.0:636)\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 fd=14 TLS established tls_ssf=256 ssf=256\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" method=128\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=0 BIND dn=\"cn=admin,dc=example,dc=top\" mech=SIMPLE ssf=0\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=0 RESULT tag=97 err=0 text=\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=1 SRCH base=\"dc=example,dc=top\" scope=2 deref=0 filter=\"(objectClass=*)\"\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=1 SEARCH RESULT tag=101 err=0 nentries=6 text=\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 op=2 UNBIND\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn=1247 fd=14 closed\n```\n\n```\n ldapsearch -H ldaps://ldap01.example.top  -D \"cn=admin,dc=example,dc=top\" -W -ZZ\n\t\tldap_start_tls: Operations error (1)\n\t        additional info: TLS already started\n\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 fd=14 ACCEPT from IP=10.13.3.107:39894 (IP=0.0.0.0:636)\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 fd=14 TLS established tls_ssf=256 ssf=256\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 op=0 EXT oid=1.3.6.1.4.1.1466.20037\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 op=0 STARTTLS\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 op=0 RESULT oid= err=1 text=TLS already started                # 证明二者冲突，不能同时开启\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 op=1 UNBIND\n\tSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn=1248 fd=14 closed\n```\n\n## 十一、应用服务\n### 11.1 建立 ldap 管理/只读帐号\n```\ndn: cn=admin,dc=xxx,dc=xx \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi  \n  \n-  \ndn: cn=reader,dc=xxx2,dc=xx2  \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: {SSHA}UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n```\n\n###  11.2 详细的公司架构 ldif\n```\ndn: ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example  \n  \ndn: ou=example-bod,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-bod  \n  \ndn: cn=user1,ou=example-bod,ou=example,dc=example,dc=net  \ncn: user1  \ndepartmentnumber: 1  \ndisplayname: Zheng Yu  \nmail: user1@example.net  \nobjectclass: inetOrgPerson  \nsn: Zheng  \ntitle: President  \nuid: 10000  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-bod-admin,ou=example-bod,ou=example,dc=example,dc=net  \ncn: example-bod-admin  \nmember: cn=user1,ou=example-bod,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: ou=example-bus,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-bus  \n  \ndn: cn=user8,ou=example-bus,ou=example,dc=example,dc=net  \ncn: user8  \ndepartmentnumber: 2  \ndisplayname: Sun Minghong  \nmail: user8@example.net  \nobjectclass: inetOrgPerson  \nsn: Sun  \ntitle: Financial Manager  \nuid: 10001  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-bus-admin,ou=example-bus,ou=example,dc=example,dc=net  \ncn: example-bus-admin  \nmember: cn=user8,ou=example-bus,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: ou=example-sys,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-sys  \n  \ndn: cn=user2,ou=example-sys,ou=example,dc=example,dc=net  \ncn: user2  \ndepartmentnumber: 3  \ndisplayname: Xie Jian  \nmail: user2@example.net  \nobjectclass: inetOrgPerson  \nsn: Xie  \ntitle: Senior Systems Engineer  \nuid: 10002  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-sys-admin,ou=example-sys,ou=example,dc=example,dc=net  \ncn: example-sys-admin  \nmember: cn=user2,ou=example-sys,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: cn=user5,ou=example-sys,ou=example,dc=example,dc=net  \ncn: user5  \ndepartmentnumber: 3  \ndisplayname: Long Chao  \nmail: user5@example.net  \nobjectclass: inetOrgPerson  \nsn: Long  \ntitle: System Engineer  \nuid: 10003  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-sys-junior,ou=example-sys,ou=example,dc=example,dc=net  \ncn: example-sys-junior  \nmember: cn=user5,ou=example-sys,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: ou=example-ops,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-ops  \n  \ndn: cn=user6.tang,ou=example-ops,ou=example,dc=example,dc=net  \ncn: user6.tang  \ndepartmentnumber: 4  \ndisplayname: Tang Binchao  \nmail: user6.tang@example.net  \nobjectclass: inetOrgPerson  \nsn: Tang  \ntitle: System Engineer  \nuid: 10004  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-ops-admin,ou=example-ops,ou=example,dc=example,dc=net  \ncn: example-ops-admin  \nmember: cn=user6.tang,ou=example-ops,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: ou=example-dev,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-dev  \n  \ndn: cn=user3,ou=example-dev,ou=example,dc=example,dc=net  \ncn: user3  \ndepartmentnumber: 5  \ndisplayname: Chen Cheng  \nmail: user3@example.net  \nobjectclass: inetOrgPerson  \nsn: Chen  \ntitle: Senior Development Engineer  \nuid: 10005  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=example-dev-admin,ou=example-dev,ou=example,dc=example,dc=net  \ncn: example-dev-admin  \nmember: cn=user3,ou=example-dev,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: cn=user4.li,ou=example-dev,ou=example,dc=example,dc=net  \ncn: user4.li  \ndepartmentnumber: 5  \ndisplayname: Li user4  \nmail: user4.li@example.net  \nobjectclass: inetOrgPerson  \nsn: Li  \ntitle: Development Engineer  \nuid: 10006  \nuserpassword: {SSHA}W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn=user7,ou=example-dev,ou=example,dc=example,dc=net  \ncn: user7  \ndepartmentnumber: 5  \ndisplayname: Luo Xujun  \nmail: user7@example.net  \nobjectclass: inetOrgPerson  \nsn: Luo  \ntitle: Development Engineer  \nuid: 10007  \nuserpassword: {SSHA}/2+Coei5Fje+th7mOJgu43Ms3hBia2Qu  \n  \ndn: cn=example-dev-senior,ou=example-dev,ou=example,dc=example,dc=net  \ncn: example-dev-senior  \nmember: cn=user4.li,ou=example-dev,ou=example,dc=example,dc=net  \nmember: cn=user7,ou=example-dev,ou=example,dc=example,dc=net  \nobjectclass: groupOfNames  \n  \ndn: ou=example-rob,ou=example,dc=example,dc=net  \nobjectclass: organizationalUnit  \nou: example-rob\n```\n\n###  11.3 第一版 ACL\n```\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {2}to dn.subtree=\"ou=example,dc=example,dc=net\" filter=\"(&(objectClass=inetOrgPerson)(|(memberOf=cn=example-bod-admin,ou=example-bod,ou=example,dc=example,dc=net)(memberOf=cn=example-sys-admin,ou=example-sys,ou=example,dc=example,dc=net)(memberOf=cn=example-ops-admin,ou=example-ops,ou=example,dc=example,dc=net)))\" by dn.base=\"cn=exampleread,dc=ibexample,dc=com\" read\n\ndn: olcDatabase={4}mdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {0}to attrs=userPassword by self write by dn.base=\"cn=exampleadmin,dc=example,dc=net\" write  by anonymous auth  by * none\nolcAccess: {2}to dn.subtree=\"dc=ibexample,dc=com\" by dn.base=\"cn=exampleadmin,dc=example,dc=net\" write by dn.base=\"cn=exampleread,dc=ibexample,dc=com\" read\n```\n\n###  11.4 最终的acl（写两个域、读两个域、reader_example 可以读取某些admin组，实现映射到example域下集成的应用）\n- 添加\n```\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {2}to dn.subtree=\"dc=example,dc=net\" by dn.base=\"cn=exampleread,dc=example,dc=net\" read\nolcAccess: {3}to dn.subtree=\"dc=example,dc=net\" filter=\"(&(objectClass=inetOrgPerson)(|(memberOf=cn=example-bod-admin,ou=example-bod,ou=example,dc=example,dc=net)(memberOf=cn=example-sys-admin,ou=example-sys,ou=example,dc=example,dc=net)(memberOf=cn=example-ops-admin,ou=example-ops,ou=example,dc=example,dc=net)))\" by dn.base=\"cn=exampleread,dc=ibexample,dc=com\" read\n \ndn: olcDatabase={2}mdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {0}to attrs=userPassword by self write by dn.base=\"cn=exampleadmin,dc=example,dc=net\" write  by anonymous auth  by * none\nolcAccess: {2}to dn.subtree=\"dc=ibexample,dc=com\" by dn.base=\"cn=exampleadmin,dc=example,dc=net\" write by dn.base=\"cn=exampleread,dc=ibexample,dc=com\" read by dn.base=\"cn=exampleread,dc=example,dc=net\" read\n```\n\n- 删除\n```\ndn: olcDatabase={1}mdb,cn=config\ndelete: olcAccess\nolcAccess: {2}to..........\nolcAccess: {3}to........\n \n\nldapmodify -Y EXTERNAL -H ldapi:/// -f acl-dele.ldif\n```\n\n- 数据库内 ACL 顺序测试，{}里面是优先级，生效在前（涉及范围大的 ACL 应书写在前）\n```\nolcAccess: {0}to attrs=userPassword by self write by anonymous auth  by dn.base=\"cn=admin,dc=example,dc=net\" write  by * none   \nolcAccess: {1}to attrs=shadowLastChange by self write by * read\nolcAccess: {2}to dn.subtree=\"cn=example-sys-admin,ou=example-sys,dc=example,dc=tech\" by dn.base=\"cn=reader,dc=example,dc=net\" read by dn.base=\"cn=admin,dc=example,dc=net\" write    # 如果没有此条acl,该条目将不能在 lam 中被 admin 管理\n olcAccess: {3}to dn.subtree=\"dc=example,dc=tech\" by dn.base=\"cn=admin,dc=example,dc=net\" write      # 此条优先级最低\n```\n\n## 十二、集成其他应用\n### 12.1  conflunce \n```\nolcAccess: {0}to attrs=userPassword by self write by anonymous auth by * none\nolcAccess: {1}to attrs=shadowLastChange by self write by * read\nolcAccess: {2}to dn.subtree=\"dc=example,dc=net\" by dn.base=\"cn=reader,dc=ibexample,dc=com\" read\n```\n#### 12.1.1 连接 之后的 acl 过滤案例\n'(&(objectclass=inetorgperson)(|(cn=user5)(cn=user2)))'  过滤出指定用户----在用户模式设置。\n\n'(&(objectclass=groupOfNames)(|(cn=example-sys-junior)(cn=example-sys-admin)))' 过滤指定组----在组模式设置（在ldap中创建的组 objectclass 是groupOfNames）\n \n#### 12.1.2 更详细的 acl 需求\n- example\n```\nolcAccess: {0}to attrs=userPassword by self write  by anonymous auth  by * none\nolcAccess: {1}to attrs=shadowLastChange by self write by * read\nolcAccess: {2}to dn.subtree=\"dc=example,dc=net\" filter=\"(&(objectClass=inetOrg\n Person)(|(memberOf=cn=example-bod-admin,ou=example-bod,ou=example,dc=example,dc=net\n )(memberOf=cn=example-sys-admin,ou=example-sys,ou=example,dc=example,dc=net)(member\n Of=cn=example-ops-admin,ou=example-ops,ou=example,dc=example,dc=net)))\" by dn.base=\n \"cn=reader,dc=ibexample,dc=com\" read  by dn.base= \"cn=reader,dc=example,dc=net\" read\n\nsearch时，必须要具体到用户层级，例如nextcloud，需要指定基础用户树如下\n\ncn=user2,ou=example-sys,ou=example,dc=example,dc=net\ncn=user1,ou=example-bod,ou=example,dc=example,dc=net\ncn=user6.tang,ou=example-ops,ou=example,dc=example,dc=net\ndc=ibexample,dc=com\n```\n\n- example\n```\nolcAccess: {0}to attrs=userPassword by self write by dn.base=\"cn=admin,dc=example,dc=net\" write  by anonymous auth  by * none\nolcAccess: {1}to attrs=shadowLastChange by self write by * read\nolcAccess: {2}to dn.subtree=\"dc=ibexample,dc=com\" by dn.base=\"cn=admin,dc=example,dc=net\" write by dn.base=\"cn=reader,dc=ibexample,dc=com\" read\n```\n\n### 12.2 集成 vault\n- 过滤特定用户\n```\n(&(objectClass=inetOrgPerson)({{.UserAttr}}={{.Username}})(|(cn=user2)(cn=user1)(cn=%s)))\n```\n- 过滤某个组\n```\n(&(objectClass=inetOrgPerson)({{.UserAttr}}={{.Username}})(memberof=CN=example-sys-admin,OU=example-sys,OU=example,DC=example,DC=net))\n```\n- 过滤多个组\n```\n(&(objectclass=inetOrgPerson)({{.UserAttr}}={{.Username}})(|(memberof=CN=example-sys-admin,OU=example-sys,OU=example,DC=example,DC=net)(memberof=CN=example-dev-admin,OU=example-dev,OU=example,DC=example,DC=net)))\n```\n- 过滤特定用户和特定组\n```\n(&(objectclass=inetOrgPerson)({{.UserAttr}}={{.Username}})(|(|(cn=user4.li))(|(memberof=CN=example-sys-admin,OU=example-sys,OU=example,DC=example,DC=net)(memberof=CN=example-dev-admin,OU=example-dev,OU=example,DC=example,DC=net))(cn=%s)))\n```\n- 错误\n```\n(&(objectClass=inetOrgPerson)({{.UserAttr}}={{.Username}})(|(cn=user2)(cn=user1))(cn=%s))  会失败\n\n以下 1 条，写在group filter的时候会出现不能过滤，所有人都可以登录\n(&(objectclass=inetOrgPerson)(|(memberof=CN=example-sys-admin,OU=example-sys,OU=example,DC=example,DC=net)(memberof=CN=example-dev-admin,OU=example-dev,OU=example,DC=example,DC=net)))\n```\n\n\n\n","slug":"Multiple-Domians-in-OpenLDAP-Use-Case","published":1,"updated":"2023-12-25T13:27:50.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrhtjair000altm74y1tag9e","content":"<h1 id=\"OpenLDAP\"><a href=\"#OpenLDAP\" class=\"headerlink\" title=\"OpenLDAP\"></a>OpenLDAP</h1><h2 id=\"一、-概念\"><a href=\"#一、-概念\" class=\"headerlink\" title=\"一、 概念\"></a>一、 概念</h2><p><a href=\"https://www.openldap.org/doc/admin26/guide.html\">官方手册</a></p>\n<h3 id=\"1-1-常用属性\"><a href=\"#1-1-常用属性\" class=\"headerlink\" title=\"1.1 常用属性\"></a>1.1 常用属性</h3><ul>\n<li>DN：Distinguished Name，LDAP记录项的标识，有唯一性，例如：dc:”cn&#x3D;admin,ou&#x3D;developer,dc&#x3D;163,dc&#x3D;com”  </li>\n<li>dc&#x3D; DomainComponent 为域组件，域名的一部分</li>\n<li>cn&#x3D;CommonName 为记录名，表示一个实体，最长到80个字符，可以为中文；</li>\n<li>ou&#x3D;OrganizationUnit 为组织单位，用于分类，最多四级，每级最长32字符，可以为中文；</li>\n<li>uid&#x3D;User id 为用户的唯一标识</li>\n<li>c&#x3D;Country 为国家名，可选，为2个字符长</li>\n<li>o&#x3D;Organization 为组织名，可选，可以3—64个字符长</li>\n</ul>\n<h2 id=\"二、-手动安装和配置-LDAP\"><a href=\"#二、-手动安装和配置-LDAP\" class=\"headerlink\" title=\"二、 手动安装和配置 LDAP\"></a>二、 手动安装和配置 LDAP</h2><h3 id=\"2-1-安装-slapd-独立的-LDAP-守护进程，同时便于管理服务\"><a href=\"#2-1-安装-slapd-独立的-LDAP-守护进程，同时便于管理服务\" class=\"headerlink\" title=\"2.1 安装 slapd (独立的 LDAP 守护进程，同时便于管理服务)\"></a>2.1 安装 slapd (独立的 LDAP 守护进程，同时便于管理服务)</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt install  -y slapd ldap-utils<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-2-重新配置-OpenLDAP，创建-base-dn\"><a href=\"#2-2-重新配置-OpenLDAP，创建-base-dn\" class=\"headerlink\" title=\"2.2  重新配置 OpenLDAP，创建 base dn\"></a>2.2  重新配置 OpenLDAP，创建 base dn</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo dpkg-reconfigure slapd   # 主要配置密码 (密码在下一步重置，便于配置连接)，DNS domain name(即 LDAP 服务中的 base dn)\n\n\t 说明：\n\t第一步回答 No\n\t第二步填写域名，比如 mycompany.com\n\t第三步填写组织名，比如 Company\n\t第四步填写管理员密码，比如 secret；第五步确认管理员密码\n\t第六步选择使用的数据库后端，比如 MDB\n\t第七步选择在清除 slapd 时是否移除数据库，比如 Yes\n\t第八步选择是否移除旧数据库，比如 Yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-3-生成密码，用于控制台登录的admin帐号，需要保存此密文密码\"><a href=\"#2-3-生成密码，用于控制台登录的admin帐号，需要保存此密文密码\" class=\"headerlink\" title=\"2.3 生成密码，用于控制台登录的admin帐号，需要保存此密文密码\"></a>2.3 生成密码，用于控制台登录的admin帐号，需要保存此密文密码</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">slappasswd\n\t&#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过数据库修改admin用户的ldif文件<pre class=\"line-numbers language-ldif\" data-language=\"ldif\"><code class=\"language-ldif\">&#x2F;etc&#x2F;ldap&#x2F;slapd.d&#x2F;cn\\&#x3D;config&#x2F;olcDatabase\\&#x3D;\\&#123;1\\&#125;mdb.ldif\n\tolcDatabase: &#123;1&#125;mdb\n\tolcSuffix: dc&#x3D;example,dc&#x3D;top\n\tolcRootDN: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top\n\tolcRootPW: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>olcDatabase: 定义使用的后端数据存储格式,遵循默认</li>\n<li>olcSuffix: 设置 LDAP 服务的根</li>\n<li>olcRootDN: 设置管理员用户的 dn</li>\n<li>olcRootPW: 管理员用户的密码</li>\n<li>修改后重启服务<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo slaptest -u   # 检查配置文件\nsudo systemctl enable slapd  --now\n\nsudo slapcat        # 输出看到当前数据库内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"2-4-正确的修改olcRootPW-管理员用户的密码\"><a href=\"#2-4-正确的修改olcRootPW-管理员用户的密码\" class=\"headerlink\" title=\"2.4 正确的修改olcRootPW: 管理员用户的密码\"></a>2.4 正确的修改olcRootPW: 管理员用户的密码</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nchangetype: modify\nreplace: olcRootPW\nolcRootPW: example2020  # 保存在数据库文件中的时候将会被加密<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f passmodify.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">同时进入web ui，修改admin账户的密码，如果不修改两个密码都能管理域，二者修改一致之后，才是新的管理密码生效<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-5-简单结构展示\"><a href=\"#2-5-简单结构展示\" class=\"headerlink\" title=\"2.5 简单结构展示\"></a>2.5 简单结构展示</h3><p>略</p>\n<h3 id=\"2-6-创建base-dn\"><a href=\"#2-6-创建base-dn\" class=\"headerlink\" title=\"2.6 创建base dn\"></a>2.6 创建base dn</h3><h4 id=\"2-6-1-查看LDAP服务器的根目录信息\"><a href=\"#2-6-1-查看LDAP服务器的根目录信息\" class=\"headerlink\" title=\"2.6.1 查看LDAP服务器的根目录信息\"></a>2.6.1 查看LDAP服务器的根目录信息</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo ldapsearch -x -LLL -b &#39;&#39; -s base &#39;(objectclass&#x3D;*)&#39;\n\tdn:\n\tobjectClass: top\n\tobjectClass: OpenLDAProotDSE<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-6-2-基于-ldif-文件直接创建，不使用图形化交互。创建之后，对这个-base-dn-设置管理员的密码\"><a href=\"#2-6-2-基于-ldif-文件直接创建，不使用图形化交互。创建之后，对这个-base-dn-设置管理员的密码\" class=\"headerlink\" title=\"2.6.2 基于 ldif 文件直接创建，不使用图形化交互。创建之后，对这个 base dn 设置管理员的密码\"></a>2.6.2 基于 ldif 文件直接创建，不使用图形化交互。创建之后，对这个 base dn 设置管理员的密码</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">-\ndn: dc&#x3D;example,dc&#x3D;top\nchangetype: add\nobjectClass: top\nobjectClass: domain\n\n\n-\ndn: o&#x3D;example,dc&#x3D;example,dc&#x3D;top\nchangetype: add\nobjectClass: organization\no: example<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapmodify -x -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -w example@2020  -f organization.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-7-创建多个-DIT-base-dn-（可以考虑尝试后端用-mysql-做数据库）\"><a href=\"#2-7-创建多个-DIT-base-dn-（可以考虑尝试后端用-mysql-做数据库）\" class=\"headerlink\" title=\"2.7 创建多个 DIT + base dn （可以考虑尝试后端用 mysql 做数据库）\"></a>2.7 创建多个 DIT + base dn （可以考虑尝试后端用 <code>mysql</code> 做数据库）</h3><h4 id=\"2-7-1-为新的库，准备存储路径，并通过apparmor做权限限制\"><a href=\"#2-7-1-为新的库，准备存储路径，并通过apparmor做权限限制\" class=\"headerlink\" title=\"2.7.1 为新的库，准备存储路径，并通过apparmor做权限限制\"></a>2.7.1 为新的库，准备存储路径，并通过<code>apparmor</code>做权限限制</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir  &#x2F;var&#x2F;lib&#x2F;ldap2\nchown openldap:openldap  &#x2F;var&#x2F;lib&#x2F;ldap2\nvim &#x2F;etc&#x2F;apparmor.d&#x2F;usr.sbin.slapd\n\t\t# the databases and logs\n\t\t&#x2F;var&#x2F;lib&#x2F;ldap2&#x2F; r,\n\t\t&#x2F;var&#x2F;lib&#x2F;ldap2&#x2F;** rwk,\n\t\t\n\t\t# lock file\n\t\t&#x2F;var&#x2F;lib&#x2F;ldap2&#x2F;alock kw,\n\nsudo systemctl  reload  apparmor <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-7-2-准备-ldif-文件，创建新的-DIT（可以自定义路径）\"><a href=\"#2-7-2-准备-ldif-文件，创建新的-DIT（可以自定义路径）\" class=\"headerlink\" title=\"2.7.2 准备 ldif 文件，创建新的 DIT（可以自定义路径）\"></a>2.7.2 准备 ldif 文件，创建新的 DIT（可以自定义路径）</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: olcDatabase&#x3D;&#123;2&#125;mdb,cn&#x3D;config\nchangetype: add\nobjectClass: olcDatabaseConfig\nobjectClass: olcMdbConfig\nolcDbDirectory: &#x2F;var&#x2F;lib&#x2F;ldap2&#x2F;\nolcDatabase: &#123;2&#125;Mdb\nolcDbIndex: objectClass eq\nolcDbIndex: cn,uid eq\nolcDbIndex: uidNumber,gidNumber eq\nolcDbIndex: member,memberUid eq\nolcLastMod: TRUE\nolcMonitoring: TRUE\nolcDBNoSync: TRUE\nolcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by anonymous auth by * non\n e\nolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * read\nolcSuffix: dc&#x3D;example,dc&#x3D;tech\nolcRootDN: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;tech\nolcRootPW: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo  ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f domian2.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-7-3-新增并设置管理员\"><a href=\"#2-7-3-新增并设置管理员\" class=\"headerlink\" title=\"2.7.3 新增并设置管理员\"></a>2.7.3 新增并设置管理员</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">-\ndn: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;tech\nobjectClass: simpleSecurityObject\nobjectClass: organizationalRole\ncn: admin\nuserPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n# 以下是playbook中模板文件\n-\ndn: cn&#x3D;admin,&#123;&#123; item.base_dn &#125;&#125;  \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo ldapadd -x -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;tech&quot; -w example@2020 -f basedn2.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-7-4-多-DIT-跨域-ACL\"><a href=\"#2-7-4-多-DIT-跨域-ACL\" class=\"headerlink\" title=\"2.7.4 多 DIT 跨域 ACL\"></a>2.7.4 多 DIT 跨域 ACL</h4><ul>\n<li><p>查询服务器的域</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -x -H ldap:&#x2F;&#x2F;10.13.3.107 -b &quot;&quot; -s base namingContexts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>设置一个全权限的 acl ，跨域访问，相应的用户需已经提前创建</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">让这个dn 用户: cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech ;  可以阅读这个base dn : dc&#x3D;example,dc&#x3D;top 下的所有条目.\n对应关系：数据库----&#123;1&#125;mdb  存储的数据是来自 dn: dc&#x3D;example,dc&#x3D;top 。即，对谁的访问则将 acl 添加在谁的库下  \n\ndn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; by dn.base&#x3D;&quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; read<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapmodify   -Y   EXTERNAL   -H   ldapi:&#x2F;&#x2F;&#x2F;   -f  xxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"2-7-5-测试\"><a href=\"#2-7-5-测试\" class=\"headerlink\" title=\"2.7.5 测试\"></a>2.7.5 测试</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">root@example-sys-test-06:&#x2F;etc&#x2F;ldap&#x2F;example# ldapsearch -x -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -D &quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; -w example@2020\n\t\t# extended LDIF\n\t\t#\n\t\t# LDAPv3\n\t\t# base &lt;dc&#x3D;example,dc&#x3D;top&gt; with scope subtree\n\t\t# filter: (objectclass&#x3D;*)\n\t\t# requesting: ALL\n\t\t#\n\t\t\n\t\t# example.top\n\t\tdn: dc&#x3D;example,dc&#x3D;top\n\t\tobjectClass: top\n\t\tobjectClass: domain\n\t\tdc: example\n\t\t\n\t\t# admin, example.top\n\t\tdn: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top\n\t\tobjectClass: simpleSecurityObject\n\t\tobjectClass: organizationalRole\n\t\tcn: admin\n\t\t\n\t\t# search result\n\t\tsearch: 2\n\t\tresult: 0 Success\n\t\t\n\t\t# numResponses: 3\n\t\t# numEntries: 2\nroot@example-sys-test-06:&#x2F;etc&#x2F;ldap&#x2F;example# ldapsearch -x -b &quot;dc&#x3D;example,dc&#x3D;tech&quot; -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -w example@2020\n\t\t# extended LDIF\n\t\t#\n\t\t# LDAPv3\n\t\t# base &lt;dc&#x3D;example,dc&#x3D;tech&gt; with scope subtree\n\t\t# filter: (objectclass&#x3D;*)\n\t\t# requesting: ALL\n\t\t#\n\t\t\n\t\t# search result\n\t\tsearch: 2\n\t\tresult: 32 No such object\n\t\t\n\t\t# numResponses: 1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>测试的日志<pre class=\"line-numbers language-none\"><code class=\"language-none\">Sep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 fd&#x3D;12 ACCEPT from IP&#x3D;127.0.0.1:59834 (IP&#x3D;0.0.0.0:389)\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; method&#x3D;128\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; mech&#x3D;SIMPLE ssf&#x3D;0\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;2 text&#x3D;\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;2 UNBIND\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 fd&#x3D;12 closed\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 fd&#x3D;12 ACCEPT from IP&#x3D;127.0.0.1:34916 (IP&#x3D;0.0.0.0:389)\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;tech&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;32 nentries&#x3D;0 text&#x3D;\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;2 UNBIND\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 fd&#x3D;12 closed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"三、-web管理器配置\"><a href=\"#三、-web管理器配置\" class=\"headerlink\" title=\"三、 web管理器配置\"></a>三、 web管理器配置</h2><h3 id=\"3-1-安装-LAM-（用于管理的Web-UI）\"><a href=\"#3-1-安装-LAM-（用于管理的Web-UI）\" class=\"headerlink\" title=\"3.1 安装  LAM （用于管理的Web UI）\"></a>3.1 安装  LAM （用于管理的Web UI）</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">apt-get install ldap-account-manager<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>访问 <a href=\"http://ip/lam\">http://ip/lam</a> ，lam的所有配置都可以在web端配置，不需要去服务器上修改一行代码</p>\n<h4 id=\"3-1-1-LAM-configuration-helm-安装的主要修改内容\"><a href=\"#3-1-1-LAM-configuration-helm-安装的主要修改内容\" class=\"headerlink\" title=\"3.1.1 LAM configuration (helm 安装的主要修改内容)\"></a>3.1.1 LAM configuration (<a href=\"https://check-lc.github.io/ops_blog/2023/12/04/the-first-time-using-helm-charts/\">helm 安装的主要修改内容</a>)</h4><pre>\n主要内容：\n  LDAP_DOMAIN: example.net;ibexample.com\n  LDAP_BASE_DN: dc=example,dc=net;dc=ibexample,dc=com\n  LDAP_SERVER: ldaps://ldap01.example.net\n  LDAP_USER: cn=administrator,dc=example,dc=net\n  LAM_LANG: zh_CN\n  LAM_PASSWORD: lam\n</pre>\n\n<ul>\n<li><p>tree view编辑更高效</p>\n</li>\n<li><p>如果选择 docker 安装镜像：ghcr.io&#x2F;ldapaccountmanager&#x2F;lam:8.4@sha256:283726bd23510f1c3bfbdcbfe861e6599e070616543aed02e9756075c97a9938</p>\n</li>\n</ul>\n<h4 id=\"3-1-3-Nginx反向代理-LAM-Web-UI\"><a href=\"#3-1-3-Nginx反向代理-LAM-Web-UI\" class=\"headerlink\" title=\"3.1.3 Nginx反向代理 LAM Web UI\"></a>3.1.3 Nginx反向代理 LAM Web UI</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">upstream lam &#123;\n  server 10.13.3.108:8001;\n&#125;\n\nserver &#123;\n  listen 80;\n  server_name lam.example.net;\n  return 301 https:&#x2F;&#x2F;$server_name$request_uri;\n&#125;\n\nserver &#123;\n  server_name lam.example.net;\n  listen 443 ssl;\n  ssl_certificate webmin&#x2F;tls_ca.pem;\n  ssl_certificate_key webmin&#x2F;tls_key.pem;\n\n  location &#x2F; &#123;\n     proxy_pass http:&#x2F;&#x2F;lam&#x2F;;\n     proxy_set_header Host $host;\n     proxy_set_header X-Real-IP $remote_addr;\n     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n#     proxy_set_header X-Forwarded-Proto &quot;https&quot;;\n     proxy_read_timeout 1800s;\n     proxy_http_version 1.1;\n     proxy_set_header Upgrade $http_upgrade;\n     proxy_set_header Connection &quot;upgrade&quot;;\n    &#125;\n  &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-2-测试-phpldapadmin\"><a href=\"#3-2-测试-phpldapadmin\" class=\"headerlink\" title=\"3.2 测试 phpldapadmin\"></a>3.2 测试 phpldapadmin</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">Setting up php8.1 (8.1.2-1ubuntu2.14)                       # 版本信息，配置文件完整，存在证书认证并可以指定路径\nSetting up php (2:8.1+92ubuntu1) \nSetting up phpldapadmin (1.2.6.3-0.2)                                       <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"3-2-1-安装\"><a href=\"#3-2-1-安装\" class=\"headerlink\" title=\"3.2.1 安装\"></a>3.2.1 安装</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">apt-get install phpldapadmin -y\nnano &#x2F;etc&#x2F;phpldapadmin&#x2F;config.php\n\t$servers-&gt;setValue(&#39;server&#39;,&#39;name&#39;,&#39;My LDAP Server&#39;);                      # 辨识，区分的作用\n\t$servers-&gt;setValue(&#39;server&#39;,&#39;host&#39;,&#39;69.87.216.102&#39;);                              #  修改ip为服务器 ip\n\t$servers-&gt;;setValue(&#39;server&#39;,&#39;base&#39;,array(&#39;dc&#x3D;example,dc&#x3D;com&#39;));                    # 修改 array 内容为需求的根\n\t$servers-&gt;setValue(&#39;login&#39;,&#39;auth_type&#39;,&#39;session&#39;);                                              \n\t$servers-&gt;setValue(&#39;login&#39;,&#39;bind_id&#39;,&#39;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;com&#39;);           #   绑定登录帐号admin，相应修改 dn 号即可\n\t$servers-&gt;setValue(&#39;auto_number&#39;,&#39;min&#39;,array(&#39;uidNumber&#39;&#x3D;&gt;10000,&#39;gidNumber&#39;&#x3D;&gt;10000));   # 规定 uid，gid 数字表示的起始范围<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"3-2-2-为-phpLDAPadmin-配置-Apache\"><a href=\"#3-2-2-为-phpLDAPadmin-配置-Apache\" class=\"headerlink\" title=\"3.2.2 为 phpLDAPadmin 配置 Apache\"></a>3.2.2 为 phpLDAPadmin 配置 Apache</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">a2dissite 000-default.conf        # 禁用默认的 Apache 虚拟主机配置文件\nsystemctl restart apache2          <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"四、-主从架构-弃用，此配置需要在从服务器拉取-refresh\"><a href=\"#四、-主从架构-弃用，此配置需要在从服务器拉取-refresh\" class=\"headerlink\" title=\"四、 主从架构(弃用，此配置需要在从服务器拉取 refresh)\"></a>四、 主从架构(弃用，此配置需要在从服务器拉取 refresh)</h2><p><a href=\"https://darkdark.top/ch5-replication.html\">模式介绍</a></p>\n<h3 id=\"4-1-master-加载同步模块\"><a href=\"#4-1-master-加载同步模块\" class=\"headerlink\" title=\"4.1 master 加载同步模块\"></a>4.1 master 加载同步模块</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">cat &#x2F;etc&#x2F;ldap&#x2F;mod_syncprov.ldif\n\t\tdn: cn&#x3D;module,cn&#x3D;config\n\t\tobjectClass: olcModuleList\n\t\tcn: module\n\t\tolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldap\n\t\tolcModuleLoad: syncprov.la          # 此配置和上一句配置，实际是在请求这个路径的文件，&#x2F;usr&#x2F;lib&#x2F;ldap&#x2F;syncprov.la，不确定的可以用 find 查找\n\nldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f .&#x2F;mod_syncprov.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"4-2-同步设置\"><a href=\"#4-2-同步设置\" class=\"headerlink\" title=\"4.2 同步设置\"></a>4.2 同步设置</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">root@example-sys-test-06:&#x2F;etc&#x2F;ldap# cat syncprov.ldif \n\t\tdn: olcOverlay&#x3D;syncprov,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config       # 此处需要确认自己的数据库是什么样的，&#123;2&#125;hdb--旧版本默认 &#x2F; &#123;1&#125;mdb--新版本默认\n\t\tobjectClass: olcOverlayConfig\n\t\tobjectClass: olcSyncProvConfig\n\t\tolcOverlay: syncprov\n\t\tolcSpCheckpoint: 100 10\n\t\tolcSpSessionLog: 100\n\nldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f .&#x2F;syncprov.ldif                             # 修改并应用条目到 LDAP 服务  -Y EXTERNAL    将使用服务器配置的外部身份验证方法进行身份验证，而不是使用用户名和密码; -H 指定服务器连接; -f 指定文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"4-3-从服务器配置\"><a href=\"#4-3-从服务器配置\" class=\"headerlink\" title=\"4.3 从服务器配置\"></a>4.3 从服务器配置</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">root@example-sys-test-07:&#x2F;etc&#x2F;ldap# cat syncrepl.ldif\n\t\tdn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\n\t\tchangetype: modify\n\t\tadd: olcSyncRepl\n\t\tolcSyncRepl: rid&#x3D;002\n\t\t  provider&#x3D;ldap:&#x2F;&#x2F;10.13.3.106:389&#x2F;        # 此处开始与上一行有缩进\n\t\t  bindmethod&#x3D;simple\n\t\t  binddn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot;\n\t\t  credentials&#x3D;example@2020      \n\t\t  searchbase&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot;\n\t\t  scope&#x3D;sub\n\t\t  schemachecking&#x3D;on\n\t\t  type&#x3D;refreshAndPersist\n\t\t  retry&#x3D;&quot;5 5 300 +&quot;\n\t\t  attrs&#x3D;&quot;*,+&quot;\n\t\t  interval&#x3D;00:00:00:3\n\nldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f &#x2F;etc&#x2F;ldap&#x2F;syncrepl.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>运行中，修改主服务器内数据后，对从服务器u做刷新，可以看到是否同步</li>\n</ul>\n<p>参数说明：</p>\n<ul>\n<li>provider 为ldap master&#x2F;slave的地址 ;</li>\n<li>binddn：为域的基本信息，注这里一定要用管理员进行登录，否则同步不到用户的密码。</li>\n<li>credentials: ldap管理员的密码</li>\n<li>searchbase：选择要同步的独立域，根节点</li>\n<li>scope：设置所有的条目匹配</li>\n<li>schemachecking：设置同步更新时间检测</li>\n<li>type：同步模式为refreshAndPersist， refreshOnly 模式下后续操作由客户端轮询完成</li>\n<li>retry:同步更新重试次数和时间刚开始的5秒重试5次，以后每300秒重试一次</li>\n<li>attrs:复制全部属性</li>\n<li>interval 这里设置更新时间，这里为3秒一次，倒数第二个是分钟 以此类推。</li>\n</ul>\n<h2 id=\"四、-镜像复制（互为主从）\"><a href=\"#四、-镜像复制（互为主从）\" class=\"headerlink\" title=\"四、 镜像复制（互为主从）\"></a>四、 镜像复制（互为主从）</h2><p><a href=\"https://darkdark.top/ch5-replication.html\">模式介绍</a></p>\n<h3 id=\"4-1-为某域编辑-mirrorsync-ldif\"><a href=\"#4-1-为某域编辑-mirrorsync-ldif\" class=\"headerlink\" title=\"4.1 为某域编辑 mirrorsync.ldif\"></a>4.1 为某域编辑 mirrorsync.ldif</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;module,cn&#x3D;config         # 此段配置加载s ync 模块\nobjectClass: olcModuleList\ncn: module\nolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldap\nolcModuleLoad: syncprov.la     # 此配置和上一句，实际是在请求这个路径的文件，&#x2F;usr&#x2F;lib&#x2F;ldap&#x2F;syncprov.la，不确定的可 find 查找\n\n-\ndn: olcOverlay&#x3D;syncprov,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config        \n\t # 此处需确认自己的数据库，&#123;2&#125;hdb--为旧版本默认 &#x2F; &#123;1&#125;mdb--为新版本默认。路径 &#x2F;etc&#x2F;ldap&#x2F;slapd.d&#x2F;cn\\&#x3D;config&#x2F;olcDatabase\\&#x3D;\\&#123;1\\&#125;mdb.ldif\nobjectClass: olcOverlayConfig\nobjectClass: olcSyncProvConfig\nolcOverlay: syncprov\nolcSpSessionLog: 100\n\n-\ndn: cn&#x3D;config\nchangetype: modify\nreplace: olcServerID\nolcServerID: 0                                        # 用于标识本机的 server id\n\ndn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config      # 以下配置用于开启复制，指定主服务器\nchangetype: modify\nadd: olcSyncRepl\nolcSyncRepl: rid&#x3D;000                             # 标识唯一的 replica id\n  provider&#x3D;ldaps:&#x2F;&#x2F;ldap01.example.top       # 看上述记录介绍参数\n  bindmethod&#x3D;simple\n  binddn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot;\n  credentials&#x3D;example@2020\n  searchbase&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot;\n  tls_reqcert&#x3D;allow\n  scope&#x3D;sub\n  schemachecking&#x3D;on\n  type&#x3D;refreshAndPersist\n  retry&#x3D;&quot;30 5 300 3&quot;\n  interval&#x3D;00:00:05:00\n-\nadd: olcMirrorMode                        # 开启 mirror mode\nolcMirrorMode: TRUE\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-2-ldap01-example-top下编辑-mirrorsync-ldif\"><a href=\"#4-2-ldap01-example-top下编辑-mirrorsync-ldif\" class=\"headerlink\" title=\"4.2 ldap01.example.top下编辑 mirrorsync.ldif\"></a>4.2 ldap01.example.top下编辑 mirrorsync.ldif</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;module,cn&#x3D;config\nobjectClass: olcModuleList\ncn: module\nolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldap\nolcModuleLoad: syncprov.la\n\n-\ndn: olcOverlay&#x3D;syncprov,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nobjectClass: olcOverlayConfig\nobjectClass: olcSyncProvConfig\nolcOverlay: syncprov\nolcSpSessionLog: 100\n\n-\ndn: cn&#x3D;config\nchangetype: modify\nreplace: olcServerID\nolcServerID: 1\n\ndn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcSyncRepl\nolcSyncRepl: rid&#x3D;001\n  provider&#x3D;ldaps:&#x2F;&#x2F;ldap.example.top\n  bindmethod&#x3D;simple\n  binddn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot;\n  credentials&#x3D;example@2020\n  searchbase&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot;\n  tls_reqcert&#x3D;allow\n  scope&#x3D;sub\n  schemachecking&#x3D;on\n  type&#x3D;refreshAndPersist\n  retry&#x3D;&quot;30 5 300 3&quot;\n  interval&#x3D;00:00:05:00\n-\nadd: olcMirrorMode\nolcMirrorMode: TRUE\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"4-2-1-加载配置\"><a href=\"#4-2-1-加载配置\" class=\"headerlink\" title=\"4.2.1 加载配置\"></a>4.2.1 加载配置</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f mirrorsync.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"五、-TLS加密（自签名-权威证书）\"><a href=\"#五、-TLS加密（自签名-权威证书）\" class=\"headerlink\" title=\"五、 TLS加密（自签名&#x2F;权威证书）\"></a>五、 TLS加密（自签名&#x2F;权威证书）</h2><p>（自签名证书加密连接 nextcloud 失败，使用不便，采用 权威证书（多域合一）或stunnel）</p>\n<h3 id=\"5-1-CA中心创建证书\"><a href=\"#5-1-CA中心创建证书\" class=\"headerlink\" title=\"5.1 CA中心创建证书\"></a>5.1 CA中心创建证书</h3><pre><code>此时使用LDAP 主服务器 作为 CA 中心，自签名\n</code></pre>\n<ul>\n<li><p>安装 gnutls-bin 和 ssl-cert 包</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt install gnutls-bin ssl-cert<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>为证书授权中心创建私钥</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo certtool --generate-privkey --bits 4096 --outfile &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>创建模板文件来定义CA</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ssl&#x2F;ca.info\n\t cn &#x3D; example (example company)  \n\t ca\n\t cert_signing_key\n\t expiration_days &#x3D; 3650<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>创建自签名 CA (根)证书</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo certtool --generate-self-signed \\\n--load-privkey &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem \\\n--template &#x2F;etc&#x2F;ssl&#x2F;ca.info \\\n--outfile &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>Note：<br>  <code>--outfile</code>路径是正确的，将CA证书写入<code>/usr/local/share/ca-certificates</code>。<br>  <strong>update-ca-certificates</strong> 将从这里获取受信任的本地CA。如果要从<code>/usr/share/ca-certificates</code>获取CA，需要调用<code>dpkg-reconfigure ca-certificates</code></p>\n</li>\n<li><p>将新的 CA 根证书添加到受信任 CA 列表</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo update-ca-certificates     # 会创建一个&#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem符号链接，指向&#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates中的真实文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"5-2-创建-LDAP-服务的服务器私钥与证书\"><a href=\"#5-2-创建-LDAP-服务的服务器私钥与证书\" class=\"headerlink\" title=\"5.2 创建 LDAP 服务的服务器私钥与证书\"></a>5.2 创建 LDAP 服务的服务器私钥与证书</h3><ul>\n<li><p>创建私钥</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo certtool --generate-privkey \\\n--bits 2048 \\\n--outfile &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li><p>服务器信息文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ssl&#x2F;ldap01.info\n\torganization &#x3D; example\n\tcn &#x3D; ldap01.example.top                     # 服务器证书的DN必须使用CN属性来命名服务器，并且CN必须携带服务器的完全限定域名，dns 需要有 A 记录解析\n\ttls_www_server\n\tencryption_key\n\tsigning_key\n\texpiration_days &#x3D; 365\n证书有效期为1年，仅对_&#96;ldap01&#96;_主机名有效<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>创建LDAP服务器的证书</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo certtool --generate-certificate \\\n--load-privkey &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem \\\n--load-ca-certificate &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem \\\n--load-ca-privkey &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem \\\n--template &#x2F;etc&#x2F;ssl&#x2F;ldap01.info \\\n--outfile &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_cert.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>调整权限</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo chgrp openldap &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem\nsudo chmod 0640 &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>ca根证书加入到受信列表</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo cp   cacertificatefile  &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crt\nsudo update-ca-certificates<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>对LDAP服务配置证书</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;config\nadd: olcTLSCACertificateFile\nolcTLSCACertificateFile: &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem\n-\nadd: olcTLSCertificateFile\nolcTLSCertificateFile: &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_cert.pem\n-\nadd: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>配置slapd-config数据库：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f certinfo.ldif <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>报错调整，更改<code>certinfo.ldif</code>，将<code>add</code>改成了<code>replace</code>，可以解决以下问题。修改后再次执行<code>ldapmodify</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f certinfo.ldif \n\tSASL&#x2F;EXTERNAL authentication started SASL username: gidNumber&#x3D;0+uidNumber&#x3D;0,cn&#x3D;peercred,cn&#x3D;external,cn&#x3D;auth \n\tSASL SSF: 0 \n\tmodifying entry &quot;cn&#x3D;config&quot; ldap_modify: Inappropriate matching (18) \n\tadditional info: modify&#x2F;add: olcTLSCACertificateFile: no equality matching rule<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>ldap-client增添配置文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;ldap.conf\n\t# LDAP Defaults\n\t# See ldap.conf(5) for details\n\t# This file should be world readable but not world writable.\t\n\tBASE       dc&#x3D;example,dc&#x3D;top                                                      # LDAP服务的基础DN\n\tURI ldap:&#x2F;&#x2F;localhost:389 ldaps:&#x2F;&#x2F;localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径\n\tTLS_REQCERT demand                                                        # &quot;demand&quot;，表示需要验证服务器的证书<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>需要访问 LDAPS（LDAP over SSL），需要编辑配置，并重启 slapd</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;default&#x2F;slapd\n\tSLAPD_SERVICES&#x3D;&quot;ldap:&#x2F;&#x2F;&#x2F; ldapi:&#x2F;&#x2F;&#x2F; ldaps:&#x2F;&#x2F;&#x2F;&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>测试启动 TLS</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapwhoami -x -ZZ -H ldap:&#x2F;&#x2F;ldap01.example.com\nanonymous<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>测试连接</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapwhoami -x -H ldaps:&#x2F;&#x2F;ldap01.example.com\nanonymous<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"5-3-LDAP-从服务器的-TLS-在主服务器创建后，拷贝证书到从服务器\"><a href=\"#5-3-LDAP-从服务器的-TLS-在主服务器创建后，拷贝证书到从服务器\" class=\"headerlink\" title=\"5.3 LDAP 从服务器的 TLS, 在主服务器创建后，拷贝证书到从服务器\"></a>5.3 LDAP 从服务器的 TLS, 在主服务器创建后，拷贝证书到从服务器</h3><ul>\n<li>指定目录保存<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir ldap02-ssl\ncd ldap02-ssl\ncerttool --generate-privkey \\\n--bits 2048 \\\n--outfile ldap02_slapd_key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>编辑信息文件ldap02.info<pre class=\"line-numbers language-none\"><code class=\"language-none\">organization &#x3D; example\ncn &#x3D; ldap02.example.top                      \ntls_www_server\nencryption_key\nsigning_key\nexpiration_days &#x3D; 365<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>创建证书<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo certtool --generate-certificate \\\n--load-privkey ldap02_slapd_key.pem \\\n--load-ca-certificate &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem \\\n--load-ca-privkey &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem \\\n--template ldap02.info \\\n--outfile ldap02_slapd_cert.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cp &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem .\nscp -r ldap02-ssl user@ldap02_ip:<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>从服务器中安装证书<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo cp ldap02_slapd_cert.pem ldap02_slapd_key.pem &#x2F;etc&#x2F;ldap\nsudo chgrp openldap &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_key.pem\nsudo chmod 0640 &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_key.pem\nsudo cp mycacert.pem &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crt\nsudo update-ca-certificates<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>对LDAP服务配置证书 <code>./certinfo.ldif </code><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;config\nadd: olcTLSCACertificateFile\nolcTLSCACertificateFile: &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem\n-\nadd: olcTLSCertificateFile\nolcTLSCertificateFile: &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_cert.pem\n-\nadd: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>配置slapd-config数据库：<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f certinfo.ldif <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>增添配置文件<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;ldap.conf\n\tBASE       dc&#x3D;example,dc&#x3D;top                                                      # LDAP服务的基础DN\n\tURI ldap:&#x2F;&#x2F;localhost:389 ldaps:&#x2F;&#x2F;localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径\n\tTLS_REQCERT demand                                                        # &quot;demand&quot;，表示需要验证服务器的证书<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>需要访问 LDAPS（LDAP over SSL），需要编辑配置，并重启 slapd<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;default&#x2F;slapd\n\tSLAPD_SERVICES&#x3D;&quot;ldap:&#x2F;&#x2F;&#x2F; ldapi:&#x2F;&#x2F;&#x2F; ldaps:&#x2F;&#x2F;&#x2F;&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>测试启动 TLS<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapwhoami -x -ZZ -H ldap:&#x2F;&#x2F;ldap02.example.top\nanonymous<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>测试连接<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapwhoami -x -H ldaps:&#x2F;&#x2F;ldap02.example.top\nanonymous<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"5-4-使用合法证书\"><a href=\"#5-4-使用合法证书\" class=\"headerlink\" title=\"5.4 使用合法证书\"></a>5.4 使用合法证书</h3><ul>\n<li><p>将新的 CA 根证书添加到受信任 CA 列表（客户端操作，权威证书按理不需要拷贝，未测试）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo   cp   _.example.top-chain.pem   &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crt\nsudo update-ca-certificates<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>准备服务器证书和私钥（服务端）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"> ls &#x2F;etc&#x2F;ldap\n\tcertinfo.ldif   _.example.top-crt.pem   _.example.top-key.pem\nsudo chgrp openldap &#x2F;etc&#x2F;ldap&#x2F;_.example.top-key.pem\nsudo chmod 0640 &#x2F;etc&#x2F;ldap&#x2F;_.example.top-key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>certinfo.ldif</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;config\nchangetype: modify\nreplace: olcTLSCACertificateFile\nolcTLSCACertificateFile: &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem\n-\nreplace: olcTLSCertificateFile\nolcTLSCertificateFile: &#x2F;etc&#x2F;ldap&#x2F;_.example.top-crt.pem\n-\nreplace: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: &#x2F;etc&#x2F;ldap&#x2F;_.example.top-key.pem\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo ldapadd  -Y   EXTERNAL  -H  ldapi:&#x2F;&#x2F;&#x2F;   -f    certinfo.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<ul>\n<li>增添配置文件，这是客户端需要连接 ldap 服务器使用的配置。可以忽略。<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;ldap.conf\n\tBASE       dc&#x3D;example,dc&#x3D;top                                                      # LDAP服务的基础DN\n\t[[URI]] ldap:&#x2F;&#x2F;localhost:389 ldaps:&#x2F;&#x2F;localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径，必需\n\tTLS_REQCERT allow                                                      # &quot;demand&quot;，表示需要验证服务器的证书<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>启用 ldaps，重启 slapd<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;default&#x2F;slapd\n\tSLAPD_SERVICES&#x3D;&quot;ldap:&#x2F;&#x2F;&#x2F; ldapi:&#x2F;&#x2F;&#x2F; ldaps:&#x2F;&#x2F;&#x2F;&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"5-5-使用-nextcloud-测试加密连接\"><a href=\"#5-5-使用-nextcloud-测试加密连接\" class=\"headerlink\" title=\"5.5 使用 nextcloud 测试加密连接\"></a>5.5 使用 nextcloud 测试加密连接</h3><ul>\n<li><p>docker 安装 nexcloud，登录 UI ，右上角点击账户，选择应用</p>\n</li>\n<li><p>应用捆绑包，启用 LDAP user and group backend</p>\n</li>\n<li><p>设置连接</p>\n</li>\n<li><p>ldaps连接(严格一致才是tls加密，nextcloud应该只信任权威证书)</p>\n</li>\n<li><p>明文传输</p>\n</li>\n</ul>\n<h3 id=\"5-6-stunnel-加密传输两个应用的数据-例：phpldapadmin\"><a href=\"#5-6-stunnel-加密传输两个应用的数据-例：phpldapadmin\" class=\"headerlink\" title=\"5.6 stunnel 加密传输两个应用的数据(例：phpldapadmin)\"></a>5.6 stunnel 加密传输两个应用的数据(例：phpldapadmin)</h3><p>链路： ldap user ui  —- stunnel client  accept  —-  stunnel client connect  —- stunnel server accept  —- stunnel server connect —-ldap server port</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">apt install -y stunnel4\nvim &#x2F;etc&#x2F;default&#x2F;stunnel4\n\tENABLED&#x3D;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># stunnel 服务端\n\tcert &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem\n\tkey &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel-key.pem\n\tverify &#x3D; 3\n\tclient &#x3D; no\n\tdebug &#x3D; 6\n\tpid &#x3D; &#x2F;var&#x2F;run&#x2F;stunnel4&#x2F;stunnel4.pid\n\t\n\t[ldap]\n\taccept &#x3D; 10.13.3.106:6360                # 监听 stunnel 服务的流量，客户端（是指stunnel 客户端）将连接此目标并发送流量到这里\n\tconnect &#x3D; 10.13.3.106:389                # 转发到 stunnel 加密连接的服务的端口\n\tCAfile &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem\n\n# stunnel 客户端\n\tcert &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem\n\tkey &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel-key.pem\n\tverify &#x3D; 3\n\tclient &#x3D; yes\n\tdebug &#x3D; 6\n\tsetuid &#x3D; stunnel4\n\tsetgid &#x3D; stunnel4\n\tpid &#x3D; &#x2F;var&#x2F;run&#x2F;stunnel4&#x2F;stunnel4.pid\n\t\n\t[ldap]\n\taccept &#x3D; 10.13.3.107:389                # 监听 stunnel 服务的流量，客户端（是指ldap的客户端）将连接此目标并发送流量到这里\n\tconnect &#x3D; 10.13.3.106:6360              # 加密连接并转发到 stunnel 的服务端\n\tCAfile &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;phpldapadmin&#x2F;config.php\n\t$servers-&gt;setValue(&#39;server&#39;,&#39;host&#39;,&#39;69.87.216.102&#39;);  # 指向 stunnel 客户端，和他本地监听的端口\n\t$servers-&gt;setValue(&#39;server&#39;,&#39;port&#39;,389);\t<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"六、-其他模块\"><a href=\"#六、-其他模块\" class=\"headerlink\" title=\"六、 其他模块\"></a>六、 其他模块</h2><h3 id=\"6-1-日志模块\"><a href=\"#6-1-日志模块\" class=\"headerlink\" title=\"6.1 日志模块\"></a>6.1 日志模块</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;loglevel.ldif\n\tdn: cn&#x3D;config\n\tchangetype: modify\n\treplace: olcLogLevel\n\tolcLogLevel: stats\n\nldapmodify  -Y  EXTERNAL  -H  ldapi:&#x2F;&#x2F;&#x2F;  -f  loglevel.ldif               # 日志在&#x2F;var&#x2F;log&#x2F;syslog | grep slapd , 比默认的级别详细<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"6-2-memberOf-开启\"><a href=\"#6-2-memberOf-开启\" class=\"headerlink\" title=\"6.2 memberOf 开启\"></a>6.2 memberOf 开启</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;refint.ldif\n\t# enable_refint.ldif\n\tdn: cn&#x3D;module&#123;0&#125;,cn&#x3D;config\n\tchangetype: modify\n\tadd: olcModuleLoad\n\tolcModuleLoad: refint.la\n\t-\n\tdn: olcOverlay&#x3D;refint,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\n\tchangetype: add\n\tobjectClass: olcOverlayConfig\n\tobjectClass: olcRefintConfig\n\tolcOverlay: refint\n\nldapadd -Q -Y EXTERNAL -H ldapi:&#x2F;&#x2F; -f refint.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;memberof.ldif\n\tdn: cn&#x3D;module,cn&#x3D;config\n\tchangetype: add\n\tcn: module\n\tobjectClass: olcModuleList\n\tolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldap\n\t\n\tdn: cn&#x3D;module&#123;0&#125;,cn&#x3D;config\n\tchangetype: modify\n\tadd: olcModuleLoad\n\tolcModuleLoad: memberof.la\n\t\n\tdn: olcOverlay&#x3D;memberof,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\n\tchangetype: add\n\tobjectClass: olcConfig\n\tobjectClass: olcMemberOf\n\tobjectClass: olcOverlayConfig\n\tobjectClass: top\n\tolcOverlay: memberof\n\tolcMemberOfDangling: ignore\n\tolcMemberOfRefInt: TRUE\n\tolcMemberOfGroupOC: groupOfNames\n\tolcMemberOfMemberAD: member\n\tolcMemberOfMemberOfAD: memberOf\n\nldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f memberof.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>为条目添加此属性：LDIF文件中先创建用户的dn，然后创建目标组的dn，在创建组的时候将关联的用户写在member属性中</li>\n</ul>\n<h3 id=\"6-3-Self-Service-Password-自助密码管理\"><a href=\"#6-3-Self-Service-Password-自助密码管理\" class=\"headerlink\" title=\"6.3 Self Service Password 自助密码管理\"></a>6.3 Self Service Password 自助密码管理</h3><ul>\n<li>容器部署，解决 php 依赖准备繁琐</li>\n<li>镜像 ltbproject&#x2F;self-service-password:1.5.3</li>\n<li>为 admin 用户设置修改密码的权限<pre class=\"line-numbers language-none\"><code class=\"language-none\">下列权限可以使得 &quot;admin,example,net&quot; 对这个域 &quot;dc&#x3D;example,dc&#x3D;tech&quot; 做用户添加、属性修改\nolcAccess: &#123;0&#125;to attrs&#x3D;userPassword,shadowLastChange by dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write by anonymous auth by self write by * none\nolcAccess: &#123;1&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;tech&quot; by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>需要对企业邮箱帐号开启设置-帐号与安全-客户端设置-客户端授权密码</li>\n<li>ssp.conf.php  成功配置版本，并映射到容器： &#x2F;home&#x2F;example&#x2F;sspasswd&#x2F;conf.php:&#x2F;var&#x2F;www&#x2F;conf&#x2F;config.inc.local.php<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$debug &#x3D; false;\n$keyphrase &#x3D; &quot;example&quot;;\n$use_sms &#x3D; false;\n$use_questions &#x3D; false;\n$lang &#x3D; &quot;cn,zh-CN&quot;;\n$use_change &#x3D; true;\n#$reset_url &#x3D; $_SERVER[&#39;HTTP_X_FORWARDED_PROTO&#39;] . &quot;:&#x2F;&#x2F;&quot; . $_SERVER[&#39;HTTP_X_FORWARDED_HOST&#39;] . $_SERVER[&#39;SCRIPT_NAME&#39;];\n$reset_url &#x3D; &quot;https:&#x2F;&#x2F;ssp.example.net&quot; . $_SERVER[&#39;HTTP_X_FORWARDED_HOST&#39;] . $_SERVER[&#39;SCRIPT_NAME&#39;];\n$show_menu &#x3D; false;\n$logo &#x3D; &quot;images&#x2F;logo.png&quot;;                # 这两项在配置前，需要确保图片映射路径在容器内部的 &#x2F;var&#x2F;www&#x2F;html&#x2F;images 下\n$background_image &#x3D; &quot;images&#x2F;back.png&quot;;\n$default_action &#x3D; &quot;sendtoken&quot;;        # 默认展示在首页的修改密码的方式\n$show_menu &#x3D; false;              # 关闭顶部的修改方式选择菜单\n\n# LDAP\n\n$ldap_url &#x3D; &quot;ldap:&#x2F;&#x2F;10.13.3.107&#x2F;&quot;;\n$ldap_starttls &#x3D; false;\n$ldap_binddn &#x3D; &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot;;\n$ldap_bindpw &#x3D; &#39;example@2020&#39;;\n#$ldap_bindpw &#x3D; &quot;&#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi&quot;;\n$ldap_base &#x3D; &quot;dc&#x3D;example,dc&#x3D;net&quot;;\n#$ldap_base &#x3D; &quot;dc&#x3D;example,dc&#x3D;tech&quot;;    # 在这里同时书写两个，只会生效后一个域, 使用两个实例连接 ldap 服务\n$ldap_fullname_attribute &#x3D; &quot;cn&quot;;\n$ldap_filter &#x3D; &quot;(&amp;(objectClass&#x3D;inetOrgPerson)($ldap_fullname_attribute&#x3D;&#123;login&#125;))&quot;;\n$ldap_use_exop_passwd &#x3D; false;\n$ldap_use_ppolicy_control &#x3D; false;\n$TLS_REQCERT &#x3D; &quot;allow&quot;;\n\n# email\n$mail_attributes &#x3D; array(&quot;mail&quot;, &quot;gosaMailAlternateAddress&quot;, &quot;proxyAddresses&quot;);\n$mail_address_use_ldap &#x3D; true;\n$mail_from &#x3D; &quot;user5@example.net&quot;;\n$mail_from_name &#x3D; &quot;密码自主修改服务&quot;;\n$mail_signature &#x3D; &quot;如有疑问,请联系运维同事,英博智云.&quot;;\n$notify_on_change &#x3D; false;\n$mail_protocol &#x3D; &#39;smtp&#39;;\n$mail_smtp_host &#x3D; &#39;smtphz.qiye.163.com&#39;;\n$mail_smtp_auth &#x3D; true;\n$mail_smtp_user &#x3D; &quot;user5@example.net&quot;;\n$mail_smtp_pass &#x3D; &#39;TdhYDdgvN7Hpky5a&#39;;\n$mail_smtp_port &#x3D; 465;\n$mail_smtp_timeout &#x3D; 30;\n$mail_smtp_keepalive &#x3D; false;\n$mail_smtp_secure &#x3D; &#39;ssl&#39;;\n$mail_smtp_autotls &#x3D; false;\n$mail_smtp_options &#x3D; array();\n$mail_contenttype &#x3D; &#39;text&#x2F;plain&#39;;\n$mail_wordwrap &#x3D; 0;\n$mail_charset &#x3D; &#39;utf-8&#39;;\n$mail_priority &#x3D; 3;\n\n# password policy\n$hash &#x3D; &quot;SSHA&quot;; # 修改的用户密码传递过程中会采取这里指定的加密\n$pwd_min_length &#x3D; 8;\n$pwd_max_length &#x3D; 20;\n$pwd_min_lower &#x3D; 1;\n$pwd_min_upper &#x3D; 1;\n$pwd_min_digit &#x3D; 1;\n$pwd_min_special &#x3D; 1;\n$pwd_special_chars &#x3D; &quot;^a-zA-Z0-9&quot;;\n$pwd_complexity &#x3D; 4;\n$pwd_no_reuse &#x3D; true;\n$pwd_forbidden_words &#x3D; array(&quot;example&quot;, &quot;example&quot;, &quot;example&quot;, &quot;password&quot;);\n$pwd_show_policy_pos &#x3D; &quot;above&quot;;\n$pwd_show_policy &#x3D; &quot;onerror&quot;;\n?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker run -p 8000:80 \\\n&gt; --restart&#x3D;always \\\n&gt; --name sspass \\\n&gt; -v &#x2F;home&#x2F;example&#x2F;sspasswd&#x2F;conf.php:&#x2F;var&#x2F;www&#x2F;conf&#x2F;config.inc.local.php \\\n&gt; -itd docker.io&#x2F;ltbproject&#x2F;self-service-password<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6-3-1-不能进入修改链接-Token-is-not-valid\"><a href=\"#6-3-1-不能进入修改链接-Token-is-not-valid\" class=\"headerlink\" title=\"6.3.1 不能进入修改链接 Token is not valid\"></a>6.3.1 不能进入修改链接 Token is not valid</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">注释了这两项\n#$use_tokens &#x3D; true;\n#$crypt_tokens &#x3D; true;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6-3-2-反向代理-Self-Service-Password\"><a href=\"#6-3-2-反向代理-Self-Service-Password\" class=\"headerlink\" title=\"6.3.2 反向代理 Self Service Password\"></a>6.3.2 反向代理 Self Service Password</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">upstream ssp &#123;\n  server 10.13.3.108:8000;\n&#125;\n\nserver &#123;\n    listen 80;\n    server_name ssp.example.net;\n    return 301 https:&#x2F;&#x2F;$server_name$request_uri;\n&#125;\nserver &#123;\n    listen 443 ssl ;\n    server_name ssp.example.net;\n    ssl_certificate webmin&#x2F;tls_ca.pem;\n    ssl_certificate_key webmin&#x2F;tls_key.pem;\n\n    location &#x2F; &#123;\n      proxy_pass http:&#x2F;&#x2F;ssp;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto &quot;https&quot;;\n      proxy_read_timeout 1800s;\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection &quot;upgrade&quot;;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"6-4-LDAP-对目录信息的数据做备份还原和迁移\"><a href=\"#6-4-LDAP-对目录信息的数据做备份还原和迁移\" class=\"headerlink\" title=\"6.4 LDAP 对目录信息的数据做备份还原和迁移\"></a>6.4 LDAP 对目录信息的数据做备份还原和迁移</h3><h4 id=\"6-4-1-备份\"><a href=\"#6-4-1-备份\" class=\"headerlink\" title=\"6.4.1 备份\"></a>6.4.1 备份</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo slapcat -n 3 -l .&#x2F;back3.ldif           # -n 指定数据库编号，数字对应各个dit的数据库编号( 配置数据库----olcDatabase&#x3D;&#123;0&#125;config.ldif; 目录信息数据库----olcDatabase&#x3D;&#123;1&#125;mdb.ldif )<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"6-4-2-恢复\"><a href=\"#6-4-2-恢复\" class=\"headerlink\" title=\"6.4.2 恢复\"></a>6.4.2 恢复</h4><p>原服务器上恢复，服务需要暂停</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo systemctl stop slapd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>配置目录一般位于 <code>/etc/openldap/slapd.d</code>，将原有配置删除，然后使用 <code>slapadd</code> 导入新的配置</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ rm -rf &#x2F;etc&#x2F;ldap&#x2F;slapd.d&#x2F;*\n$ slapadd  -n  0  -F  &#x2F;etc&#x2F;ldap&#x2F;slapd.d  -l  .&#x2F;config.2021-09-18.ldif\n$ chown -R openldap:openldap &#x2F;etc&#x2F;ldap&#x2F;slapd.d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>数据目录一般位于 <code>/var/lib/ldap-*</code>，模拟时，将原有数据删除，然后使用 <code>slapadd</code> 导入新的数据：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ rm  -rf  &#x2F;var&#x2F;lib&#x2F;ldap-example&#x2F;*         # 定制了不同的$default_action &#x3D; &quot;sendtoken&quot;;\n$show_menu &#x3D; false;dit有不同的目录分别存储不同domain的内容，注意，导入前目录必需首先存在，且权属 openldap:openldap。\n$ slapadd -n 1 -F &#x2F;etc&#x2F;openldap&#x2F;slapd.d -l .&#x2F;data.2021-09-18.ldif\n$ chown -R openldap:openldap  &#x2F;var&#x2F;lib&#x2F;ldap-example\n$ systemctl start slapd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"6-4-3-openldap的迁移\"><a href=\"#6-4-3-openldap的迁移\" class=\"headerlink\" title=\"6.4.3 openldap的迁移\"></a>6.4.3 openldap的迁移</h4><p>playbook 新建的服务器，执行恢复</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">slapadd -n 1 -F &#x2F;etc&#x2F;openldap&#x2F;slapd.d -l .&#x2F;data.2021-09-18.ldif\n\n[[如果导入失败，或者数据已存在，删除rm]] -rf &#x2F;var&#x2F;lib&#x2F;ldap&#x2F;*  重新导入<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"七、-命令资料\"><a href=\"#七、-命令资料\" class=\"headerlink\" title=\"七、 命令资料\"></a>七、 命令资料</h2><blockquote>\n<p><a href=\"https://blog.csdn.net/jenyzhang/article/details/56487627\">来自此处</a><br>ldap<br>    |-slapd             目录服务的主要程序<br>    |-slurpd           目录服务进行复制的程序<br>    |-slapadd           向目录中添加数据<br>    |-slapcat           把目录中的条目导出成ldif文件<br>    |-slapindex         重建目录的索引<br>    |-ldapcompare       对目录的条目的属性进行比较<br>    |-ldapadd           向目录服务中添加条目<br>    |-ldapdelete        删除目录中的条目<br>    |-ldapmodify        更新目录中条目的值<br>    |-ldapmodrdn        更改条目的DN<br>    |-ldappasswd        更改条目的密码<br>    |-ldapsearch        对目录进行查询</p>\n</blockquote>\n<blockquote>\n<p>ldapadd<br>      -x   进行简单认证<br>      -D   用来绑定服务器的DN<br>      -h   目录服务的地址<br>      -w   绑定DN的密码<br>      -f   使用ldif文件进行条目添加的文件  \n      </p>\n</blockquote>\n<ul>\n<li>例子<br>       ldapadd -x -D “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” -w secret -f &#x2F;root&#x2F;test.ldif<br>       ldapadd -x -D “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” -w secret (这样写就是在命令行添加条目)</li>\n</ul>\n<p>       </p>\n<blockquote>\n<p>ldapsearch<br>      -x   进行简单认证<br>      -D   用来绑定服务器的DN<br>      -w   绑定DN的密码<br>      -b   指定要查询的根节点<br>      -H   制定要查询的服务器<br>      -s   指定搜索范围的类型\n     </p>\n</blockquote>\n<ul>\n<li>例子<br>   ldapsearch -x -D “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” -w secret -b “dc&#x3D;starxing,dc&#x3D;com”<br>       使用简单认证，用 “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” 进行绑定，<br>       要查询的根是 “dc&#x3D;starxing,dc&#x3D;com”。这样会把绑定的用户能访问”dc&#x3D;starxing,dc&#x3D;com”下的所有数据显示出来。<br> ldapsearch -x -W -D “cn&#x3D;administrator,cn&#x3D;users,dc&#x3D;osdn,dc&#x3D;zzti,dc&#x3D;edu,dc&#x3D;cn” -b “cn&#x3D;administrator,cn&#x3D;users,dc&#x3D;osdn,dc&#x3D;zzti,dc&#x3D;edu,dc&#x3D;cn” -h troy.osdn.zzti.edu.cn<br>   ldapsearch -b “dc&#x3D;canon-is,dc&#x3D;jp” -H ldaps:&#x2F;&#x2F;192.168.0.92:636<br> (需要修改openldap客户端的配置文件ldap.conf,参考：<a href=\"http://ms.ntcb.edu.tw/~steven/l-penguin.s/article/ldap-5.htm\">http://ms.ntcb.edu.tw/~steven/l-penguin.s/article/ldap-5.htm</a>)</li>\n</ul>\n<blockquote>\n<p>ldapdelete <br>      ldapdelete -x -D “cn&#x3D;Manager,dc&#x3D;test,dc&#x3D;com” -w secret “uid&#x3D;test1,ou&#x3D;People,dc&#x3D;test,dc&#x3D;com”<br>      ldapdelete -x -D ‘cn&#x3D;root,dc&#x3D;it,dc&#x3D;com’ -w secert ‘uid&#x3D;zyx,dc&#x3D;it,dc&#x3D;com’<br>      这样就可以删除’uid&#x3D;zyx,dc&#x3D;it,dc&#x3D;com’记录了，应该注意一点，其下有子条目的不能删除  </p>\n</blockquote>\n<ul>\n<li><p>例子1  递归删除所有：<br>ldapdelete -x -D ‘cn&#x3D;administrator,dc&#x3D;example,dc&#x3D;net’ -w example@2020 -r “ou&#x3D;example,dc&#x3D;example,dc&#x3D;net”</p>\n</li>\n<li><p>例子2  删除一个acl策略。acl-dele.ldif<br> dn: olcDatabase&#x3D;{3}mdb,cn&#x3D;config<br> delete: olcAccess<br> olcAccess: {2}<br> olcAccess: {3}<br> olcAccess: {4}<br> ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f acl-dele.ldif</p>\n</li>\n</ul>\n<blockquote>\n<p>ldappasswd<br>    -x   进行简单认证<br>    -D   用来绑定服务器的DN<br>    -w   绑定DN的密码<br>    -S   提示的输入密码<br>    -s pass 把密码设置为pass<br>    -a pass 设置old passwd为pass<br>    -A   提示的设置old passwd<br>    -H   是指要绑定的服务器<br>    -I   使用sasl会话方式  \n    </p>\n</blockquote>\n<ul>\n<li>例子<br>    ldappasswd -x -D ‘cm&#x3D;root,dc&#x3D;it,dc&#x3D;com’ -w secret ‘uid&#x3D;zyx,dc&#x3D;it,dc&#x3D;com’ -S<br>       New password:<br>       Re-enter new password:<br>       就可以更改密码了，如果原来记录中没有密码，将会自动生成一个userPassword。</li>\n</ul>\n<p>    </p>\n<blockquote>\n<p>ldapmodify<br>     -a 添加新的条目.缺省的是修改存在的条目.<br>     -C 自动追踪引用.<br>     -c 出错后继续执行程序并不中止.缺省情况下出错的立即停止.比如如果你的ldif 文件内的某个条目在<a href=\"http://lib.csdn.net/base/mysql\" title=\"MySQL知识库\">数据库</a>内并不存在,缺省情况下程序立即退出,但如果使用了该参数,程序忽略该错误继续执行.<br>     -n 用于调试到服务器的通讯.但并不实际执行搜索.服务器关闭时,返回错误；服务器<br>       打开时,常和-v 参数一起<a href=\"http://lib.csdn.net/base/softwaretest\" title=\"软件测试知识库\">测试</a>到服务器是否是一条通路.<br>     -v 运行在详细模块.在标准输出中打出一些比较详细的信息.比如:连接到服务器的<br>       ip 地址和端口号等.<br>     -M  打开 manage DSA IT 控制. -MM 把该控制设置为重要的.<br>     -f file 从文件内读取条目的修改信息而不是从标准输入读取.<br>    -x 使用简单认证.<br>    -D binddn 指定搜索的用户名(一般为一dn 值).<br>    -W 指定了该参数,系统将弹出一提示入用户的密码.它和-w 参数相对使用.<br>    -w bindpasswd 直接指定用户的密码. 它和-W 参数相对使用.<br>    -H ldapuri 指定连接到服务器uri(ip 地址和端口号,常见格式为 ldap:&#x2F;&#x2F;hostname:port ).如果使用了-H 就不能使用-h 和-p 参数.<br>    -h ldaphost 指定要连接的主机的名称&#x2F;ip 地址.它和-p 一起使用<br>    -p ldapport 指定要连接目录服务器的端口号.它和-h 一起使用，如果使用了-h 和-p 参数就不能使用-H 参数.<br>    -Z 使用StartTLS 扩展操作.如果使用-ZZ,命令强制使用StartTLS 握手成功.<br>    -V 启用证书认证功能,目录服务器使用客户端证书进行身份验证,必须与-ZZ 强制启用<br>       TLS 方式配合使用,并且匿名绑定到目录服务器.<br>    -e 设置客户端证书文件,例: -e cert&#x2F;client.crt<br>    -E 设置客户端证书私钥文件,例: -E cert&#x2F;client.key  </p>\n</blockquote>\n<ul>\n<li>例子<br>ldapmodify -x -D “cn&#x3D;root,dc&#x3D;it,dc&#x3D;com” -W -f modify.ldif    #   将modify.ldif中的记录更新原有的记录。</li>\n</ul>\n<h2 id=\"八、-参考链接\"><a href=\"#八、-参考链接\" class=\"headerlink\" title=\"八、 参考链接\"></a>八、 参考链接</h2><p><a href=\"https://github.com/jt6562/LDAP-read-notes/blob/master/ldap-guide/OpenLDAP%E7%AE%A1%E7%90%86%E5%91%98%E6%89%8B%E5%86%8C.md\">指南</a><br><a href=\"https://www.cnblogs.com/kevingrace/p/5773974.html\">知识总结</a><br><a href=\"https://www.cnblogs.com/js1314/p/12887893.html\">参考1</a><br><a href=\"https://cloud.tencent.com/developer/article/1932586\">参考2</a><br><a href=\"https://blog.csdn.net/u011607971/article/details/121126289?spm=1001.2014.3001.5501#t3\">参考3</a><br><a href=\"https://ubuntu.com/server/docs/service-ldap-with-tls\">Ubuntu wiki</a><br><a href=\"https://www.cnblogs.com/shu-sheng/p/14450815.html\">tls参考1</a><br><a href=\"https://hmli.ustc.edu.cn/doc/linux/ubuntu-ldap/ubuntu-ldap.html#id14\">tls参考2</a><br><a href=\"https://zhuanlan.zhihu.com/p/643010354\">tls参考3</a></p>\n<h2 id=\"九、问题：\"><a href=\"#九、问题：\" class=\"headerlink\" title=\"九、问题：\"></a>九、问题：</h2><h3 id=\"9-1-从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果\"><a href=\"#9-1-从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果\" class=\"headerlink\" title=\"9.1 从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果\"></a>9.1 从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果</h3><h3 id=\"9-2-日志功能开启失败\"><a href=\"#9-2-日志功能开启失败\" class=\"headerlink\" title=\"9.2 日志功能开启失败\"></a>9.2 日志功能开启失败</h3><pre><code>已经调整日志级别，在系统日志中查看并grep\n</code></pre>\n<h3 id=\"9-3-证书缺失-只能使用ldap01-这个信息查询）\"><a href=\"#9-3-证书缺失-只能使用ldap01-这个信息查询）\" class=\"headerlink\" title=\"9.3 证书缺失(只能使用ldap01,这个信息查询）\"></a>9.3 证书缺失(只能使用ldap01,这个信息查询）</h3><pre><code>采取使用权威证书\n</code></pre>\n<h3 id=\"9-4-重启slap报错-tls-init-failed\"><a href=\"#9-4-重启slap报错-tls-init-failed\" class=\"headerlink\" title=\"9.4 重启slap报错 tls init   failed\"></a>9.4 重启slap报错 tls init   failed</h3><pre><code>解决办法：重新生成证书\n</code></pre>\n<h3 id=\"9-5-报错-ldap-start-tls-Connect-error-11-n-additional-info-unknown-error-code\"><a href=\"#9-5-报错-ldap-start-tls-Connect-error-11-n-additional-info-unknown-error-code\" class=\"headerlink\" title=\"9.5 报错 ldap_start_tls: Connect error (-11)    \\n    additional info: (unknown error code)\"></a>9.5 报错 ldap_start_tls: Connect error (-11)    \\n    additional info: (unknown error code)</h3><pre><code>可能是由于服务器证书的通用名（Common Name）字段是否与主机名不一致，请检查主机名和服务器证书\n</code></pre>\n<h3 id=\"9-6-连接问题\"><a href=\"#9-6-连接问题\" class=\"headerlink\" title=\"9.6 连接问题\"></a>9.6 连接问题</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldaps:&#x2F;&#x2F;ldap.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W            # 在服务器本机执行此查询的报错。但是在另一个机器可以成功查询\n\tldap_sasl_bind(SIMPLE): Can&#39;t contact LDAP server (-1)                                 # 配置 ldap.conf 之后成功解决并有输出 tls&#x3D;demand&#x2F;allow----作用是证书检查<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"9-7-在多域的使用中，不能正常添加子条目，出现“shadow-context-no-update-referral”\"><a href=\"#9-7-在多域的使用中，不能正常添加子条目，出现“shadow-context-no-update-referral”\" class=\"headerlink\" title=\"9.7 在多域的使用中，不能正常添加子条目，出现“shadow context; no update referral”\"></a>9.7 在多域的使用中，不能正常添加子条目，出现“shadow context; no update referral”</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">1. 首先尝试重新部署，发现执行镜像复制的剧本之前可以正常创建所有的条目\n    解决：在mirror mode 开启时，需要指定相应的数据库\n2.  shadow context; no update referral  根本原因是需要检查权限<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"9-8-使用的脚本一致，测试环境和生产环境结果不一致-主要是不能长时间正常保持客户端连接并查询\"><a href=\"#9-8-使用的脚本一致，测试环境和生产环境结果不一致-主要是不能长时间正常保持客户端连接并查询\" class=\"headerlink\" title=\"9.8 使用的脚本一致，测试环境和生产环境结果不一致; 主要是不能长时间正常保持客户端连接并查询\"></a>9.8 使用的脚本一致，测试环境和生产环境结果不一致; 主要是不能长时间正常保持客户端连接并查询</h3><ul>\n<li>脚本中的组织信息ldif文件有问题，经测试不影响。</li>\n<li>memberOf，属性不可单独添加，通过 groupofNames 指定 member 之后会自动关联。已经修正使用方式，结果未改变。</li>\n<li>2204 系统和 2004 系统的slapd版本不一致（并没有影响）。</li>\n<li>将orgnization的任务和前一部分拆分，否则会出现读取不到 rootdn（手动测试是成功的）（然而脚本中修改后并没有解决这个问题）。</li>\n<li>将organization拆分，在此之前重启服务，未解决。</li>\n<li>将organization拆分，在此之前先重启虚拟机。（有效、怀疑是服务中某些连接的状态在ansible执行中没有更新）（仍然失效了，经过一夜之后失效）。</li>\n<li>另一台2204主机安装正常使用，怀疑虚拟机系统问题。</li>\n</ul>\n<h2 id=\"十、-验证\"><a href=\"#十、-验证\" class=\"headerlink\" title=\"十、 验证\"></a>十、 验证</h2><h3 id=\"10-1-检测连接命令：\"><a href=\"#10-1-检测连接命令：\" class=\"headerlink\" title=\"10.1 检测连接命令：\"></a>10.1 检测连接命令：</h3><p> ldaps:&#x2F;&#x2F;    —-ldap over ssl  使用636 ，从连接开始加密   ;        ldap:&#x2F;&#x2F;           —ldap_start_tls(-ZZ参数):    使用389，从传输开始加密</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldaps:&#x2F;&#x2F;ldap01.example.top:636 -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -s sub &quot;(objectClass&#x3D;person)&quot;\n\nldapsearch -H ldap:&#x2F;&#x2F;10.13.3.106  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -s sub &quot;(objectClass&#x3D;person)&quot;\n\nldapsearch -H ldap:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -s sub &quot;(objectClass&#x3D;person)&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"10-2-验证和日志\"><a href=\"#10-2-验证和日志\" class=\"headerlink\" title=\"10.2 验证和日志\"></a>10.2 验证和日志</h3><p>tag 101 应表明在查询; tag 97 是在认证</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldap:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W   -ZZ      #  启用了tls功能 ，-ZZ 参数，仍然是 389 端口，连接后在传输过程中加密\n\t\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:60674 (IP&#x3D;0.0.0.0:389)\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;0 EXT oid&#x3D;1.3.6.1.4.1.1466.20037\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;0 STARTTLS\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;0 RESULT oid&#x3D; err&#x3D;0 text&#x3D;\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 fd&#x3D;14 TLS established tls_ssf&#x3D;256 ssf&#x3D;256\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;1 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;1 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;1 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;2 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;2 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;6 text&#x3D;\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;3 UNBIND\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 fd&#x3D;14 closed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldap:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W        # 明文传输\n\t\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:37760 (IP&#x3D;0.0.0.0:389)\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;6 text&#x3D;\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;2 UNBIND\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 fd&#x3D;14 closed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldaps:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W        # 从连接就开始加密\n\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:58726 (IP&#x3D;0.0.0.0:636)\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 fd&#x3D;14 TLS established tls_ssf&#x3D;256 ssf&#x3D;256\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;6 text&#x3D;\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;2 UNBIND\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 fd&#x3D;14 closed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldaps:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -ZZ\n\tldap_start_tls: Operations error (1)\n        additional info: TLS already started\n\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:39894 (IP&#x3D;0.0.0.0:636)\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 fd&#x3D;14 TLS established tls_ssf&#x3D;256 ssf&#x3D;256\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;0 EXT oid&#x3D;1.3.6.1.4.1.1466.20037\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;0 STARTTLS\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;0 RESULT oid&#x3D; err&#x3D;1 text&#x3D;TLS already started                # 证明二者冲突，不能同时开启\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;1 UNBIND\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 fd&#x3D;14 closed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十一、应用服务\"><a href=\"#十一、应用服务\" class=\"headerlink\" title=\"十一、应用服务\"></a>十一、应用服务</h2><h3 id=\"11-1-建立-ldap-管理-只读帐号\"><a href=\"#11-1-建立-ldap-管理-只读帐号\" class=\"headerlink\" title=\"11.1 建立 ldap 管理&#x2F;只读帐号\"></a>11.1 建立 ldap 管理&#x2F;只读帐号</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;admin,dc&#x3D;xxx,dc&#x3D;xx \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi  \n  \n-  \ndn: cn&#x3D;reader,dc&#x3D;xxx2,dc&#x3D;xx2  \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"11-2-详细的公司架构-ldif\"><a href=\"#11-2-详细的公司架构-ldif\" class=\"headerlink\" title=\"11.2 详细的公司架构 ldif\"></a>11.2 详细的公司架构 ldif</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example  \n  \ndn: ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-bod  \n  \ndn: cn&#x3D;user1,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user1  \ndepartmentnumber: 1  \ndisplayname: Zheng Yu  \nmail: user1@example.net  \nobjectclass: inetOrgPerson  \nsn: Zheng  \ntitle: President  \nuid: 10000  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-bod-admin  \nmember: cn&#x3D;user1,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-bus  \n  \ndn: cn&#x3D;user8,ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user8  \ndepartmentnumber: 2  \ndisplayname: Sun Minghong  \nmail: user8@example.net  \nobjectclass: inetOrgPerson  \nsn: Sun  \ntitle: Financial Manager  \nuid: 10001  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-bus-admin,ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-bus-admin  \nmember: cn&#x3D;user8,ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-sys  \n  \ndn: cn&#x3D;user2,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user2  \ndepartmentnumber: 3  \ndisplayname: Xie Jian  \nmail: user2@example.net  \nobjectclass: inetOrgPerson  \nsn: Xie  \ntitle: Senior Systems Engineer  \nuid: 10002  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-sys-admin  \nmember: cn&#x3D;user2,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: cn&#x3D;user5,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user5  \ndepartmentnumber: 3  \ndisplayname: Long Chao  \nmail: user5@example.net  \nobjectclass: inetOrgPerson  \nsn: Long  \ntitle: System Engineer  \nuid: 10003  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-sys-junior,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-sys-junior  \nmember: cn&#x3D;user5,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-ops  \n  \ndn: cn&#x3D;user6.tang,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user6.tang  \ndepartmentnumber: 4  \ndisplayname: Tang Binchao  \nmail: user6.tang@example.net  \nobjectclass: inetOrgPerson  \nsn: Tang  \ntitle: System Engineer  \nuid: 10004  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-ops-admin  \nmember: cn&#x3D;user6.tang,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-dev  \n  \ndn: cn&#x3D;user3,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user3  \ndepartmentnumber: 5  \ndisplayname: Chen Cheng  \nmail: user3@example.net  \nobjectclass: inetOrgPerson  \nsn: Chen  \ntitle: Senior Development Engineer  \nuid: 10005  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-dev-admin,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-dev-admin  \nmember: cn&#x3D;user3,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: cn&#x3D;user4.li,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user4.li  \ndepartmentnumber: 5  \ndisplayname: Li user4  \nmail: user4.li@example.net  \nobjectclass: inetOrgPerson  \nsn: Li  \ntitle: Development Engineer  \nuid: 10006  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;user7,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user7  \ndepartmentnumber: 5  \ndisplayname: Luo Xujun  \nmail: user7@example.net  \nobjectclass: inetOrgPerson  \nsn: Luo  \ntitle: Development Engineer  \nuid: 10007  \nuserpassword: &#123;SSHA&#125;&#x2F;2+Coei5Fje+th7mOJgu43Ms3hBia2Qu  \n  \ndn: cn&#x3D;example-dev-senior,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-dev-senior  \nmember: cn&#x3D;user4.li,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nmember: cn&#x3D;user7,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: ou&#x3D;example-rob,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-rob<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"11-3-第一版-ACL\"><a href=\"#11-3-第一版-ACL\" class=\"headerlink\" title=\"11.3 第一版 ACL\"></a>11.3 第一版 ACL</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;ou&#x3D;example,dc&#x3D;example,dc&#x3D;net&quot; filter&#x3D;&quot;(&amp;(objectClass&#x3D;inetOrgPerson)(|(memberOf&#x3D;cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)))&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read\n\ndn: olcDatabase&#x3D;&#123;4&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write  by anonymous auth  by * none\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;ibexample,dc&#x3D;com&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"11-4-最终的acl（写两个域、读两个域、reader-example-可以读取某些admin组，实现映射到example域下集成的应用）\"><a href=\"#11-4-最终的acl（写两个域、读两个域、reader-example-可以读取某些admin组，实现映射到example域下集成的应用）\" class=\"headerlink\" title=\"11.4 最终的acl（写两个域、读两个域、reader_example 可以读取某些admin组，实现映射到example域下集成的应用）\"></a>11.4 最终的acl（写两个域、读两个域、reader_example 可以读取某些admin组，实现映射到example域下集成的应用）</h3><ul>\n<li><p>添加</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;example,dc&#x3D;net&quot; read\nolcAccess: &#123;3&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; filter&#x3D;&quot;(&amp;(objectClass&#x3D;inetOrgPerson)(|(memberOf&#x3D;cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)))&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read\n \ndn: olcDatabase&#x3D;&#123;2&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write  by anonymous auth  by * none\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;ibexample,dc&#x3D;com&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;example,dc&#x3D;net&quot; read<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>删除</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\ndelete: olcAccess\nolcAccess: &#123;2&#125;to..........\nolcAccess: &#123;3&#125;to........\n \n\nldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f acl-dele.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>数据库内 ACL 顺序测试，{}里面是优先级，生效在前（涉及范围大的 ACL 应书写在前）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by anonymous auth  by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write  by * none   \nolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * read\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,dc&#x3D;example,dc&#x3D;tech&quot; by dn.base&#x3D;&quot;cn&#x3D;reader,dc&#x3D;example,dc&#x3D;net&quot; read by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write    # 如果没有此条acl,该条目将不能在 lam 中被 admin 管理\n olcAccess: &#123;3&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;tech&quot; by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write      # 此条优先级最低<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"十二、集成其他应用\"><a href=\"#十二、集成其他应用\" class=\"headerlink\" title=\"十二、集成其他应用\"></a>十二、集成其他应用</h2><h3 id=\"12-1-conflunce\"><a href=\"#12-1-conflunce\" class=\"headerlink\" title=\"12.1  conflunce\"></a>12.1  conflunce</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by anonymous auth by * none\nolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * read\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; by dn.base&#x3D;&quot;cn&#x3D;reader,dc&#x3D;ibexample,dc&#x3D;com&quot; read<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"12-1-1-连接-之后的-acl-过滤案例\"><a href=\"#12-1-1-连接-之后的-acl-过滤案例\" class=\"headerlink\" title=\"12.1.1 连接 之后的 acl 过滤案例\"></a>12.1.1 连接 之后的 acl 过滤案例</h4><p>‘(&amp;(objectclass&#x3D;inetorgperson)(|(cn&#x3D;user5)(cn&#x3D;user2)))’  过滤出指定用户—-在用户模式设置。</p>\n<p>‘(&amp;(objectclass&#x3D;groupOfNames)(|(cn&#x3D;example-sys-junior)(cn&#x3D;example-sys-admin)))’ 过滤指定组—-在组模式设置（在ldap中创建的组 objectclass 是groupOfNames）</p>\n<h4 id=\"12-1-2-更详细的-acl-需求\"><a href=\"#12-1-2-更详细的-acl-需求\" class=\"headerlink\" title=\"12.1.2 更详细的 acl 需求\"></a>12.1.2 更详细的 acl 需求</h4><ul>\n<li><p>example</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write  by anonymous auth  by * none\nolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * read\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; filter&#x3D;&quot;(&amp;(objectClass&#x3D;inetOrg\n Person)(|(memberOf&#x3D;cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net\n )(memberOf&#x3D;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(member\n Of&#x3D;cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)))&quot; by dn.base&#x3D;\n &quot;cn&#x3D;reader,dc&#x3D;ibexample,dc&#x3D;com&quot; read  by dn.base&#x3D; &quot;cn&#x3D;reader,dc&#x3D;example,dc&#x3D;net&quot; read\n\nsearch时，必须要具体到用户层级，例如nextcloud，需要指定基础用户树如下\n\ncn&#x3D;user2,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net\ncn&#x3D;user1,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net\ncn&#x3D;user6.tang,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net\ndc&#x3D;ibexample,dc&#x3D;com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>example</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write  by anonymous auth  by * none\nolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * read\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;ibexample,dc&#x3D;com&quot; by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write by dn.base&#x3D;&quot;cn&#x3D;reader,dc&#x3D;ibexample,dc&#x3D;com&quot; read<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"12-2-集成-vault\"><a href=\"#12-2-集成-vault\" class=\"headerlink\" title=\"12.2 集成 vault\"></a>12.2 集成 vault</h3><ul>\n<li>过滤特定用户<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&amp;(objectClass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(cn&#x3D;user2)(cn&#x3D;user1)(cn&#x3D;%s)))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>过滤某个组<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&amp;(objectClass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>过滤多个组<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&amp;(objectclass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)(memberof&#x3D;CN&#x3D;example-dev-admin,OU&#x3D;example-dev,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>过滤特定用户和特定组<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&amp;(objectclass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(|(cn&#x3D;user4.li))(|(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)(memberof&#x3D;CN&#x3D;example-dev-admin,OU&#x3D;example-dev,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net))(cn&#x3D;%s)))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>错误<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&amp;(objectClass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(cn&#x3D;user2)(cn&#x3D;user1))(cn&#x3D;%s))  会失败\n\n以下 1 条，写在group filter的时候会出现不能过滤，所有人都可以登录\n(&amp;(objectclass&#x3D;inetOrgPerson)(|(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)(memberof&#x3D;CN&#x3D;example-dev-admin,OU&#x3D;example-dev,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"OpenLDAP\"><a href=\"#OpenLDAP\" class=\"headerlink\" title=\"OpenLDAP\"></a>OpenLDAP</h1><h2 id=\"一、-概念\"><a href=\"#一、-概念\" class=\"headerlink\" title=\"一、 概念\"></a>一、 概念</h2><p><a href=\"https://www.openldap.org/doc/admin26/guide.html\">官方手册</a></p>\n<h3 id=\"1-1-常用属性\"><a href=\"#1-1-常用属性\" class=\"headerlink\" title=\"1.1 常用属性\"></a>1.1 常用属性</h3><ul>\n<li>DN：Distinguished Name，LDAP记录项的标识，有唯一性，例如：dc:”cn&#x3D;admin,ou&#x3D;developer,dc&#x3D;163,dc&#x3D;com”  </li>\n<li>dc&#x3D; DomainComponent 为域组件，域名的一部分</li>\n<li>cn&#x3D;CommonName 为记录名，表示一个实体，最长到80个字符，可以为中文；</li>\n<li>ou&#x3D;OrganizationUnit 为组织单位，用于分类，最多四级，每级最长32字符，可以为中文；</li>\n<li>uid&#x3D;User id 为用户的唯一标识</li>\n<li>c&#x3D;Country 为国家名，可选，为2个字符长</li>\n<li>o&#x3D;Organization 为组织名，可选，可以3—64个字符长</li>\n</ul>\n<h2 id=\"二、-手动安装和配置-LDAP\"><a href=\"#二、-手动安装和配置-LDAP\" class=\"headerlink\" title=\"二、 手动安装和配置 LDAP\"></a>二、 手动安装和配置 LDAP</h2><h3 id=\"2-1-安装-slapd-独立的-LDAP-守护进程，同时便于管理服务\"><a href=\"#2-1-安装-slapd-独立的-LDAP-守护进程，同时便于管理服务\" class=\"headerlink\" title=\"2.1 安装 slapd (独立的 LDAP 守护进程，同时便于管理服务)\"></a>2.1 安装 slapd (独立的 LDAP 守护进程，同时便于管理服务)</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt install  -y slapd ldap-utils<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-2-重新配置-OpenLDAP，创建-base-dn\"><a href=\"#2-2-重新配置-OpenLDAP，创建-base-dn\" class=\"headerlink\" title=\"2.2  重新配置 OpenLDAP，创建 base dn\"></a>2.2  重新配置 OpenLDAP，创建 base dn</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo dpkg-reconfigure slapd   # 主要配置密码 (密码在下一步重置，便于配置连接)，DNS domain name(即 LDAP 服务中的 base dn)\n\n\t 说明：\n\t第一步回答 No\n\t第二步填写域名，比如 mycompany.com\n\t第三步填写组织名，比如 Company\n\t第四步填写管理员密码，比如 secret；第五步确认管理员密码\n\t第六步选择使用的数据库后端，比如 MDB\n\t第七步选择在清除 slapd 时是否移除数据库，比如 Yes\n\t第八步选择是否移除旧数据库，比如 Yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-3-生成密码，用于控制台登录的admin帐号，需要保存此密文密码\"><a href=\"#2-3-生成密码，用于控制台登录的admin帐号，需要保存此密文密码\" class=\"headerlink\" title=\"2.3 生成密码，用于控制台登录的admin帐号，需要保存此密文密码\"></a>2.3 生成密码，用于控制台登录的admin帐号，需要保存此密文密码</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">slappasswd\n\t&#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过数据库修改admin用户的ldif文件<pre class=\"line-numbers language-ldif\" data-language=\"ldif\"><code class=\"language-ldif\">&#x2F;etc&#x2F;ldap&#x2F;slapd.d&#x2F;cn\\&#x3D;config&#x2F;olcDatabase\\&#x3D;\\&#123;1\\&#125;mdb.ldif\n\tolcDatabase: &#123;1&#125;mdb\n\tolcSuffix: dc&#x3D;example,dc&#x3D;top\n\tolcRootDN: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top\n\tolcRootPW: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>olcDatabase: 定义使用的后端数据存储格式,遵循默认</li>\n<li>olcSuffix: 设置 LDAP 服务的根</li>\n<li>olcRootDN: 设置管理员用户的 dn</li>\n<li>olcRootPW: 管理员用户的密码</li>\n<li>修改后重启服务<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo slaptest -u   # 检查配置文件\nsudo systemctl enable slapd  --now\n\nsudo slapcat        # 输出看到当前数据库内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"2-4-正确的修改olcRootPW-管理员用户的密码\"><a href=\"#2-4-正确的修改olcRootPW-管理员用户的密码\" class=\"headerlink\" title=\"2.4 正确的修改olcRootPW: 管理员用户的密码\"></a>2.4 正确的修改olcRootPW: 管理员用户的密码</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nchangetype: modify\nreplace: olcRootPW\nolcRootPW: example2020  # 保存在数据库文件中的时候将会被加密<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f passmodify.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">同时进入web ui，修改admin账户的密码，如果不修改两个密码都能管理域，二者修改一致之后，才是新的管理密码生效<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-5-简单结构展示\"><a href=\"#2-5-简单结构展示\" class=\"headerlink\" title=\"2.5 简单结构展示\"></a>2.5 简单结构展示</h3><p>略</p>\n<h3 id=\"2-6-创建base-dn\"><a href=\"#2-6-创建base-dn\" class=\"headerlink\" title=\"2.6 创建base dn\"></a>2.6 创建base dn</h3><h4 id=\"2-6-1-查看LDAP服务器的根目录信息\"><a href=\"#2-6-1-查看LDAP服务器的根目录信息\" class=\"headerlink\" title=\"2.6.1 查看LDAP服务器的根目录信息\"></a>2.6.1 查看LDAP服务器的根目录信息</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo ldapsearch -x -LLL -b &#39;&#39; -s base &#39;(objectclass&#x3D;*)&#39;\n\tdn:\n\tobjectClass: top\n\tobjectClass: OpenLDAProotDSE<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-6-2-基于-ldif-文件直接创建，不使用图形化交互。创建之后，对这个-base-dn-设置管理员的密码\"><a href=\"#2-6-2-基于-ldif-文件直接创建，不使用图形化交互。创建之后，对这个-base-dn-设置管理员的密码\" class=\"headerlink\" title=\"2.6.2 基于 ldif 文件直接创建，不使用图形化交互。创建之后，对这个 base dn 设置管理员的密码\"></a>2.6.2 基于 ldif 文件直接创建，不使用图形化交互。创建之后，对这个 base dn 设置管理员的密码</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">-\ndn: dc&#x3D;example,dc&#x3D;top\nchangetype: add\nobjectClass: top\nobjectClass: domain\n\n\n-\ndn: o&#x3D;example,dc&#x3D;example,dc&#x3D;top\nchangetype: add\nobjectClass: organization\no: example<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapmodify -x -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -w example@2020  -f organization.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"2-7-创建多个-DIT-base-dn-（可以考虑尝试后端用-mysql-做数据库）\"><a href=\"#2-7-创建多个-DIT-base-dn-（可以考虑尝试后端用-mysql-做数据库）\" class=\"headerlink\" title=\"2.7 创建多个 DIT + base dn （可以考虑尝试后端用 mysql 做数据库）\"></a>2.7 创建多个 DIT + base dn （可以考虑尝试后端用 <code>mysql</code> 做数据库）</h3><h4 id=\"2-7-1-为新的库，准备存储路径，并通过apparmor做权限限制\"><a href=\"#2-7-1-为新的库，准备存储路径，并通过apparmor做权限限制\" class=\"headerlink\" title=\"2.7.1 为新的库，准备存储路径，并通过apparmor做权限限制\"></a>2.7.1 为新的库，准备存储路径，并通过<code>apparmor</code>做权限限制</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir  &#x2F;var&#x2F;lib&#x2F;ldap2\nchown openldap:openldap  &#x2F;var&#x2F;lib&#x2F;ldap2\nvim &#x2F;etc&#x2F;apparmor.d&#x2F;usr.sbin.slapd\n\t\t# the databases and logs\n\t\t&#x2F;var&#x2F;lib&#x2F;ldap2&#x2F; r,\n\t\t&#x2F;var&#x2F;lib&#x2F;ldap2&#x2F;** rwk,\n\t\t\n\t\t# lock file\n\t\t&#x2F;var&#x2F;lib&#x2F;ldap2&#x2F;alock kw,\n\nsudo systemctl  reload  apparmor <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-7-2-准备-ldif-文件，创建新的-DIT（可以自定义路径）\"><a href=\"#2-7-2-准备-ldif-文件，创建新的-DIT（可以自定义路径）\" class=\"headerlink\" title=\"2.7.2 准备 ldif 文件，创建新的 DIT（可以自定义路径）\"></a>2.7.2 准备 ldif 文件，创建新的 DIT（可以自定义路径）</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: olcDatabase&#x3D;&#123;2&#125;mdb,cn&#x3D;config\nchangetype: add\nobjectClass: olcDatabaseConfig\nobjectClass: olcMdbConfig\nolcDbDirectory: &#x2F;var&#x2F;lib&#x2F;ldap2&#x2F;\nolcDatabase: &#123;2&#125;Mdb\nolcDbIndex: objectClass eq\nolcDbIndex: cn,uid eq\nolcDbIndex: uidNumber,gidNumber eq\nolcDbIndex: member,memberUid eq\nolcLastMod: TRUE\nolcMonitoring: TRUE\nolcDBNoSync: TRUE\nolcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by anonymous auth by * non\n e\nolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * read\nolcSuffix: dc&#x3D;example,dc&#x3D;tech\nolcRootDN: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;tech\nolcRootPW: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo  ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f domian2.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-7-3-新增并设置管理员\"><a href=\"#2-7-3-新增并设置管理员\" class=\"headerlink\" title=\"2.7.3 新增并设置管理员\"></a>2.7.3 新增并设置管理员</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">-\ndn: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;tech\nobjectClass: simpleSecurityObject\nobjectClass: organizationalRole\ncn: admin\nuserPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n# 以下是playbook中模板文件\n-\ndn: cn&#x3D;admin,&#123;&#123; item.base_dn &#125;&#125;  \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo ldapadd -x -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;tech&quot; -w example@2020 -f basedn2.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-7-4-多-DIT-跨域-ACL\"><a href=\"#2-7-4-多-DIT-跨域-ACL\" class=\"headerlink\" title=\"2.7.4 多 DIT 跨域 ACL\"></a>2.7.4 多 DIT 跨域 ACL</h4><ul>\n<li><p>查询服务器的域</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -x -H ldap:&#x2F;&#x2F;10.13.3.107 -b &quot;&quot; -s base namingContexts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>设置一个全权限的 acl ，跨域访问，相应的用户需已经提前创建</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">让这个dn 用户: cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech ;  可以阅读这个base dn : dc&#x3D;example,dc&#x3D;top 下的所有条目.\n对应关系：数据库----&#123;1&#125;mdb  存储的数据是来自 dn: dc&#x3D;example,dc&#x3D;top 。即，对谁的访问则将 acl 添加在谁的库下  \n\ndn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; by dn.base&#x3D;&quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; read<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapmodify   -Y   EXTERNAL   -H   ldapi:&#x2F;&#x2F;&#x2F;   -f  xxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"2-7-5-测试\"><a href=\"#2-7-5-测试\" class=\"headerlink\" title=\"2.7.5 测试\"></a>2.7.5 测试</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">root@example-sys-test-06:&#x2F;etc&#x2F;ldap&#x2F;example# ldapsearch -x -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -D &quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; -w example@2020\n\t\t# extended LDIF\n\t\t#\n\t\t# LDAPv3\n\t\t# base &lt;dc&#x3D;example,dc&#x3D;top&gt; with scope subtree\n\t\t# filter: (objectclass&#x3D;*)\n\t\t# requesting: ALL\n\t\t#\n\t\t\n\t\t# example.top\n\t\tdn: dc&#x3D;example,dc&#x3D;top\n\t\tobjectClass: top\n\t\tobjectClass: domain\n\t\tdc: example\n\t\t\n\t\t# admin, example.top\n\t\tdn: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top\n\t\tobjectClass: simpleSecurityObject\n\t\tobjectClass: organizationalRole\n\t\tcn: admin\n\t\t\n\t\t# search result\n\t\tsearch: 2\n\t\tresult: 0 Success\n\t\t\n\t\t# numResponses: 3\n\t\t# numEntries: 2\nroot@example-sys-test-06:&#x2F;etc&#x2F;ldap&#x2F;example# ldapsearch -x -b &quot;dc&#x3D;example,dc&#x3D;tech&quot; -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -w example@2020\n\t\t# extended LDIF\n\t\t#\n\t\t# LDAPv3\n\t\t# base &lt;dc&#x3D;example,dc&#x3D;tech&gt; with scope subtree\n\t\t# filter: (objectclass&#x3D;*)\n\t\t# requesting: ALL\n\t\t#\n\t\t\n\t\t# search result\n\t\tsearch: 2\n\t\tresult: 32 No such object\n\t\t\n\t\t# numResponses: 1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>测试的日志<pre class=\"line-numbers language-none\"><code class=\"language-none\">Sep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 fd&#x3D;12 ACCEPT from IP&#x3D;127.0.0.1:59834 (IP&#x3D;0.0.0.0:389)\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; method&#x3D;128\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; mech&#x3D;SIMPLE ssf&#x3D;0\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;2 text&#x3D;\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;2 UNBIND\nSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 fd&#x3D;12 closed\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 fd&#x3D;12 ACCEPT from IP&#x3D;127.0.0.1:34916 (IP&#x3D;0.0.0.0:389)\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;tech&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;32 nentries&#x3D;0 text&#x3D;\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;2 UNBIND\nSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 fd&#x3D;12 closed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"三、-web管理器配置\"><a href=\"#三、-web管理器配置\" class=\"headerlink\" title=\"三、 web管理器配置\"></a>三、 web管理器配置</h2><h3 id=\"3-1-安装-LAM-（用于管理的Web-UI）\"><a href=\"#3-1-安装-LAM-（用于管理的Web-UI）\" class=\"headerlink\" title=\"3.1 安装  LAM （用于管理的Web UI）\"></a>3.1 安装  LAM （用于管理的Web UI）</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">apt-get install ldap-account-manager<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>访问 <a href=\"http://ip/lam\">http://ip/lam</a> ，lam的所有配置都可以在web端配置，不需要去服务器上修改一行代码</p>\n<h4 id=\"3-1-1-LAM-configuration-helm-安装的主要修改内容\"><a href=\"#3-1-1-LAM-configuration-helm-安装的主要修改内容\" class=\"headerlink\" title=\"3.1.1 LAM configuration (helm 安装的主要修改内容)\"></a>3.1.1 LAM configuration (<a href=\"https://check-lc.github.io/ops_blog/2023/12/04/the-first-time-using-helm-charts/\">helm 安装的主要修改内容</a>)</h4><pre>\n主要内容：\n  LDAP_DOMAIN: example.net;ibexample.com\n  LDAP_BASE_DN: dc=example,dc=net;dc=ibexample,dc=com\n  LDAP_SERVER: ldaps://ldap01.example.net\n  LDAP_USER: cn=administrator,dc=example,dc=net\n  LAM_LANG: zh_CN\n  LAM_PASSWORD: lam\n</pre>\n\n<ul>\n<li><p>tree view编辑更高效</p>\n</li>\n<li><p>如果选择 docker 安装镜像：ghcr.io&#x2F;ldapaccountmanager&#x2F;lam:8.4@sha256:283726bd23510f1c3bfbdcbfe861e6599e070616543aed02e9756075c97a9938</p>\n</li>\n</ul>\n<h4 id=\"3-1-3-Nginx反向代理-LAM-Web-UI\"><a href=\"#3-1-3-Nginx反向代理-LAM-Web-UI\" class=\"headerlink\" title=\"3.1.3 Nginx反向代理 LAM Web UI\"></a>3.1.3 Nginx反向代理 LAM Web UI</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">upstream lam &#123;\n  server 10.13.3.108:8001;\n&#125;\n\nserver &#123;\n  listen 80;\n  server_name lam.example.net;\n  return 301 https:&#x2F;&#x2F;$server_name$request_uri;\n&#125;\n\nserver &#123;\n  server_name lam.example.net;\n  listen 443 ssl;\n  ssl_certificate webmin&#x2F;tls_ca.pem;\n  ssl_certificate_key webmin&#x2F;tls_key.pem;\n\n  location &#x2F; &#123;\n     proxy_pass http:&#x2F;&#x2F;lam&#x2F;;\n     proxy_set_header Host $host;\n     proxy_set_header X-Real-IP $remote_addr;\n     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n#     proxy_set_header X-Forwarded-Proto &quot;https&quot;;\n     proxy_read_timeout 1800s;\n     proxy_http_version 1.1;\n     proxy_set_header Upgrade $http_upgrade;\n     proxy_set_header Connection &quot;upgrade&quot;;\n    &#125;\n  &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-2-测试-phpldapadmin\"><a href=\"#3-2-测试-phpldapadmin\" class=\"headerlink\" title=\"3.2 测试 phpldapadmin\"></a>3.2 测试 phpldapadmin</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">Setting up php8.1 (8.1.2-1ubuntu2.14)                       # 版本信息，配置文件完整，存在证书认证并可以指定路径\nSetting up php (2:8.1+92ubuntu1) \nSetting up phpldapadmin (1.2.6.3-0.2)                                       <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"3-2-1-安装\"><a href=\"#3-2-1-安装\" class=\"headerlink\" title=\"3.2.1 安装\"></a>3.2.1 安装</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">apt-get install phpldapadmin -y\nnano &#x2F;etc&#x2F;phpldapadmin&#x2F;config.php\n\t$servers-&gt;setValue(&#39;server&#39;,&#39;name&#39;,&#39;My LDAP Server&#39;);                      # 辨识，区分的作用\n\t$servers-&gt;setValue(&#39;server&#39;,&#39;host&#39;,&#39;69.87.216.102&#39;);                              #  修改ip为服务器 ip\n\t$servers-&gt;;setValue(&#39;server&#39;,&#39;base&#39;,array(&#39;dc&#x3D;example,dc&#x3D;com&#39;));                    # 修改 array 内容为需求的根\n\t$servers-&gt;setValue(&#39;login&#39;,&#39;auth_type&#39;,&#39;session&#39;);                                              \n\t$servers-&gt;setValue(&#39;login&#39;,&#39;bind_id&#39;,&#39;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;com&#39;);           #   绑定登录帐号admin，相应修改 dn 号即可\n\t$servers-&gt;setValue(&#39;auto_number&#39;,&#39;min&#39;,array(&#39;uidNumber&#39;&#x3D;&gt;10000,&#39;gidNumber&#39;&#x3D;&gt;10000));   # 规定 uid，gid 数字表示的起始范围<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"3-2-2-为-phpLDAPadmin-配置-Apache\"><a href=\"#3-2-2-为-phpLDAPadmin-配置-Apache\" class=\"headerlink\" title=\"3.2.2 为 phpLDAPadmin 配置 Apache\"></a>3.2.2 为 phpLDAPadmin 配置 Apache</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">a2dissite 000-default.conf        # 禁用默认的 Apache 虚拟主机配置文件\nsystemctl restart apache2          <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"四、-主从架构-弃用，此配置需要在从服务器拉取-refresh\"><a href=\"#四、-主从架构-弃用，此配置需要在从服务器拉取-refresh\" class=\"headerlink\" title=\"四、 主从架构(弃用，此配置需要在从服务器拉取 refresh)\"></a>四、 主从架构(弃用，此配置需要在从服务器拉取 refresh)</h2><p><a href=\"https://darkdark.top/ch5-replication.html\">模式介绍</a></p>\n<h3 id=\"4-1-master-加载同步模块\"><a href=\"#4-1-master-加载同步模块\" class=\"headerlink\" title=\"4.1 master 加载同步模块\"></a>4.1 master 加载同步模块</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">cat &#x2F;etc&#x2F;ldap&#x2F;mod_syncprov.ldif\n\t\tdn: cn&#x3D;module,cn&#x3D;config\n\t\tobjectClass: olcModuleList\n\t\tcn: module\n\t\tolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldap\n\t\tolcModuleLoad: syncprov.la          # 此配置和上一句配置，实际是在请求这个路径的文件，&#x2F;usr&#x2F;lib&#x2F;ldap&#x2F;syncprov.la，不确定的可以用 find 查找\n\nldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f .&#x2F;mod_syncprov.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"4-2-同步设置\"><a href=\"#4-2-同步设置\" class=\"headerlink\" title=\"4.2 同步设置\"></a>4.2 同步设置</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">root@example-sys-test-06:&#x2F;etc&#x2F;ldap# cat syncprov.ldif \n\t\tdn: olcOverlay&#x3D;syncprov,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config       # 此处需要确认自己的数据库是什么样的，&#123;2&#125;hdb--旧版本默认 &#x2F; &#123;1&#125;mdb--新版本默认\n\t\tobjectClass: olcOverlayConfig\n\t\tobjectClass: olcSyncProvConfig\n\t\tolcOverlay: syncprov\n\t\tolcSpCheckpoint: 100 10\n\t\tolcSpSessionLog: 100\n\nldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f .&#x2F;syncprov.ldif                             # 修改并应用条目到 LDAP 服务  -Y EXTERNAL    将使用服务器配置的外部身份验证方法进行身份验证，而不是使用用户名和密码; -H 指定服务器连接; -f 指定文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"4-3-从服务器配置\"><a href=\"#4-3-从服务器配置\" class=\"headerlink\" title=\"4.3 从服务器配置\"></a>4.3 从服务器配置</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">root@example-sys-test-07:&#x2F;etc&#x2F;ldap# cat syncrepl.ldif\n\t\tdn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\n\t\tchangetype: modify\n\t\tadd: olcSyncRepl\n\t\tolcSyncRepl: rid&#x3D;002\n\t\t  provider&#x3D;ldap:&#x2F;&#x2F;10.13.3.106:389&#x2F;        # 此处开始与上一行有缩进\n\t\t  bindmethod&#x3D;simple\n\t\t  binddn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot;\n\t\t  credentials&#x3D;example@2020      \n\t\t  searchbase&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot;\n\t\t  scope&#x3D;sub\n\t\t  schemachecking&#x3D;on\n\t\t  type&#x3D;refreshAndPersist\n\t\t  retry&#x3D;&quot;5 5 300 +&quot;\n\t\t  attrs&#x3D;&quot;*,+&quot;\n\t\t  interval&#x3D;00:00:00:3\n\nldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f &#x2F;etc&#x2F;ldap&#x2F;syncrepl.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>运行中，修改主服务器内数据后，对从服务器u做刷新，可以看到是否同步</li>\n</ul>\n<p>参数说明：</p>\n<ul>\n<li>provider 为ldap master&#x2F;slave的地址 ;</li>\n<li>binddn：为域的基本信息，注这里一定要用管理员进行登录，否则同步不到用户的密码。</li>\n<li>credentials: ldap管理员的密码</li>\n<li>searchbase：选择要同步的独立域，根节点</li>\n<li>scope：设置所有的条目匹配</li>\n<li>schemachecking：设置同步更新时间检测</li>\n<li>type：同步模式为refreshAndPersist， refreshOnly 模式下后续操作由客户端轮询完成</li>\n<li>retry:同步更新重试次数和时间刚开始的5秒重试5次，以后每300秒重试一次</li>\n<li>attrs:复制全部属性</li>\n<li>interval 这里设置更新时间，这里为3秒一次，倒数第二个是分钟 以此类推。</li>\n</ul>\n<h2 id=\"四、-镜像复制（互为主从）\"><a href=\"#四、-镜像复制（互为主从）\" class=\"headerlink\" title=\"四、 镜像复制（互为主从）\"></a>四、 镜像复制（互为主从）</h2><p><a href=\"https://darkdark.top/ch5-replication.html\">模式介绍</a></p>\n<h3 id=\"4-1-为某域编辑-mirrorsync-ldif\"><a href=\"#4-1-为某域编辑-mirrorsync-ldif\" class=\"headerlink\" title=\"4.1 为某域编辑 mirrorsync.ldif\"></a>4.1 为某域编辑 mirrorsync.ldif</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;module,cn&#x3D;config         # 此段配置加载s ync 模块\nobjectClass: olcModuleList\ncn: module\nolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldap\nolcModuleLoad: syncprov.la     # 此配置和上一句，实际是在请求这个路径的文件，&#x2F;usr&#x2F;lib&#x2F;ldap&#x2F;syncprov.la，不确定的可 find 查找\n\n-\ndn: olcOverlay&#x3D;syncprov,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config        \n\t # 此处需确认自己的数据库，&#123;2&#125;hdb--为旧版本默认 &#x2F; &#123;1&#125;mdb--为新版本默认。路径 &#x2F;etc&#x2F;ldap&#x2F;slapd.d&#x2F;cn\\&#x3D;config&#x2F;olcDatabase\\&#x3D;\\&#123;1\\&#125;mdb.ldif\nobjectClass: olcOverlayConfig\nobjectClass: olcSyncProvConfig\nolcOverlay: syncprov\nolcSpSessionLog: 100\n\n-\ndn: cn&#x3D;config\nchangetype: modify\nreplace: olcServerID\nolcServerID: 0                                        # 用于标识本机的 server id\n\ndn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config      # 以下配置用于开启复制，指定主服务器\nchangetype: modify\nadd: olcSyncRepl\nolcSyncRepl: rid&#x3D;000                             # 标识唯一的 replica id\n  provider&#x3D;ldaps:&#x2F;&#x2F;ldap01.example.top       # 看上述记录介绍参数\n  bindmethod&#x3D;simple\n  binddn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot;\n  credentials&#x3D;example@2020\n  searchbase&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot;\n  tls_reqcert&#x3D;allow\n  scope&#x3D;sub\n  schemachecking&#x3D;on\n  type&#x3D;refreshAndPersist\n  retry&#x3D;&quot;30 5 300 3&quot;\n  interval&#x3D;00:00:05:00\n-\nadd: olcMirrorMode                        # 开启 mirror mode\nolcMirrorMode: TRUE\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-2-ldap01-example-top下编辑-mirrorsync-ldif\"><a href=\"#4-2-ldap01-example-top下编辑-mirrorsync-ldif\" class=\"headerlink\" title=\"4.2 ldap01.example.top下编辑 mirrorsync.ldif\"></a>4.2 ldap01.example.top下编辑 mirrorsync.ldif</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;module,cn&#x3D;config\nobjectClass: olcModuleList\ncn: module\nolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldap\nolcModuleLoad: syncprov.la\n\n-\ndn: olcOverlay&#x3D;syncprov,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nobjectClass: olcOverlayConfig\nobjectClass: olcSyncProvConfig\nolcOverlay: syncprov\nolcSpSessionLog: 100\n\n-\ndn: cn&#x3D;config\nchangetype: modify\nreplace: olcServerID\nolcServerID: 1\n\ndn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcSyncRepl\nolcSyncRepl: rid&#x3D;001\n  provider&#x3D;ldaps:&#x2F;&#x2F;ldap.example.top\n  bindmethod&#x3D;simple\n  binddn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot;\n  credentials&#x3D;example@2020\n  searchbase&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot;\n  tls_reqcert&#x3D;allow\n  scope&#x3D;sub\n  schemachecking&#x3D;on\n  type&#x3D;refreshAndPersist\n  retry&#x3D;&quot;30 5 300 3&quot;\n  interval&#x3D;00:00:05:00\n-\nadd: olcMirrorMode\nolcMirrorMode: TRUE\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"4-2-1-加载配置\"><a href=\"#4-2-1-加载配置\" class=\"headerlink\" title=\"4.2.1 加载配置\"></a>4.2.1 加载配置</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f mirrorsync.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"五、-TLS加密（自签名-权威证书）\"><a href=\"#五、-TLS加密（自签名-权威证书）\" class=\"headerlink\" title=\"五、 TLS加密（自签名&#x2F;权威证书）\"></a>五、 TLS加密（自签名&#x2F;权威证书）</h2><p>（自签名证书加密连接 nextcloud 失败，使用不便，采用 权威证书（多域合一）或stunnel）</p>\n<h3 id=\"5-1-CA中心创建证书\"><a href=\"#5-1-CA中心创建证书\" class=\"headerlink\" title=\"5.1 CA中心创建证书\"></a>5.1 CA中心创建证书</h3><pre><code>此时使用LDAP 主服务器 作为 CA 中心，自签名\n</code></pre>\n<ul>\n<li><p>安装 gnutls-bin 和 ssl-cert 包</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt install gnutls-bin ssl-cert<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>为证书授权中心创建私钥</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo certtool --generate-privkey --bits 4096 --outfile &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>创建模板文件来定义CA</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ssl&#x2F;ca.info\n\t cn &#x3D; example (example company)  \n\t ca\n\t cert_signing_key\n\t expiration_days &#x3D; 3650<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>创建自签名 CA (根)证书</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo certtool --generate-self-signed \\\n--load-privkey &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem \\\n--template &#x2F;etc&#x2F;ssl&#x2F;ca.info \\\n--outfile &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>Note：<br>  <code>--outfile</code>路径是正确的，将CA证书写入<code>/usr/local/share/ca-certificates</code>。<br>  <strong>update-ca-certificates</strong> 将从这里获取受信任的本地CA。如果要从<code>/usr/share/ca-certificates</code>获取CA，需要调用<code>dpkg-reconfigure ca-certificates</code></p>\n</li>\n<li><p>将新的 CA 根证书添加到受信任 CA 列表</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo update-ca-certificates     # 会创建一个&#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem符号链接，指向&#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates中的真实文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"5-2-创建-LDAP-服务的服务器私钥与证书\"><a href=\"#5-2-创建-LDAP-服务的服务器私钥与证书\" class=\"headerlink\" title=\"5.2 创建 LDAP 服务的服务器私钥与证书\"></a>5.2 创建 LDAP 服务的服务器私钥与证书</h3><ul>\n<li><p>创建私钥</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo certtool --generate-privkey \\\n--bits 2048 \\\n--outfile &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li><p>服务器信息文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ssl&#x2F;ldap01.info\n\torganization &#x3D; example\n\tcn &#x3D; ldap01.example.top                     # 服务器证书的DN必须使用CN属性来命名服务器，并且CN必须携带服务器的完全限定域名，dns 需要有 A 记录解析\n\ttls_www_server\n\tencryption_key\n\tsigning_key\n\texpiration_days &#x3D; 365\n证书有效期为1年，仅对_&#96;ldap01&#96;_主机名有效<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>创建LDAP服务器的证书</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo certtool --generate-certificate \\\n--load-privkey &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem \\\n--load-ca-certificate &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem \\\n--load-ca-privkey &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem \\\n--template &#x2F;etc&#x2F;ssl&#x2F;ldap01.info \\\n--outfile &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_cert.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>调整权限</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo chgrp openldap &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem\nsudo chmod 0640 &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>ca根证书加入到受信列表</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo cp   cacertificatefile  &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crt\nsudo update-ca-certificates<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>对LDAP服务配置证书</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;config\nadd: olcTLSCACertificateFile\nolcTLSCACertificateFile: &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem\n-\nadd: olcTLSCertificateFile\nolcTLSCertificateFile: &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_cert.pem\n-\nadd: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>配置slapd-config数据库：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f certinfo.ldif <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>报错调整，更改<code>certinfo.ldif</code>，将<code>add</code>改成了<code>replace</code>，可以解决以下问题。修改后再次执行<code>ldapmodify</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f certinfo.ldif \n\tSASL&#x2F;EXTERNAL authentication started SASL username: gidNumber&#x3D;0+uidNumber&#x3D;0,cn&#x3D;peercred,cn&#x3D;external,cn&#x3D;auth \n\tSASL SSF: 0 \n\tmodifying entry &quot;cn&#x3D;config&quot; ldap_modify: Inappropriate matching (18) \n\tadditional info: modify&#x2F;add: olcTLSCACertificateFile: no equality matching rule<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>ldap-client增添配置文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;ldap.conf\n\t# LDAP Defaults\n\t# See ldap.conf(5) for details\n\t# This file should be world readable but not world writable.\t\n\tBASE       dc&#x3D;example,dc&#x3D;top                                                      # LDAP服务的基础DN\n\tURI ldap:&#x2F;&#x2F;localhost:389 ldaps:&#x2F;&#x2F;localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径\n\tTLS_REQCERT demand                                                        # &quot;demand&quot;，表示需要验证服务器的证书<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>需要访问 LDAPS（LDAP over SSL），需要编辑配置，并重启 slapd</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;default&#x2F;slapd\n\tSLAPD_SERVICES&#x3D;&quot;ldap:&#x2F;&#x2F;&#x2F; ldapi:&#x2F;&#x2F;&#x2F; ldaps:&#x2F;&#x2F;&#x2F;&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>测试启动 TLS</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapwhoami -x -ZZ -H ldap:&#x2F;&#x2F;ldap01.example.com\nanonymous<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>测试连接</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapwhoami -x -H ldaps:&#x2F;&#x2F;ldap01.example.com\nanonymous<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"5-3-LDAP-从服务器的-TLS-在主服务器创建后，拷贝证书到从服务器\"><a href=\"#5-3-LDAP-从服务器的-TLS-在主服务器创建后，拷贝证书到从服务器\" class=\"headerlink\" title=\"5.3 LDAP 从服务器的 TLS, 在主服务器创建后，拷贝证书到从服务器\"></a>5.3 LDAP 从服务器的 TLS, 在主服务器创建后，拷贝证书到从服务器</h3><ul>\n<li>指定目录保存<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir ldap02-ssl\ncd ldap02-ssl\ncerttool --generate-privkey \\\n--bits 2048 \\\n--outfile ldap02_slapd_key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>编辑信息文件ldap02.info<pre class=\"line-numbers language-none\"><code class=\"language-none\">organization &#x3D; example\ncn &#x3D; ldap02.example.top                      \ntls_www_server\nencryption_key\nsigning_key\nexpiration_days &#x3D; 365<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>创建证书<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo certtool --generate-certificate \\\n--load-privkey ldap02_slapd_key.pem \\\n--load-ca-certificate &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem \\\n--load-ca-privkey &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem \\\n--template ldap02.info \\\n--outfile ldap02_slapd_cert.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cp &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem .\nscp -r ldap02-ssl user@ldap02_ip:<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>从服务器中安装证书<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo cp ldap02_slapd_cert.pem ldap02_slapd_key.pem &#x2F;etc&#x2F;ldap\nsudo chgrp openldap &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_key.pem\nsudo chmod 0640 &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_key.pem\nsudo cp mycacert.pem &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crt\nsudo update-ca-certificates<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>对LDAP服务配置证书 <code>./certinfo.ldif </code><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;config\nadd: olcTLSCACertificateFile\nolcTLSCACertificateFile: &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem\n-\nadd: olcTLSCertificateFile\nolcTLSCertificateFile: &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_cert.pem\n-\nadd: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>配置slapd-config数据库：<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f certinfo.ldif <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>增添配置文件<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;ldap.conf\n\tBASE       dc&#x3D;example,dc&#x3D;top                                                      # LDAP服务的基础DN\n\tURI ldap:&#x2F;&#x2F;localhost:389 ldaps:&#x2F;&#x2F;localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径\n\tTLS_REQCERT demand                                                        # &quot;demand&quot;，表示需要验证服务器的证书<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>需要访问 LDAPS（LDAP over SSL），需要编辑配置，并重启 slapd<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;default&#x2F;slapd\n\tSLAPD_SERVICES&#x3D;&quot;ldap:&#x2F;&#x2F;&#x2F; ldapi:&#x2F;&#x2F;&#x2F; ldaps:&#x2F;&#x2F;&#x2F;&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>测试启动 TLS<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapwhoami -x -ZZ -H ldap:&#x2F;&#x2F;ldap02.example.top\nanonymous<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>测试连接<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapwhoami -x -H ldaps:&#x2F;&#x2F;ldap02.example.top\nanonymous<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"5-4-使用合法证书\"><a href=\"#5-4-使用合法证书\" class=\"headerlink\" title=\"5.4 使用合法证书\"></a>5.4 使用合法证书</h3><ul>\n<li><p>将新的 CA 根证书添加到受信任 CA 列表（客户端操作，权威证书按理不需要拷贝，未测试）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo   cp   _.example.top-chain.pem   &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crt\nsudo update-ca-certificates<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>准备服务器证书和私钥（服务端）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"> ls &#x2F;etc&#x2F;ldap\n\tcertinfo.ldif   _.example.top-crt.pem   _.example.top-key.pem\nsudo chgrp openldap &#x2F;etc&#x2F;ldap&#x2F;_.example.top-key.pem\nsudo chmod 0640 &#x2F;etc&#x2F;ldap&#x2F;_.example.top-key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>certinfo.ldif</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;config\nchangetype: modify\nreplace: olcTLSCACertificateFile\nolcTLSCACertificateFile: &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem\n-\nreplace: olcTLSCertificateFile\nolcTLSCertificateFile: &#x2F;etc&#x2F;ldap&#x2F;_.example.top-crt.pem\n-\nreplace: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: &#x2F;etc&#x2F;ldap&#x2F;_.example.top-key.pem\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo ldapadd  -Y   EXTERNAL  -H  ldapi:&#x2F;&#x2F;&#x2F;   -f    certinfo.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<ul>\n<li>增添配置文件，这是客户端需要连接 ldap 服务器使用的配置。可以忽略。<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;ldap.conf\n\tBASE       dc&#x3D;example,dc&#x3D;top                                                      # LDAP服务的基础DN\n\t[[URI]] ldap:&#x2F;&#x2F;localhost:389 ldaps:&#x2F;&#x2F;localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用\n\t[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制\n\t[[TIMELIMIT]]  15                                                                     # 最长搜索时间\n\t[[DEREF]]              never                                                            # 指定对别名的处理方式\n\t# TLS certificates (needed for GnuTLS)\n\tTLS_CACERT  &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径，必需\n\tTLS_REQCERT allow                                                      # &quot;demand&quot;，表示需要验证服务器的证书<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>启用 ldaps，重启 slapd<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;default&#x2F;slapd\n\tSLAPD_SERVICES&#x3D;&quot;ldap:&#x2F;&#x2F;&#x2F; ldapi:&#x2F;&#x2F;&#x2F; ldaps:&#x2F;&#x2F;&#x2F;&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"5-5-使用-nextcloud-测试加密连接\"><a href=\"#5-5-使用-nextcloud-测试加密连接\" class=\"headerlink\" title=\"5.5 使用 nextcloud 测试加密连接\"></a>5.5 使用 nextcloud 测试加密连接</h3><ul>\n<li><p>docker 安装 nexcloud，登录 UI ，右上角点击账户，选择应用</p>\n</li>\n<li><p>应用捆绑包，启用 LDAP user and group backend</p>\n</li>\n<li><p>设置连接</p>\n</li>\n<li><p>ldaps连接(严格一致才是tls加密，nextcloud应该只信任权威证书)</p>\n</li>\n<li><p>明文传输</p>\n</li>\n</ul>\n<h3 id=\"5-6-stunnel-加密传输两个应用的数据-例：phpldapadmin\"><a href=\"#5-6-stunnel-加密传输两个应用的数据-例：phpldapadmin\" class=\"headerlink\" title=\"5.6 stunnel 加密传输两个应用的数据(例：phpldapadmin)\"></a>5.6 stunnel 加密传输两个应用的数据(例：phpldapadmin)</h3><p>链路： ldap user ui  —- stunnel client  accept  —-  stunnel client connect  —- stunnel server accept  —- stunnel server connect —-ldap server port</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">apt install -y stunnel4\nvim &#x2F;etc&#x2F;default&#x2F;stunnel4\n\tENABLED&#x3D;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># stunnel 服务端\n\tcert &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem\n\tkey &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel-key.pem\n\tverify &#x3D; 3\n\tclient &#x3D; no\n\tdebug &#x3D; 6\n\tpid &#x3D; &#x2F;var&#x2F;run&#x2F;stunnel4&#x2F;stunnel4.pid\n\t\n\t[ldap]\n\taccept &#x3D; 10.13.3.106:6360                # 监听 stunnel 服务的流量，客户端（是指stunnel 客户端）将连接此目标并发送流量到这里\n\tconnect &#x3D; 10.13.3.106:389                # 转发到 stunnel 加密连接的服务的端口\n\tCAfile &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem\n\n# stunnel 客户端\n\tcert &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem\n\tkey &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel-key.pem\n\tverify &#x3D; 3\n\tclient &#x3D; yes\n\tdebug &#x3D; 6\n\tsetuid &#x3D; stunnel4\n\tsetgid &#x3D; stunnel4\n\tpid &#x3D; &#x2F;var&#x2F;run&#x2F;stunnel4&#x2F;stunnel4.pid\n\t\n\t[ldap]\n\taccept &#x3D; 10.13.3.107:389                # 监听 stunnel 服务的流量，客户端（是指ldap的客户端）将连接此目标并发送流量到这里\n\tconnect &#x3D; 10.13.3.106:6360              # 加密连接并转发到 stunnel 的服务端\n\tCAfile &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;phpldapadmin&#x2F;config.php\n\t$servers-&gt;setValue(&#39;server&#39;,&#39;host&#39;,&#39;69.87.216.102&#39;);  # 指向 stunnel 客户端，和他本地监听的端口\n\t$servers-&gt;setValue(&#39;server&#39;,&#39;port&#39;,389);\t<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"六、-其他模块\"><a href=\"#六、-其他模块\" class=\"headerlink\" title=\"六、 其他模块\"></a>六、 其他模块</h2><h3 id=\"6-1-日志模块\"><a href=\"#6-1-日志模块\" class=\"headerlink\" title=\"6.1 日志模块\"></a>6.1 日志模块</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;loglevel.ldif\n\tdn: cn&#x3D;config\n\tchangetype: modify\n\treplace: olcLogLevel\n\tolcLogLevel: stats\n\nldapmodify  -Y  EXTERNAL  -H  ldapi:&#x2F;&#x2F;&#x2F;  -f  loglevel.ldif               # 日志在&#x2F;var&#x2F;log&#x2F;syslog | grep slapd , 比默认的级别详细<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"6-2-memberOf-开启\"><a href=\"#6-2-memberOf-开启\" class=\"headerlink\" title=\"6.2 memberOf 开启\"></a>6.2 memberOf 开启</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;refint.ldif\n\t# enable_refint.ldif\n\tdn: cn&#x3D;module&#123;0&#125;,cn&#x3D;config\n\tchangetype: modify\n\tadd: olcModuleLoad\n\tolcModuleLoad: refint.la\n\t-\n\tdn: olcOverlay&#x3D;refint,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\n\tchangetype: add\n\tobjectClass: olcOverlayConfig\n\tobjectClass: olcRefintConfig\n\tolcOverlay: refint\n\nldapadd -Q -Y EXTERNAL -H ldapi:&#x2F;&#x2F; -f refint.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;etc&#x2F;ldap&#x2F;memberof.ldif\n\tdn: cn&#x3D;module,cn&#x3D;config\n\tchangetype: add\n\tcn: module\n\tobjectClass: olcModuleList\n\tolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldap\n\t\n\tdn: cn&#x3D;module&#123;0&#125;,cn&#x3D;config\n\tchangetype: modify\n\tadd: olcModuleLoad\n\tolcModuleLoad: memberof.la\n\t\n\tdn: olcOverlay&#x3D;memberof,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\n\tchangetype: add\n\tobjectClass: olcConfig\n\tobjectClass: olcMemberOf\n\tobjectClass: olcOverlayConfig\n\tobjectClass: top\n\tolcOverlay: memberof\n\tolcMemberOfDangling: ignore\n\tolcMemberOfRefInt: TRUE\n\tolcMemberOfGroupOC: groupOfNames\n\tolcMemberOfMemberAD: member\n\tolcMemberOfMemberOfAD: memberOf\n\nldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f memberof.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>为条目添加此属性：LDIF文件中先创建用户的dn，然后创建目标组的dn，在创建组的时候将关联的用户写在member属性中</li>\n</ul>\n<h3 id=\"6-3-Self-Service-Password-自助密码管理\"><a href=\"#6-3-Self-Service-Password-自助密码管理\" class=\"headerlink\" title=\"6.3 Self Service Password 自助密码管理\"></a>6.3 Self Service Password 自助密码管理</h3><ul>\n<li>容器部署，解决 php 依赖准备繁琐</li>\n<li>镜像 ltbproject&#x2F;self-service-password:1.5.3</li>\n<li>为 admin 用户设置修改密码的权限<pre class=\"line-numbers language-none\"><code class=\"language-none\">下列权限可以使得 &quot;admin,example,net&quot; 对这个域 &quot;dc&#x3D;example,dc&#x3D;tech&quot; 做用户添加、属性修改\nolcAccess: &#123;0&#125;to attrs&#x3D;userPassword,shadowLastChange by dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write by anonymous auth by self write by * none\nolcAccess: &#123;1&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;tech&quot; by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>需要对企业邮箱帐号开启设置-帐号与安全-客户端设置-客户端授权密码</li>\n<li>ssp.conf.php  成功配置版本，并映射到容器： &#x2F;home&#x2F;example&#x2F;sspasswd&#x2F;conf.php:&#x2F;var&#x2F;www&#x2F;conf&#x2F;config.inc.local.php<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$debug &#x3D; false;\n$keyphrase &#x3D; &quot;example&quot;;\n$use_sms &#x3D; false;\n$use_questions &#x3D; false;\n$lang &#x3D; &quot;cn,zh-CN&quot;;\n$use_change &#x3D; true;\n#$reset_url &#x3D; $_SERVER[&#39;HTTP_X_FORWARDED_PROTO&#39;] . &quot;:&#x2F;&#x2F;&quot; . $_SERVER[&#39;HTTP_X_FORWARDED_HOST&#39;] . $_SERVER[&#39;SCRIPT_NAME&#39;];\n$reset_url &#x3D; &quot;https:&#x2F;&#x2F;ssp.example.net&quot; . $_SERVER[&#39;HTTP_X_FORWARDED_HOST&#39;] . $_SERVER[&#39;SCRIPT_NAME&#39;];\n$show_menu &#x3D; false;\n$logo &#x3D; &quot;images&#x2F;logo.png&quot;;                # 这两项在配置前，需要确保图片映射路径在容器内部的 &#x2F;var&#x2F;www&#x2F;html&#x2F;images 下\n$background_image &#x3D; &quot;images&#x2F;back.png&quot;;\n$default_action &#x3D; &quot;sendtoken&quot;;        # 默认展示在首页的修改密码的方式\n$show_menu &#x3D; false;              # 关闭顶部的修改方式选择菜单\n\n# LDAP\n\n$ldap_url &#x3D; &quot;ldap:&#x2F;&#x2F;10.13.3.107&#x2F;&quot;;\n$ldap_starttls &#x3D; false;\n$ldap_binddn &#x3D; &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot;;\n$ldap_bindpw &#x3D; &#39;example@2020&#39;;\n#$ldap_bindpw &#x3D; &quot;&#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi&quot;;\n$ldap_base &#x3D; &quot;dc&#x3D;example,dc&#x3D;net&quot;;\n#$ldap_base &#x3D; &quot;dc&#x3D;example,dc&#x3D;tech&quot;;    # 在这里同时书写两个，只会生效后一个域, 使用两个实例连接 ldap 服务\n$ldap_fullname_attribute &#x3D; &quot;cn&quot;;\n$ldap_filter &#x3D; &quot;(&amp;(objectClass&#x3D;inetOrgPerson)($ldap_fullname_attribute&#x3D;&#123;login&#125;))&quot;;\n$ldap_use_exop_passwd &#x3D; false;\n$ldap_use_ppolicy_control &#x3D; false;\n$TLS_REQCERT &#x3D; &quot;allow&quot;;\n\n# email\n$mail_attributes &#x3D; array(&quot;mail&quot;, &quot;gosaMailAlternateAddress&quot;, &quot;proxyAddresses&quot;);\n$mail_address_use_ldap &#x3D; true;\n$mail_from &#x3D; &quot;user5@example.net&quot;;\n$mail_from_name &#x3D; &quot;密码自主修改服务&quot;;\n$mail_signature &#x3D; &quot;如有疑问,请联系运维同事,英博智云.&quot;;\n$notify_on_change &#x3D; false;\n$mail_protocol &#x3D; &#39;smtp&#39;;\n$mail_smtp_host &#x3D; &#39;smtphz.qiye.163.com&#39;;\n$mail_smtp_auth &#x3D; true;\n$mail_smtp_user &#x3D; &quot;user5@example.net&quot;;\n$mail_smtp_pass &#x3D; &#39;TdhYDdgvN7Hpky5a&#39;;\n$mail_smtp_port &#x3D; 465;\n$mail_smtp_timeout &#x3D; 30;\n$mail_smtp_keepalive &#x3D; false;\n$mail_smtp_secure &#x3D; &#39;ssl&#39;;\n$mail_smtp_autotls &#x3D; false;\n$mail_smtp_options &#x3D; array();\n$mail_contenttype &#x3D; &#39;text&#x2F;plain&#39;;\n$mail_wordwrap &#x3D; 0;\n$mail_charset &#x3D; &#39;utf-8&#39;;\n$mail_priority &#x3D; 3;\n\n# password policy\n$hash &#x3D; &quot;SSHA&quot;; # 修改的用户密码传递过程中会采取这里指定的加密\n$pwd_min_length &#x3D; 8;\n$pwd_max_length &#x3D; 20;\n$pwd_min_lower &#x3D; 1;\n$pwd_min_upper &#x3D; 1;\n$pwd_min_digit &#x3D; 1;\n$pwd_min_special &#x3D; 1;\n$pwd_special_chars &#x3D; &quot;^a-zA-Z0-9&quot;;\n$pwd_complexity &#x3D; 4;\n$pwd_no_reuse &#x3D; true;\n$pwd_forbidden_words &#x3D; array(&quot;example&quot;, &quot;example&quot;, &quot;example&quot;, &quot;password&quot;);\n$pwd_show_policy_pos &#x3D; &quot;above&quot;;\n$pwd_show_policy &#x3D; &quot;onerror&quot;;\n?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker run -p 8000:80 \\\n&gt; --restart&#x3D;always \\\n&gt; --name sspass \\\n&gt; -v &#x2F;home&#x2F;example&#x2F;sspasswd&#x2F;conf.php:&#x2F;var&#x2F;www&#x2F;conf&#x2F;config.inc.local.php \\\n&gt; -itd docker.io&#x2F;ltbproject&#x2F;self-service-password<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6-3-1-不能进入修改链接-Token-is-not-valid\"><a href=\"#6-3-1-不能进入修改链接-Token-is-not-valid\" class=\"headerlink\" title=\"6.3.1 不能进入修改链接 Token is not valid\"></a>6.3.1 不能进入修改链接 Token is not valid</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">注释了这两项\n#$use_tokens &#x3D; true;\n#$crypt_tokens &#x3D; true;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"6-3-2-反向代理-Self-Service-Password\"><a href=\"#6-3-2-反向代理-Self-Service-Password\" class=\"headerlink\" title=\"6.3.2 反向代理 Self Service Password\"></a>6.3.2 反向代理 Self Service Password</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">upstream ssp &#123;\n  server 10.13.3.108:8000;\n&#125;\n\nserver &#123;\n    listen 80;\n    server_name ssp.example.net;\n    return 301 https:&#x2F;&#x2F;$server_name$request_uri;\n&#125;\nserver &#123;\n    listen 443 ssl ;\n    server_name ssp.example.net;\n    ssl_certificate webmin&#x2F;tls_ca.pem;\n    ssl_certificate_key webmin&#x2F;tls_key.pem;\n\n    location &#x2F; &#123;\n      proxy_pass http:&#x2F;&#x2F;ssp;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto &quot;https&quot;;\n      proxy_read_timeout 1800s;\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection &quot;upgrade&quot;;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"6-4-LDAP-对目录信息的数据做备份还原和迁移\"><a href=\"#6-4-LDAP-对目录信息的数据做备份还原和迁移\" class=\"headerlink\" title=\"6.4 LDAP 对目录信息的数据做备份还原和迁移\"></a>6.4 LDAP 对目录信息的数据做备份还原和迁移</h3><h4 id=\"6-4-1-备份\"><a href=\"#6-4-1-备份\" class=\"headerlink\" title=\"6.4.1 备份\"></a>6.4.1 备份</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo slapcat -n 3 -l .&#x2F;back3.ldif           # -n 指定数据库编号，数字对应各个dit的数据库编号( 配置数据库----olcDatabase&#x3D;&#123;0&#125;config.ldif; 目录信息数据库----olcDatabase&#x3D;&#123;1&#125;mdb.ldif )<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"6-4-2-恢复\"><a href=\"#6-4-2-恢复\" class=\"headerlink\" title=\"6.4.2 恢复\"></a>6.4.2 恢复</h4><p>原服务器上恢复，服务需要暂停</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo systemctl stop slapd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>配置目录一般位于 <code>/etc/openldap/slapd.d</code>，将原有配置删除，然后使用 <code>slapadd</code> 导入新的配置</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ rm -rf &#x2F;etc&#x2F;ldap&#x2F;slapd.d&#x2F;*\n$ slapadd  -n  0  -F  &#x2F;etc&#x2F;ldap&#x2F;slapd.d  -l  .&#x2F;config.2021-09-18.ldif\n$ chown -R openldap:openldap &#x2F;etc&#x2F;ldap&#x2F;slapd.d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>数据目录一般位于 <code>/var/lib/ldap-*</code>，模拟时，将原有数据删除，然后使用 <code>slapadd</code> 导入新的数据：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ rm  -rf  &#x2F;var&#x2F;lib&#x2F;ldap-example&#x2F;*         # 定制了不同的$default_action &#x3D; &quot;sendtoken&quot;;\n$show_menu &#x3D; false;dit有不同的目录分别存储不同domain的内容，注意，导入前目录必需首先存在，且权属 openldap:openldap。\n$ slapadd -n 1 -F &#x2F;etc&#x2F;openldap&#x2F;slapd.d -l .&#x2F;data.2021-09-18.ldif\n$ chown -R openldap:openldap  &#x2F;var&#x2F;lib&#x2F;ldap-example\n$ systemctl start slapd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"6-4-3-openldap的迁移\"><a href=\"#6-4-3-openldap的迁移\" class=\"headerlink\" title=\"6.4.3 openldap的迁移\"></a>6.4.3 openldap的迁移</h4><p>playbook 新建的服务器，执行恢复</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">slapadd -n 1 -F &#x2F;etc&#x2F;openldap&#x2F;slapd.d -l .&#x2F;data.2021-09-18.ldif\n\n[[如果导入失败，或者数据已存在，删除rm]] -rf &#x2F;var&#x2F;lib&#x2F;ldap&#x2F;*  重新导入<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"七、-命令资料\"><a href=\"#七、-命令资料\" class=\"headerlink\" title=\"七、 命令资料\"></a>七、 命令资料</h2><blockquote>\n<p><a href=\"https://blog.csdn.net/jenyzhang/article/details/56487627\">来自此处</a><br>ldap<br>    |-slapd             目录服务的主要程序<br>    |-slurpd           目录服务进行复制的程序<br>    |-slapadd           向目录中添加数据<br>    |-slapcat           把目录中的条目导出成ldif文件<br>    |-slapindex         重建目录的索引<br>    |-ldapcompare       对目录的条目的属性进行比较<br>    |-ldapadd           向目录服务中添加条目<br>    |-ldapdelete        删除目录中的条目<br>    |-ldapmodify        更新目录中条目的值<br>    |-ldapmodrdn        更改条目的DN<br>    |-ldappasswd        更改条目的密码<br>    |-ldapsearch        对目录进行查询</p>\n</blockquote>\n<blockquote>\n<p>ldapadd<br>      -x   进行简单认证<br>      -D   用来绑定服务器的DN<br>      -h   目录服务的地址<br>      -w   绑定DN的密码<br>      -f   使用ldif文件进行条目添加的文件  \n      </p>\n</blockquote>\n<ul>\n<li>例子<br>       ldapadd -x -D “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” -w secret -f &#x2F;root&#x2F;test.ldif<br>       ldapadd -x -D “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” -w secret (这样写就是在命令行添加条目)</li>\n</ul>\n<p>       </p>\n<blockquote>\n<p>ldapsearch<br>      -x   进行简单认证<br>      -D   用来绑定服务器的DN<br>      -w   绑定DN的密码<br>      -b   指定要查询的根节点<br>      -H   制定要查询的服务器<br>      -s   指定搜索范围的类型\n     </p>\n</blockquote>\n<ul>\n<li>例子<br>   ldapsearch -x -D “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” -w secret -b “dc&#x3D;starxing,dc&#x3D;com”<br>       使用简单认证，用 “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” 进行绑定，<br>       要查询的根是 “dc&#x3D;starxing,dc&#x3D;com”。这样会把绑定的用户能访问”dc&#x3D;starxing,dc&#x3D;com”下的所有数据显示出来。<br> ldapsearch -x -W -D “cn&#x3D;administrator,cn&#x3D;users,dc&#x3D;osdn,dc&#x3D;zzti,dc&#x3D;edu,dc&#x3D;cn” -b “cn&#x3D;administrator,cn&#x3D;users,dc&#x3D;osdn,dc&#x3D;zzti,dc&#x3D;edu,dc&#x3D;cn” -h troy.osdn.zzti.edu.cn<br>   ldapsearch -b “dc&#x3D;canon-is,dc&#x3D;jp” -H ldaps:&#x2F;&#x2F;192.168.0.92:636<br> (需要修改openldap客户端的配置文件ldap.conf,参考：<a href=\"http://ms.ntcb.edu.tw/~steven/l-penguin.s/article/ldap-5.htm\">http://ms.ntcb.edu.tw/~steven/l-penguin.s/article/ldap-5.htm</a>)</li>\n</ul>\n<blockquote>\n<p>ldapdelete <br>      ldapdelete -x -D “cn&#x3D;Manager,dc&#x3D;test,dc&#x3D;com” -w secret “uid&#x3D;test1,ou&#x3D;People,dc&#x3D;test,dc&#x3D;com”<br>      ldapdelete -x -D ‘cn&#x3D;root,dc&#x3D;it,dc&#x3D;com’ -w secert ‘uid&#x3D;zyx,dc&#x3D;it,dc&#x3D;com’<br>      这样就可以删除’uid&#x3D;zyx,dc&#x3D;it,dc&#x3D;com’记录了，应该注意一点，其下有子条目的不能删除  </p>\n</blockquote>\n<ul>\n<li><p>例子1  递归删除所有：<br>ldapdelete -x -D ‘cn&#x3D;administrator,dc&#x3D;example,dc&#x3D;net’ -w example@2020 -r “ou&#x3D;example,dc&#x3D;example,dc&#x3D;net”</p>\n</li>\n<li><p>例子2  删除一个acl策略。acl-dele.ldif<br> dn: olcDatabase&#x3D;{3}mdb,cn&#x3D;config<br> delete: olcAccess<br> olcAccess: {2}<br> olcAccess: {3}<br> olcAccess: {4}<br> ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f acl-dele.ldif</p>\n</li>\n</ul>\n<blockquote>\n<p>ldappasswd<br>    -x   进行简单认证<br>    -D   用来绑定服务器的DN<br>    -w   绑定DN的密码<br>    -S   提示的输入密码<br>    -s pass 把密码设置为pass<br>    -a pass 设置old passwd为pass<br>    -A   提示的设置old passwd<br>    -H   是指要绑定的服务器<br>    -I   使用sasl会话方式  \n    </p>\n</blockquote>\n<ul>\n<li>例子<br>    ldappasswd -x -D ‘cm&#x3D;root,dc&#x3D;it,dc&#x3D;com’ -w secret ‘uid&#x3D;zyx,dc&#x3D;it,dc&#x3D;com’ -S<br>       New password:<br>       Re-enter new password:<br>       就可以更改密码了，如果原来记录中没有密码，将会自动生成一个userPassword。</li>\n</ul>\n<p>    </p>\n<blockquote>\n<p>ldapmodify<br>     -a 添加新的条目.缺省的是修改存在的条目.<br>     -C 自动追踪引用.<br>     -c 出错后继续执行程序并不中止.缺省情况下出错的立即停止.比如如果你的ldif 文件内的某个条目在<a href=\"http://lib.csdn.net/base/mysql\" title=\"MySQL知识库\">数据库</a>内并不存在,缺省情况下程序立即退出,但如果使用了该参数,程序忽略该错误继续执行.<br>     -n 用于调试到服务器的通讯.但并不实际执行搜索.服务器关闭时,返回错误；服务器<br>       打开时,常和-v 参数一起<a href=\"http://lib.csdn.net/base/softwaretest\" title=\"软件测试知识库\">测试</a>到服务器是否是一条通路.<br>     -v 运行在详细模块.在标准输出中打出一些比较详细的信息.比如:连接到服务器的<br>       ip 地址和端口号等.<br>     -M  打开 manage DSA IT 控制. -MM 把该控制设置为重要的.<br>     -f file 从文件内读取条目的修改信息而不是从标准输入读取.<br>    -x 使用简单认证.<br>    -D binddn 指定搜索的用户名(一般为一dn 值).<br>    -W 指定了该参数,系统将弹出一提示入用户的密码.它和-w 参数相对使用.<br>    -w bindpasswd 直接指定用户的密码. 它和-W 参数相对使用.<br>    -H ldapuri 指定连接到服务器uri(ip 地址和端口号,常见格式为 ldap:&#x2F;&#x2F;hostname:port ).如果使用了-H 就不能使用-h 和-p 参数.<br>    -h ldaphost 指定要连接的主机的名称&#x2F;ip 地址.它和-p 一起使用<br>    -p ldapport 指定要连接目录服务器的端口号.它和-h 一起使用，如果使用了-h 和-p 参数就不能使用-H 参数.<br>    -Z 使用StartTLS 扩展操作.如果使用-ZZ,命令强制使用StartTLS 握手成功.<br>    -V 启用证书认证功能,目录服务器使用客户端证书进行身份验证,必须与-ZZ 强制启用<br>       TLS 方式配合使用,并且匿名绑定到目录服务器.<br>    -e 设置客户端证书文件,例: -e cert&#x2F;client.crt<br>    -E 设置客户端证书私钥文件,例: -E cert&#x2F;client.key  </p>\n</blockquote>\n<ul>\n<li>例子<br>ldapmodify -x -D “cn&#x3D;root,dc&#x3D;it,dc&#x3D;com” -W -f modify.ldif    #   将modify.ldif中的记录更新原有的记录。</li>\n</ul>\n<h2 id=\"八、-参考链接\"><a href=\"#八、-参考链接\" class=\"headerlink\" title=\"八、 参考链接\"></a>八、 参考链接</h2><p><a href=\"https://github.com/jt6562/LDAP-read-notes/blob/master/ldap-guide/OpenLDAP%E7%AE%A1%E7%90%86%E5%91%98%E6%89%8B%E5%86%8C.md\">指南</a><br><a href=\"https://www.cnblogs.com/kevingrace/p/5773974.html\">知识总结</a><br><a href=\"https://www.cnblogs.com/js1314/p/12887893.html\">参考1</a><br><a href=\"https://cloud.tencent.com/developer/article/1932586\">参考2</a><br><a href=\"https://blog.csdn.net/u011607971/article/details/121126289?spm=1001.2014.3001.5501#t3\">参考3</a><br><a href=\"https://ubuntu.com/server/docs/service-ldap-with-tls\">Ubuntu wiki</a><br><a href=\"https://www.cnblogs.com/shu-sheng/p/14450815.html\">tls参考1</a><br><a href=\"https://hmli.ustc.edu.cn/doc/linux/ubuntu-ldap/ubuntu-ldap.html#id14\">tls参考2</a><br><a href=\"https://zhuanlan.zhihu.com/p/643010354\">tls参考3</a></p>\n<h2 id=\"九、问题：\"><a href=\"#九、问题：\" class=\"headerlink\" title=\"九、问题：\"></a>九、问题：</h2><h3 id=\"9-1-从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果\"><a href=\"#9-1-从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果\" class=\"headerlink\" title=\"9.1 从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果\"></a>9.1 从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果</h3><h3 id=\"9-2-日志功能开启失败\"><a href=\"#9-2-日志功能开启失败\" class=\"headerlink\" title=\"9.2 日志功能开启失败\"></a>9.2 日志功能开启失败</h3><pre><code>已经调整日志级别，在系统日志中查看并grep\n</code></pre>\n<h3 id=\"9-3-证书缺失-只能使用ldap01-这个信息查询）\"><a href=\"#9-3-证书缺失-只能使用ldap01-这个信息查询）\" class=\"headerlink\" title=\"9.3 证书缺失(只能使用ldap01,这个信息查询）\"></a>9.3 证书缺失(只能使用ldap01,这个信息查询）</h3><pre><code>采取使用权威证书\n</code></pre>\n<h3 id=\"9-4-重启slap报错-tls-init-failed\"><a href=\"#9-4-重启slap报错-tls-init-failed\" class=\"headerlink\" title=\"9.4 重启slap报错 tls init   failed\"></a>9.4 重启slap报错 tls init   failed</h3><pre><code>解决办法：重新生成证书\n</code></pre>\n<h3 id=\"9-5-报错-ldap-start-tls-Connect-error-11-n-additional-info-unknown-error-code\"><a href=\"#9-5-报错-ldap-start-tls-Connect-error-11-n-additional-info-unknown-error-code\" class=\"headerlink\" title=\"9.5 报错 ldap_start_tls: Connect error (-11)    \\n    additional info: (unknown error code)\"></a>9.5 报错 ldap_start_tls: Connect error (-11)    \\n    additional info: (unknown error code)</h3><pre><code>可能是由于服务器证书的通用名（Common Name）字段是否与主机名不一致，请检查主机名和服务器证书\n</code></pre>\n<h3 id=\"9-6-连接问题\"><a href=\"#9-6-连接问题\" class=\"headerlink\" title=\"9.6 连接问题\"></a>9.6 连接问题</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldaps:&#x2F;&#x2F;ldap.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W            # 在服务器本机执行此查询的报错。但是在另一个机器可以成功查询\n\tldap_sasl_bind(SIMPLE): Can&#39;t contact LDAP server (-1)                                 # 配置 ldap.conf 之后成功解决并有输出 tls&#x3D;demand&#x2F;allow----作用是证书检查<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"9-7-在多域的使用中，不能正常添加子条目，出现“shadow-context-no-update-referral”\"><a href=\"#9-7-在多域的使用中，不能正常添加子条目，出现“shadow-context-no-update-referral”\" class=\"headerlink\" title=\"9.7 在多域的使用中，不能正常添加子条目，出现“shadow context; no update referral”\"></a>9.7 在多域的使用中，不能正常添加子条目，出现“shadow context; no update referral”</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">1. 首先尝试重新部署，发现执行镜像复制的剧本之前可以正常创建所有的条目\n    解决：在mirror mode 开启时，需要指定相应的数据库\n2.  shadow context; no update referral  根本原因是需要检查权限<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"9-8-使用的脚本一致，测试环境和生产环境结果不一致-主要是不能长时间正常保持客户端连接并查询\"><a href=\"#9-8-使用的脚本一致，测试环境和生产环境结果不一致-主要是不能长时间正常保持客户端连接并查询\" class=\"headerlink\" title=\"9.8 使用的脚本一致，测试环境和生产环境结果不一致; 主要是不能长时间正常保持客户端连接并查询\"></a>9.8 使用的脚本一致，测试环境和生产环境结果不一致; 主要是不能长时间正常保持客户端连接并查询</h3><ul>\n<li>脚本中的组织信息ldif文件有问题，经测试不影响。</li>\n<li>memberOf，属性不可单独添加，通过 groupofNames 指定 member 之后会自动关联。已经修正使用方式，结果未改变。</li>\n<li>2204 系统和 2004 系统的slapd版本不一致（并没有影响）。</li>\n<li>将orgnization的任务和前一部分拆分，否则会出现读取不到 rootdn（手动测试是成功的）（然而脚本中修改后并没有解决这个问题）。</li>\n<li>将organization拆分，在此之前重启服务，未解决。</li>\n<li>将organization拆分，在此之前先重启虚拟机。（有效、怀疑是服务中某些连接的状态在ansible执行中没有更新）（仍然失效了，经过一夜之后失效）。</li>\n<li>另一台2204主机安装正常使用，怀疑虚拟机系统问题。</li>\n</ul>\n<h2 id=\"十、-验证\"><a href=\"#十、-验证\" class=\"headerlink\" title=\"十、 验证\"></a>十、 验证</h2><h3 id=\"10-1-检测连接命令：\"><a href=\"#10-1-检测连接命令：\" class=\"headerlink\" title=\"10.1 检测连接命令：\"></a>10.1 检测连接命令：</h3><p> ldaps:&#x2F;&#x2F;    —-ldap over ssl  使用636 ，从连接开始加密   ;        ldap:&#x2F;&#x2F;           —ldap_start_tls(-ZZ参数):    使用389，从传输开始加密</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldaps:&#x2F;&#x2F;ldap01.example.top:636 -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -s sub &quot;(objectClass&#x3D;person)&quot;\n\nldapsearch -H ldap:&#x2F;&#x2F;10.13.3.106  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -s sub &quot;(objectClass&#x3D;person)&quot;\n\nldapsearch -H ldap:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -s sub &quot;(objectClass&#x3D;person)&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"10-2-验证和日志\"><a href=\"#10-2-验证和日志\" class=\"headerlink\" title=\"10.2 验证和日志\"></a>10.2 验证和日志</h3><p>tag 101 应表明在查询; tag 97 是在认证</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldap:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W   -ZZ      #  启用了tls功能 ，-ZZ 参数，仍然是 389 端口，连接后在传输过程中加密\n\t\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:60674 (IP&#x3D;0.0.0.0:389)\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;0 EXT oid&#x3D;1.3.6.1.4.1.1466.20037\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;0 STARTTLS\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;0 RESULT oid&#x3D; err&#x3D;0 text&#x3D;\n\tSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 fd&#x3D;14 TLS established tls_ssf&#x3D;256 ssf&#x3D;256\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;1 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;1 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;1 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;2 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;2 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;6 text&#x3D;\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;3 UNBIND\n\tSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 fd&#x3D;14 closed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldap:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W        # 明文传输\n\t\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:37760 (IP&#x3D;0.0.0.0:389)\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;6 text&#x3D;\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;2 UNBIND\n\tSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 fd&#x3D;14 closed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldaps:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W        # 从连接就开始加密\n\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:58726 (IP&#x3D;0.0.0.0:636)\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 fd&#x3D;14 TLS established tls_ssf&#x3D;256 ssf&#x3D;256\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;6 text&#x3D;\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;2 UNBIND\n\tSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 fd&#x3D;14 closed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ldapsearch -H ldaps:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -ZZ\n\tldap_start_tls: Operations error (1)\n        additional info: TLS already started\n\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:39894 (IP&#x3D;0.0.0.0:636)\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 fd&#x3D;14 TLS established tls_ssf&#x3D;256 ssf&#x3D;256\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;0 EXT oid&#x3D;1.3.6.1.4.1.1466.20037\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;0 STARTTLS\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;0 RESULT oid&#x3D; err&#x3D;1 text&#x3D;TLS already started                # 证明二者冲突，不能同时开启\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;1 UNBIND\nSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 fd&#x3D;14 closed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十一、应用服务\"><a href=\"#十一、应用服务\" class=\"headerlink\" title=\"十一、应用服务\"></a>十一、应用服务</h2><h3 id=\"11-1-建立-ldap-管理-只读帐号\"><a href=\"#11-1-建立-ldap-管理-只读帐号\" class=\"headerlink\" title=\"11.1 建立 ldap 管理&#x2F;只读帐号\"></a>11.1 建立 ldap 管理&#x2F;只读帐号</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: cn&#x3D;admin,dc&#x3D;xxx,dc&#x3D;xx \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi  \n  \n-  \ndn: cn&#x3D;reader,dc&#x3D;xxx2,dc&#x3D;xx2  \nchangetype: add  \nobjectClass: simpleSecurityObject  \nobjectClass: organizationalRole  \ncn: admin  \nuserPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"11-2-详细的公司架构-ldif\"><a href=\"#11-2-详细的公司架构-ldif\" class=\"headerlink\" title=\"11.2 详细的公司架构 ldif\"></a>11.2 详细的公司架构 ldif</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example  \n  \ndn: ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-bod  \n  \ndn: cn&#x3D;user1,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user1  \ndepartmentnumber: 1  \ndisplayname: Zheng Yu  \nmail: user1@example.net  \nobjectclass: inetOrgPerson  \nsn: Zheng  \ntitle: President  \nuid: 10000  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-bod-admin  \nmember: cn&#x3D;user1,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-bus  \n  \ndn: cn&#x3D;user8,ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user8  \ndepartmentnumber: 2  \ndisplayname: Sun Minghong  \nmail: user8@example.net  \nobjectclass: inetOrgPerson  \nsn: Sun  \ntitle: Financial Manager  \nuid: 10001  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-bus-admin,ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-bus-admin  \nmember: cn&#x3D;user8,ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-sys  \n  \ndn: cn&#x3D;user2,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user2  \ndepartmentnumber: 3  \ndisplayname: Xie Jian  \nmail: user2@example.net  \nobjectclass: inetOrgPerson  \nsn: Xie  \ntitle: Senior Systems Engineer  \nuid: 10002  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-sys-admin  \nmember: cn&#x3D;user2,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: cn&#x3D;user5,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user5  \ndepartmentnumber: 3  \ndisplayname: Long Chao  \nmail: user5@example.net  \nobjectclass: inetOrgPerson  \nsn: Long  \ntitle: System Engineer  \nuid: 10003  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-sys-junior,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-sys-junior  \nmember: cn&#x3D;user5,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-ops  \n  \ndn: cn&#x3D;user6.tang,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user6.tang  \ndepartmentnumber: 4  \ndisplayname: Tang Binchao  \nmail: user6.tang@example.net  \nobjectclass: inetOrgPerson  \nsn: Tang  \ntitle: System Engineer  \nuid: 10004  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-ops-admin  \nmember: cn&#x3D;user6.tang,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-dev  \n  \ndn: cn&#x3D;user3,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user3  \ndepartmentnumber: 5  \ndisplayname: Chen Cheng  \nmail: user3@example.net  \nobjectclass: inetOrgPerson  \nsn: Chen  \ntitle: Senior Development Engineer  \nuid: 10005  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;example-dev-admin,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-dev-admin  \nmember: cn&#x3D;user3,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: cn&#x3D;user4.li,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user4.li  \ndepartmentnumber: 5  \ndisplayname: Li user4  \nmail: user4.li@example.net  \nobjectclass: inetOrgPerson  \nsn: Li  \ntitle: Development Engineer  \nuid: 10006  \nuserpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs  \n  \ndn: cn&#x3D;user7,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: user7  \ndepartmentnumber: 5  \ndisplayname: Luo Xujun  \nmail: user7@example.net  \nobjectclass: inetOrgPerson  \nsn: Luo  \ntitle: Development Engineer  \nuid: 10007  \nuserpassword: &#123;SSHA&#125;&#x2F;2+Coei5Fje+th7mOJgu43Ms3hBia2Qu  \n  \ndn: cn&#x3D;example-dev-senior,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \ncn: example-dev-senior  \nmember: cn&#x3D;user4.li,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nmember: cn&#x3D;user7,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: groupOfNames  \n  \ndn: ou&#x3D;example-rob,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  \nobjectclass: organizationalUnit  \nou: example-rob<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"11-3-第一版-ACL\"><a href=\"#11-3-第一版-ACL\" class=\"headerlink\" title=\"11.3 第一版 ACL\"></a>11.3 第一版 ACL</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;ou&#x3D;example,dc&#x3D;example,dc&#x3D;net&quot; filter&#x3D;&quot;(&amp;(objectClass&#x3D;inetOrgPerson)(|(memberOf&#x3D;cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)))&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read\n\ndn: olcDatabase&#x3D;&#123;4&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write  by anonymous auth  by * none\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;ibexample,dc&#x3D;com&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"11-4-最终的acl（写两个域、读两个域、reader-example-可以读取某些admin组，实现映射到example域下集成的应用）\"><a href=\"#11-4-最终的acl（写两个域、读两个域、reader-example-可以读取某些admin组，实现映射到example域下集成的应用）\" class=\"headerlink\" title=\"11.4 最终的acl（写两个域、读两个域、reader_example 可以读取某些admin组，实现映射到example域下集成的应用）\"></a>11.4 最终的acl（写两个域、读两个域、reader_example 可以读取某些admin组，实现映射到example域下集成的应用）</h3><ul>\n<li><p>添加</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;example,dc&#x3D;net&quot; read\nolcAccess: &#123;3&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; filter&#x3D;&quot;(&amp;(objectClass&#x3D;inetOrgPerson)(|(memberOf&#x3D;cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)))&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read\n \ndn: olcDatabase&#x3D;&#123;2&#125;mdb,cn&#x3D;config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write  by anonymous auth  by * none\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;ibexample,dc&#x3D;com&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;example,dc&#x3D;net&quot; read<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>删除</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config\ndelete: olcAccess\nolcAccess: &#123;2&#125;to..........\nolcAccess: &#123;3&#125;to........\n \n\nldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f acl-dele.ldif<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>数据库内 ACL 顺序测试，{}里面是优先级，生效在前（涉及范围大的 ACL 应书写在前）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by anonymous auth  by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write  by * none   \nolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * read\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,dc&#x3D;example,dc&#x3D;tech&quot; by dn.base&#x3D;&quot;cn&#x3D;reader,dc&#x3D;example,dc&#x3D;net&quot; read by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write    # 如果没有此条acl,该条目将不能在 lam 中被 admin 管理\n olcAccess: &#123;3&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;tech&quot; by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write      # 此条优先级最低<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"十二、集成其他应用\"><a href=\"#十二、集成其他应用\" class=\"headerlink\" title=\"十二、集成其他应用\"></a>十二、集成其他应用</h2><h3 id=\"12-1-conflunce\"><a href=\"#12-1-conflunce\" class=\"headerlink\" title=\"12.1  conflunce\"></a>12.1  conflunce</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by anonymous auth by * none\nolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * read\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; by dn.base&#x3D;&quot;cn&#x3D;reader,dc&#x3D;ibexample,dc&#x3D;com&quot; read<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"12-1-1-连接-之后的-acl-过滤案例\"><a href=\"#12-1-1-连接-之后的-acl-过滤案例\" class=\"headerlink\" title=\"12.1.1 连接 之后的 acl 过滤案例\"></a>12.1.1 连接 之后的 acl 过滤案例</h4><p>‘(&amp;(objectclass&#x3D;inetorgperson)(|(cn&#x3D;user5)(cn&#x3D;user2)))’  过滤出指定用户—-在用户模式设置。</p>\n<p>‘(&amp;(objectclass&#x3D;groupOfNames)(|(cn&#x3D;example-sys-junior)(cn&#x3D;example-sys-admin)))’ 过滤指定组—-在组模式设置（在ldap中创建的组 objectclass 是groupOfNames）</p>\n<h4 id=\"12-1-2-更详细的-acl-需求\"><a href=\"#12-1-2-更详细的-acl-需求\" class=\"headerlink\" title=\"12.1.2 更详细的 acl 需求\"></a>12.1.2 更详细的 acl 需求</h4><ul>\n<li><p>example</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write  by anonymous auth  by * none\nolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * read\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; filter&#x3D;&quot;(&amp;(objectClass&#x3D;inetOrg\n Person)(|(memberOf&#x3D;cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net\n )(memberOf&#x3D;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(member\n Of&#x3D;cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)))&quot; by dn.base&#x3D;\n &quot;cn&#x3D;reader,dc&#x3D;ibexample,dc&#x3D;com&quot; read  by dn.base&#x3D; &quot;cn&#x3D;reader,dc&#x3D;example,dc&#x3D;net&quot; read\n\nsearch时，必须要具体到用户层级，例如nextcloud，需要指定基础用户树如下\n\ncn&#x3D;user2,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net\ncn&#x3D;user1,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net\ncn&#x3D;user6.tang,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net\ndc&#x3D;ibexample,dc&#x3D;com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>example</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write  by anonymous auth  by * none\nolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * read\nolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;ibexample,dc&#x3D;com&quot; by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write by dn.base&#x3D;&quot;cn&#x3D;reader,dc&#x3D;ibexample,dc&#x3D;com&quot; read<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"12-2-集成-vault\"><a href=\"#12-2-集成-vault\" class=\"headerlink\" title=\"12.2 集成 vault\"></a>12.2 集成 vault</h3><ul>\n<li>过滤特定用户<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&amp;(objectClass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(cn&#x3D;user2)(cn&#x3D;user1)(cn&#x3D;%s)))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>过滤某个组<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&amp;(objectClass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>过滤多个组<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&amp;(objectclass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)(memberof&#x3D;CN&#x3D;example-dev-admin,OU&#x3D;example-dev,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>过滤特定用户和特定组<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&amp;(objectclass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(|(cn&#x3D;user4.li))(|(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)(memberof&#x3D;CN&#x3D;example-dev-admin,OU&#x3D;example-dev,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net))(cn&#x3D;%s)))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>错误<pre class=\"line-numbers language-none\"><code class=\"language-none\">(&amp;(objectClass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(cn&#x3D;user2)(cn&#x3D;user1))(cn&#x3D;%s))  会失败\n\n以下 1 条，写在group filter的时候会出现不能过滤，所有人都可以登录\n(&amp;(objectclass&#x3D;inetOrgPerson)(|(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)(memberof&#x3D;CN&#x3D;example-dev-admin,OU&#x3D;example-dev,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n"},{"title":"The First time using Helm Charts","date":"2023-12-04T10:50:57.000Z","summary":"The first time using Helm Charts to install serices.(Self-service-password,ldap-account-management)","_content":"## 一、ldap-account-manager\n### 1.1 Repo URL\n- https://gabibbo97.github.io/charts/\n- Set image tag:8.3 in the chart.yaml\n### 1.2 Values Modify----values.yaml\n\n```\nextraEnv:\n  LAM_SKIP_PRECONFIGURE: false\n  LDAP_DOMAIN: example.net;ibswufe.com\n  LDAP_BASE_DN: dc=example,dc=net;dc=ibswufe,dc=com\n  LDAP_SERVER: ldaps://ldap01.example.net\n  LDAP_USER: cn=administrator,dc=example,dc=net\n  LAM_LANG: zh_CN\n  LAM_PASSWORD: lam\n```\n\n## 二、 self-service-password\n### 2.1 Repo URL\n- https://ygqygq2.github.io/charts/\n- Set image tag:5.3.3 to pull the latest one\n### 2.2 Charts Using\n#### 2.2.1 ENV Setting ConfigMap\n- So confused about why cannot make it effective when I  using  the ConfigMap settings In the values.yaml to  cover the default php configurations of this soft.\n- So that , Using a ConfigMap Data to  define the container environment variables of this chart.\n- env-config.yaml\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\nname: self-service-password-env\ndata:\n  USE_QUESTIONS: 'false'\n\tLDAP_BINDDN: \"cn=exampleadmin,dc=example,dc=net\"\n\tSECRETEKEY: \"example\"\n\tDEFAULT_ACTION: \"sendtoken\"\n\tLANG: \"cn,zh-CN\"\n\tIS_BEHIND_PROXY: 'true'\n\tSITE_URL: \"https://ssp.example.net/index.php\"\n\tLDAP_SERVER: \"ldap://10.13.3.107\"\n\tLDAP_BASE_SEARCH: \"ou=example,dc=example,dc=net\"\n\tLDAP_LOGIN_ATTRIBUTE: \"cn\"\n\tLOGO: images/mnt/ltb-logo.png                                  # 共享存储，挂载在容器中的/www/ssp/images/mnt\n\tBACKGROUND_IMAGE: images/mnt/background.jpg\n\tMAIL_FROM_NAME: \"密码自主修改服务\"\n\tMAIL_SIGNATURE: \"如有疑问,请联系运维同事,英博智云.\"\n\tMAIL_USE_LDAP: 'true'\n\tNOTIFY_ON_CHANGE: 'true'\n\tSMTP_AUTH_ON: 'true'\n\tSMTP_HOST: \"smtphz.qiye.163.com\"\n\tMAIL_FROM: \"chao.long@example.net\"\n\tSMTP_USER: \"chao.long@example.net\"\n\tSMTP_SECURE_TYPE: 'ssl'\n\tSMTP_PORT: '465'\n\tSMTP_AUTOTLS: 'false'\n\tPASSWORD_DIFFERENT_LOGIN: 'true'\n\tPASSWORD_MAX_LENGTH: '30'\n\tPASSWORD_MIN_LENGTH: '8'\n\tPASSWORD_MIN_LOWERCASE: '1'\n\tPASSWORD_MIN_SPECIAL: '1'\n\tPASSWORD_MIN_UPPERCASE: '1'\n\tPASSWORD_COMPLEXITY: '4'\n\tPASSWORD_NO_REUSE: \"true\"\n\tPASSWORD_SHOW_POLICY: \"always\"\n\tPASSWORD_SPECIAL_CHARACTERS: \"^a-zA-Z0-9\"\n```\n\n- add a field `envFrom`  under the `env` in templates/deployment-statefulset.yaml\n\n```\nenv:\n{{ toYaml .Values.env | indent 12 }}\nenvFrom:\n- configMapRef:\n    name: self-service-password-env\n```\n#### 2.2.2 Secret\n- there are two variables need to been encrypted\n- values.secret\n\n```\nsecret:\n  enabled: true\n  mountPath: /etc/secret-volume\n  subPath: \"\"\n  readOnly: true\n  data:\n    ldap_bindpass: \"example@2020\"\n    smtp_pass: \"WaLxeu3pvsQaqd7X\"\n```\n#### 2.2.3 values.env\n\n```\nenv:\n  - name: LDAP_BINDPASS\n    valueFrom:\n      secretKeyRef:\n        name: self-service-password\n        key: ldap_bindpass\n  - name: SMTP_PASS\n    valueFrom:\n      secretKeyRef:\n        name: self-service-password\n        key: smtp_pass\n```\n\n#### 2.2.4 persistentVolume \n- create  pv & pvc resources under this namespace，mount the volume ，name: self-service-password\n\n```\npersistentVolume:   # 是否存储持久化\n  enabled: true\n  storageClass: \"-\"\n  accessMode: ReadWriteOnce\n  annotations: {}\n  size: 1Gi  # 大小\n  existingClaim: {}  # 使用已存在的pvc\n  mountPaths:\n   - name: data-storage\n     mountPath: /www/ssp/images/mnt  # 容器内路径，将新建 mnt\n     subPath: ssp-nfs                               # pv 中挂载点下的子目录\n```\n\n- pv.yaml\n\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: self-service-password\nspec:\n  capacity:\n    storage: 1Gi\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  nfs:\n    path: /home/example/nfs # 指定nfs的挂载点\n    server: 10.13.3.108\n```\n\n- Post  test，reverse proxy by nginx using Nodeport。Setting the dns resolving，take a visit of this site。\n\n```\nupstream ssp {\n  server 10.13.3.109:32337;\n}\nserver {\n    listen 80;\n    server_name ssp.example.net;\n    return 301 https://$server_name$request_uri;\n}\nserver {\n    listen 443 ssl ;\n    server_name ssp.example.net;\n    ssl_certificate tls/tls_ca.pem; \n    ssl_certificate_key tls/tls_key.pem;\n    location / {\n      proxy_pass http://ssp;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto \"https\";\n      proxy_read_timeout 1800s;\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n- charts correction\n`utcook.fullname`   change into--> `self-service-password.fullname`\n\n### 三、To Do List\nLearn more about：\n- storageclass\n- traefik ingress","source":"_posts/The-First-time-using-Helm-Charts.md","raw":"---\ntitle: The First time using Helm Charts\ndate: 2023-12-04 18:50:57\ntags:\n  - helm\ncategories:\n  - Kubernetes\nsummary: The first time using Helm Charts to install serices.(Self-service-password,ldap-account-management)\n---\n## 一、ldap-account-manager\n### 1.1 Repo URL\n- https://gabibbo97.github.io/charts/\n- Set image tag:8.3 in the chart.yaml\n### 1.2 Values Modify----values.yaml\n\n```\nextraEnv:\n  LAM_SKIP_PRECONFIGURE: false\n  LDAP_DOMAIN: example.net;ibswufe.com\n  LDAP_BASE_DN: dc=example,dc=net;dc=ibswufe,dc=com\n  LDAP_SERVER: ldaps://ldap01.example.net\n  LDAP_USER: cn=administrator,dc=example,dc=net\n  LAM_LANG: zh_CN\n  LAM_PASSWORD: lam\n```\n\n## 二、 self-service-password\n### 2.1 Repo URL\n- https://ygqygq2.github.io/charts/\n- Set image tag:5.3.3 to pull the latest one\n### 2.2 Charts Using\n#### 2.2.1 ENV Setting ConfigMap\n- So confused about why cannot make it effective when I  using  the ConfigMap settings In the values.yaml to  cover the default php configurations of this soft.\n- So that , Using a ConfigMap Data to  define the container environment variables of this chart.\n- env-config.yaml\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\nname: self-service-password-env\ndata:\n  USE_QUESTIONS: 'false'\n\tLDAP_BINDDN: \"cn=exampleadmin,dc=example,dc=net\"\n\tSECRETEKEY: \"example\"\n\tDEFAULT_ACTION: \"sendtoken\"\n\tLANG: \"cn,zh-CN\"\n\tIS_BEHIND_PROXY: 'true'\n\tSITE_URL: \"https://ssp.example.net/index.php\"\n\tLDAP_SERVER: \"ldap://10.13.3.107\"\n\tLDAP_BASE_SEARCH: \"ou=example,dc=example,dc=net\"\n\tLDAP_LOGIN_ATTRIBUTE: \"cn\"\n\tLOGO: images/mnt/ltb-logo.png                                  # 共享存储，挂载在容器中的/www/ssp/images/mnt\n\tBACKGROUND_IMAGE: images/mnt/background.jpg\n\tMAIL_FROM_NAME: \"密码自主修改服务\"\n\tMAIL_SIGNATURE: \"如有疑问,请联系运维同事,英博智云.\"\n\tMAIL_USE_LDAP: 'true'\n\tNOTIFY_ON_CHANGE: 'true'\n\tSMTP_AUTH_ON: 'true'\n\tSMTP_HOST: \"smtphz.qiye.163.com\"\n\tMAIL_FROM: \"chao.long@example.net\"\n\tSMTP_USER: \"chao.long@example.net\"\n\tSMTP_SECURE_TYPE: 'ssl'\n\tSMTP_PORT: '465'\n\tSMTP_AUTOTLS: 'false'\n\tPASSWORD_DIFFERENT_LOGIN: 'true'\n\tPASSWORD_MAX_LENGTH: '30'\n\tPASSWORD_MIN_LENGTH: '8'\n\tPASSWORD_MIN_LOWERCASE: '1'\n\tPASSWORD_MIN_SPECIAL: '1'\n\tPASSWORD_MIN_UPPERCASE: '1'\n\tPASSWORD_COMPLEXITY: '4'\n\tPASSWORD_NO_REUSE: \"true\"\n\tPASSWORD_SHOW_POLICY: \"always\"\n\tPASSWORD_SPECIAL_CHARACTERS: \"^a-zA-Z0-9\"\n```\n\n- add a field `envFrom`  under the `env` in templates/deployment-statefulset.yaml\n\n```\nenv:\n{{ toYaml .Values.env | indent 12 }}\nenvFrom:\n- configMapRef:\n    name: self-service-password-env\n```\n#### 2.2.2 Secret\n- there are two variables need to been encrypted\n- values.secret\n\n```\nsecret:\n  enabled: true\n  mountPath: /etc/secret-volume\n  subPath: \"\"\n  readOnly: true\n  data:\n    ldap_bindpass: \"example@2020\"\n    smtp_pass: \"WaLxeu3pvsQaqd7X\"\n```\n#### 2.2.3 values.env\n\n```\nenv:\n  - name: LDAP_BINDPASS\n    valueFrom:\n      secretKeyRef:\n        name: self-service-password\n        key: ldap_bindpass\n  - name: SMTP_PASS\n    valueFrom:\n      secretKeyRef:\n        name: self-service-password\n        key: smtp_pass\n```\n\n#### 2.2.4 persistentVolume \n- create  pv & pvc resources under this namespace，mount the volume ，name: self-service-password\n\n```\npersistentVolume:   # 是否存储持久化\n  enabled: true\n  storageClass: \"-\"\n  accessMode: ReadWriteOnce\n  annotations: {}\n  size: 1Gi  # 大小\n  existingClaim: {}  # 使用已存在的pvc\n  mountPaths:\n   - name: data-storage\n     mountPath: /www/ssp/images/mnt  # 容器内路径，将新建 mnt\n     subPath: ssp-nfs                               # pv 中挂载点下的子目录\n```\n\n- pv.yaml\n\n```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: self-service-password\nspec:\n  capacity:\n    storage: 1Gi\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  nfs:\n    path: /home/example/nfs # 指定nfs的挂载点\n    server: 10.13.3.108\n```\n\n- Post  test，reverse proxy by nginx using Nodeport。Setting the dns resolving，take a visit of this site。\n\n```\nupstream ssp {\n  server 10.13.3.109:32337;\n}\nserver {\n    listen 80;\n    server_name ssp.example.net;\n    return 301 https://$server_name$request_uri;\n}\nserver {\n    listen 443 ssl ;\n    server_name ssp.example.net;\n    ssl_certificate tls/tls_ca.pem; \n    ssl_certificate_key tls/tls_key.pem;\n    location / {\n      proxy_pass http://ssp;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto \"https\";\n      proxy_read_timeout 1800s;\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n    }\n}\n```\n\n- charts correction\n`utcook.fullname`   change into--> `self-service-password.fullname`\n\n### 三、To Do List\nLearn more about：\n- storageclass\n- traefik ingress","slug":"The-First-time-using-Helm-Charts","published":1,"updated":"2024-01-05T02:32:07.317Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrhtjaiu000bltm70bqzhlnw"},{"title":"deploy_hexo","date":"2023-10-15T05:15:56.000Z","toc":true,"summary":"记录自己使用 hexo 建立这个博客网站的过程，主要内容来源网络。","_content":"## 1. 安装 node.js、npm\n- 过程如此，但是包需要重新找，网页通过这个链接去官网然后复制下载链接即可，不然会安装hexo失败\n- 由于node.js默认配置了npm，所以不用单独下载和配置npm了，只要node.js安装成功，那么是直接可以使用npm命令来下载moudle的\n```\nwget https://nodejs.org/dist/v12.16.1/node-v12.16.1-linux-x64.tar.xz\ntar tvf ./node-v12.16.1-linux-x64.tar.xz    # 查看压缩结构\ntar xvf ./node-v12.16.1-linux-x64.tar.xz -C /usr/local/\nln -s /usr/local/node-v12.16.1-linux-x64/bin/node /usr/bin/node\nln -s /usr/local/node-v12.16.1-linux-x64/bin/npm /usr/bin/npm\n```\n\n## 2. 安装 hexo 并初始化\n- 个人执行初始化失败，检查发现原因是hexo版本和nodejs版本不兼容，升级nodejs\n```\nnpm install hexo-cli -g\nln -s /usr/local/node-v12.16.1-linux-x64/bin/hexo /usr/local/bin/hexo\nhexo init blog  # 这需要是一个你自己设计好的路径下的空文件夹\nhexo server  # 测试运行本工具，发布在本服务器4000端口\n```\n## 3. hexo 主题\n因为某个站长接触到hexo，然后再对比之后觉得这个站点框架比较好，所以选择这个hexo，并直接根据这个帖子使用了这个[主题](http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao)\n\n## 4. 上传 github\n- 同步到 github 远程仓库的步骤，请找专项的帖子，略\n- 有个坑，themes 下的主题文件夹因为是 git clone 到这个路径的，其中有 '.git' 目录信息，不能正常上传，[解决办法](https://blog.csdn.net/liaoweilin0529/article/details/113650333)来源于这位\n\n## 5. 部署到 gh-pages 分支\n- 借助了 hexo 的脚本和工具，将实现前端代码存在gh-pages分支，利用 github 的 pages 功能即可发布这个站点。源码和前端代码分别存在 main 和 gh-pages 分支\n- 一键部署的[参考](https://hexo.io/zh-cn/docs/one-command-deployment.html)\n- 再次测试图片应该放张图片的，但是github可以渲染，博客不能。。。。。。作为下一步需要搞懂的地方\n\n## 6. 访问\n去 action 查看url\n\n## 7. 测试维护和书写流程\n- 新建一篇blog\n```\nhexo new \"filename\"\n```\n\n测试过程：\n这是一篇测试用的帖子，学习使用 hexo、书写帖子、发布内容\n目前出现的问题是没有内容\n需要搞懂书写之后，应该怎么样推送或者命令发布\n测试1，修改然后 clean && deploy，然后push\n测试2，先push 然后deploy\n还要修改音乐模块\n同步之后修改不成功\n测试这次修改的流程，直接push----main分支已经变化，但是gh-pages没有部署成功\n修改+ clean + deploy ----网页已经变化，gh-pages变化，main分支代码无变化\n修改+ clean + deploy  + push ---- 完整的正常流程（源代码在main分支保存并修改，deploy将生成前端代码并发布到gh-pages）\n","source":"_posts/deploy-hexo.md","raw":"---\ntitle: deploy_hexo\ndate: 2023-10-15 13:15:56\ntags:\n  - hexo\n  - blog\ncategories:\n  - hexo\ntoc: true\nsummary: 记录自己使用 hexo 建立这个博客网站的过程，主要内容来源网络。\n---\n## 1. 安装 node.js、npm\n- 过程如此，但是包需要重新找，网页通过这个链接去官网然后复制下载链接即可，不然会安装hexo失败\n- 由于node.js默认配置了npm，所以不用单独下载和配置npm了，只要node.js安装成功，那么是直接可以使用npm命令来下载moudle的\n```\nwget https://nodejs.org/dist/v12.16.1/node-v12.16.1-linux-x64.tar.xz\ntar tvf ./node-v12.16.1-linux-x64.tar.xz    # 查看压缩结构\ntar xvf ./node-v12.16.1-linux-x64.tar.xz -C /usr/local/\nln -s /usr/local/node-v12.16.1-linux-x64/bin/node /usr/bin/node\nln -s /usr/local/node-v12.16.1-linux-x64/bin/npm /usr/bin/npm\n```\n\n## 2. 安装 hexo 并初始化\n- 个人执行初始化失败，检查发现原因是hexo版本和nodejs版本不兼容，升级nodejs\n```\nnpm install hexo-cli -g\nln -s /usr/local/node-v12.16.1-linux-x64/bin/hexo /usr/local/bin/hexo\nhexo init blog  # 这需要是一个你自己设计好的路径下的空文件夹\nhexo server  # 测试运行本工具，发布在本服务器4000端口\n```\n## 3. hexo 主题\n因为某个站长接触到hexo，然后再对比之后觉得这个站点框架比较好，所以选择这个hexo，并直接根据这个帖子使用了这个[主题](http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao)\n\n## 4. 上传 github\n- 同步到 github 远程仓库的步骤，请找专项的帖子，略\n- 有个坑，themes 下的主题文件夹因为是 git clone 到这个路径的，其中有 '.git' 目录信息，不能正常上传，[解决办法](https://blog.csdn.net/liaoweilin0529/article/details/113650333)来源于这位\n\n## 5. 部署到 gh-pages 分支\n- 借助了 hexo 的脚本和工具，将实现前端代码存在gh-pages分支，利用 github 的 pages 功能即可发布这个站点。源码和前端代码分别存在 main 和 gh-pages 分支\n- 一键部署的[参考](https://hexo.io/zh-cn/docs/one-command-deployment.html)\n- 再次测试图片应该放张图片的，但是github可以渲染，博客不能。。。。。。作为下一步需要搞懂的地方\n\n## 6. 访问\n去 action 查看url\n\n## 7. 测试维护和书写流程\n- 新建一篇blog\n```\nhexo new \"filename\"\n```\n\n测试过程：\n这是一篇测试用的帖子，学习使用 hexo、书写帖子、发布内容\n目前出现的问题是没有内容\n需要搞懂书写之后，应该怎么样推送或者命令发布\n测试1，修改然后 clean && deploy，然后push\n测试2，先push 然后deploy\n还要修改音乐模块\n同步之后修改不成功\n测试这次修改的流程，直接push----main分支已经变化，但是gh-pages没有部署成功\n修改+ clean + deploy ----网页已经变化，gh-pages变化，main分支代码无变化\n修改+ clean + deploy  + push ---- 完整的正常流程（源代码在main分支保存并修改，deploy将生成前端代码并发布到gh-pages）\n","slug":"deploy-hexo","published":1,"updated":"2023-11-13T13:07:03.020Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrhtjaiy000fltm7gm237nww","content":"<h2 id=\"1-安装-node-js、npm\"><a href=\"#1-安装-node-js、npm\" class=\"headerlink\" title=\"1. 安装 node.js、npm\"></a>1. 安装 node.js、npm</h2><ul>\n<li>过程如此，但是包需要重新找，网页通过这个链接去官网然后复制下载链接即可，不然会安装hexo失败</li>\n<li>由于node.js默认配置了npm，所以不用单独下载和配置npm了，只要node.js安装成功，那么是直接可以使用npm命令来下载moudle的<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;v12.16.1&#x2F;node-v12.16.1-linux-x64.tar.xz\ntar tvf .&#x2F;node-v12.16.1-linux-x64.tar.xz    # 查看压缩结构\ntar xvf .&#x2F;node-v12.16.1-linux-x64.tar.xz -C &#x2F;usr&#x2F;local&#x2F;\nln -s &#x2F;usr&#x2F;local&#x2F;node-v12.16.1-linux-x64&#x2F;bin&#x2F;node &#x2F;usr&#x2F;bin&#x2F;node\nln -s &#x2F;usr&#x2F;local&#x2F;node-v12.16.1-linux-x64&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;bin&#x2F;npm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"2-安装-hexo-并初始化\"><a href=\"#2-安装-hexo-并初始化\" class=\"headerlink\" title=\"2. 安装 hexo 并初始化\"></a>2. 安装 hexo 并初始化</h2><ul>\n<li>个人执行初始化失败，检查发现原因是hexo版本和nodejs版本不兼容，升级nodejs<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install hexo-cli -g\nln -s &#x2F;usr&#x2F;local&#x2F;node-v12.16.1-linux-x64&#x2F;bin&#x2F;hexo &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\nhexo init blog  # 这需要是一个你自己设计好的路径下的空文件夹\nhexo server  # 测试运行本工具，发布在本服务器4000端口<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"3-hexo-主题\"><a href=\"#3-hexo-主题\" class=\"headerlink\" title=\"3. hexo 主题\"></a>3. hexo 主题</h2><p>因为某个站长接触到hexo，然后再对比之后觉得这个站点框架比较好，所以选择这个hexo，并直接根据这个帖子使用了这个<a href=\"http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao\">主题</a></p>\n<h2 id=\"4-上传-github\"><a href=\"#4-上传-github\" class=\"headerlink\" title=\"4. 上传 github\"></a>4. 上传 github</h2><ul>\n<li>同步到 github 远程仓库的步骤，请找专项的帖子，略</li>\n<li>有个坑，themes 下的主题文件夹因为是 git clone 到这个路径的，其中有 ‘.git’ 目录信息，不能正常上传，<a href=\"https://blog.csdn.net/liaoweilin0529/article/details/113650333\">解决办法</a>来源于这位</li>\n</ul>\n<h2 id=\"5-部署到-gh-pages-分支\"><a href=\"#5-部署到-gh-pages-分支\" class=\"headerlink\" title=\"5. 部署到 gh-pages 分支\"></a>5. 部署到 gh-pages 分支</h2><ul>\n<li>借助了 hexo 的脚本和工具，将实现前端代码存在gh-pages分支，利用 github 的 pages 功能即可发布这个站点。源码和前端代码分别存在 main 和 gh-pages 分支</li>\n<li>一键部署的<a href=\"https://hexo.io/zh-cn/docs/one-command-deployment.html\">参考</a></li>\n<li>再次测试图片应该放张图片的，但是github可以渲染，博客不能。。。。。。作为下一步需要搞懂的地方</li>\n</ul>\n<h2 id=\"6-访问\"><a href=\"#6-访问\" class=\"headerlink\" title=\"6. 访问\"></a>6. 访问</h2><p>去 action 查看url</p>\n<h2 id=\"7-测试维护和书写流程\"><a href=\"#7-测试维护和书写流程\" class=\"headerlink\" title=\"7. 测试维护和书写流程\"></a>7. 测试维护和书写流程</h2><ul>\n<li>新建一篇blog<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexo new &quot;filename&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<p>测试过程：<br>这是一篇测试用的帖子，学习使用 hexo、书写帖子、发布内容<br>目前出现的问题是没有内容<br>需要搞懂书写之后，应该怎么样推送或者命令发布<br>测试1，修改然后 clean &amp;&amp; deploy，然后push<br>测试2，先push 然后deploy<br>还要修改音乐模块<br>同步之后修改不成功<br>测试这次修改的流程，直接push—-main分支已经变化，但是gh-pages没有部署成功<br>修改+ clean + deploy —-网页已经变化，gh-pages变化，main分支代码无变化<br>修改+ clean + deploy  + push —- 完整的正常流程（源代码在main分支保存并修改，deploy将生成前端代码并发布到gh-pages）</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"1-安装-node-js、npm\"><a href=\"#1-安装-node-js、npm\" class=\"headerlink\" title=\"1. 安装 node.js、npm\"></a>1. 安装 node.js、npm</h2><ul>\n<li>过程如此，但是包需要重新找，网页通过这个链接去官网然后复制下载链接即可，不然会安装hexo失败</li>\n<li>由于node.js默认配置了npm，所以不用单独下载和配置npm了，只要node.js安装成功，那么是直接可以使用npm命令来下载moudle的<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;v12.16.1&#x2F;node-v12.16.1-linux-x64.tar.xz\ntar tvf .&#x2F;node-v12.16.1-linux-x64.tar.xz    # 查看压缩结构\ntar xvf .&#x2F;node-v12.16.1-linux-x64.tar.xz -C &#x2F;usr&#x2F;local&#x2F;\nln -s &#x2F;usr&#x2F;local&#x2F;node-v12.16.1-linux-x64&#x2F;bin&#x2F;node &#x2F;usr&#x2F;bin&#x2F;node\nln -s &#x2F;usr&#x2F;local&#x2F;node-v12.16.1-linux-x64&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;bin&#x2F;npm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"2-安装-hexo-并初始化\"><a href=\"#2-安装-hexo-并初始化\" class=\"headerlink\" title=\"2. 安装 hexo 并初始化\"></a>2. 安装 hexo 并初始化</h2><ul>\n<li>个人执行初始化失败，检查发现原因是hexo版本和nodejs版本不兼容，升级nodejs<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install hexo-cli -g\nln -s &#x2F;usr&#x2F;local&#x2F;node-v12.16.1-linux-x64&#x2F;bin&#x2F;hexo &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\nhexo init blog  # 这需要是一个你自己设计好的路径下的空文件夹\nhexo server  # 测试运行本工具，发布在本服务器4000端口<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"3-hexo-主题\"><a href=\"#3-hexo-主题\" class=\"headerlink\" title=\"3. hexo 主题\"></a>3. hexo 主题</h2><p>因为某个站长接触到hexo，然后再对比之后觉得这个站点框架比较好，所以选择这个hexo，并直接根据这个帖子使用了这个<a href=\"http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao\">主题</a></p>\n<h2 id=\"4-上传-github\"><a href=\"#4-上传-github\" class=\"headerlink\" title=\"4. 上传 github\"></a>4. 上传 github</h2><ul>\n<li>同步到 github 远程仓库的步骤，请找专项的帖子，略</li>\n<li>有个坑，themes 下的主题文件夹因为是 git clone 到这个路径的，其中有 ‘.git’ 目录信息，不能正常上传，<a href=\"https://blog.csdn.net/liaoweilin0529/article/details/113650333\">解决办法</a>来源于这位</li>\n</ul>\n<h2 id=\"5-部署到-gh-pages-分支\"><a href=\"#5-部署到-gh-pages-分支\" class=\"headerlink\" title=\"5. 部署到 gh-pages 分支\"></a>5. 部署到 gh-pages 分支</h2><ul>\n<li>借助了 hexo 的脚本和工具，将实现前端代码存在gh-pages分支，利用 github 的 pages 功能即可发布这个站点。源码和前端代码分别存在 main 和 gh-pages 分支</li>\n<li>一键部署的<a href=\"https://hexo.io/zh-cn/docs/one-command-deployment.html\">参考</a></li>\n<li>再次测试图片应该放张图片的，但是github可以渲染，博客不能。。。。。。作为下一步需要搞懂的地方</li>\n</ul>\n<h2 id=\"6-访问\"><a href=\"#6-访问\" class=\"headerlink\" title=\"6. 访问\"></a>6. 访问</h2><p>去 action 查看url</p>\n<h2 id=\"7-测试维护和书写流程\"><a href=\"#7-测试维护和书写流程\" class=\"headerlink\" title=\"7. 测试维护和书写流程\"></a>7. 测试维护和书写流程</h2><ul>\n<li>新建一篇blog<pre class=\"line-numbers language-none\"><code class=\"language-none\">hexo new &quot;filename&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<p>测试过程：<br>这是一篇测试用的帖子，学习使用 hexo、书写帖子、发布内容<br>目前出现的问题是没有内容<br>需要搞懂书写之后，应该怎么样推送或者命令发布<br>测试1，修改然后 clean &amp;&amp; deploy，然后push<br>测试2，先push 然后deploy<br>还要修改音乐模块<br>同步之后修改不成功<br>测试这次修改的流程，直接push—-main分支已经变化，但是gh-pages没有部署成功<br>修改+ clean + deploy —-网页已经变化，gh-pages变化，main分支代码无变化<br>修改+ clean + deploy  + push —- 完整的正常流程（源代码在main分支保存并修改，deploy将生成前端代码并发布到gh-pages）</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-10-14T14:51:11.389Z","updated":"2023-10-14T14:51:11.389Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrhtjaj0000gltm7el6r6kuk","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"homelab pc","date":"2023-11-27T15:02:04.000Z","summary":"Got a new way to write blog in english. Write the version 1 of this easy in chinese, then translating the texts into English. this one is about the  prepare of testing environments on my homelab PC. By the way, hope one day I'll know more professional words.","_content":"## 1. Computer Parts\n|配件|规格|价格|\n|:---:|:---:|:---:|\n|Motherboard|华南x99双路8D4|730含以下二者|\n|CPU|E5-2680V4||\n|Cooler|寒冰A500四铜管||\n|RAM|闲鱼-镁光窄条2133-16G*4|280|\n|GPU|GTX750 4G 貌似全新|335|\n|Chassis|刀客360|150|\n|Fan|PDD-纯白*5|48|\n|SSD|BU KING 512G|150|\n|Power|华南U700双路电源600W|243|\n|Tools|硅脂、螺丝刀、网线|25|\n\n## 2. Install PVE System\n- Ventoy\n- proxmox-ve_8.0-2.iso\n\n### 2.1 Disable the subscription on web UI\n```bash\nsed -i_orig \"s/data.status === 'Active'/true/g\" /usr/share/pve-manager/js/pvemanagerlib.js\nsed -i_orig \"s/if (res === null || res === undefined || \\!res || res/if(/g\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js\nsed -i_orig \"s/.data.status.toLowerCase() !== 'active'/false/g\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js\nsystemctl restart pveproxy\n```\n\n### 2.2 Network Settings\n- [reference](https://www.bilibili.com/video/BV1xH4y1f7Ga/?spm_id_from=333.337.search-card.all.click&vd_source=154006e70f5c14d792db947270b63614)\n- pve host using a vitual NIC and bridging the network connection to a physical NIC\n```shell\ncat /etc/network/interfaces\nauto lo\niface lo inet loopback\niface enp6s0 inet manual    # physical NIC\n\nauto vmbr0               # Vitrual NIC\niface vmbr0 inet static\n        address 192.168.3.20/24\n        gateway 192.168.3.1\n        bridge-ports enp6s0     #bridging\n        bridge-stp off\n        bridge-fd 0\n```\n```shell\nsudo systemctl restart networking \n```\n\n### 2.3 [ Using a homeland repository source](https://www.wunote.cn/article/10000)\n```shell\n# modify the ubuntu software source\nwget https://mirrors.ustc.edu.cn/proxmox/debian/proxmox-release-bookworm.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg\n\necho \"deb https://mirrors.ustc.edu.cn/proxmox/debian bookworm pve-no-subscription\" > /etc/apt/sources.list.d/pve-no-subscription.list\n\nsed -i 's|^deb http://ftp.debian.org|deb https://mirrors.ustc.edu.cn|g' /etc/apt/sources.list\n\nsed -i 's|^deb http://security.debian.org|deb https://mirrors.ustc.edu.cn/debian-security|g' /etc/apt/sources.list\n\n# modify the ceph repository source\necho \"deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy bookworm no-subscription\" > /etc/apt/sources.list.d/ceph.list\n\n# CT images source\nsed -i 's|http://download.proxmox.com|https://mirrors.ustc.edu.cn/proxmox|g' /usr/share/perl5/PVE/APLInfo.pm\n\nsed -i 's/^/#/' /etc/apt/sources.list.d/pve-enterprise.list\n```\n\n## 3. Virtual machine on pve host\n### 3.1 SYS\n- ubuntu 22.04.3 server\n- choose network bridging on vmbr0, it's convenient and fast. also because of my simple network architecture.\n### 3.2 Repository Source\n```\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse\n```\n### 3.3 Install containerd、nerdctl & make this vm as a template\n```shell\napt install containerd\ncontainerd config default > /etc/containerd/config.toml  # generating a default configuration of containerd\n```\n- Modify part of this file, like below example.\n\n```toml\nsandbox_image = \"registry.aliyuncs.com/google_containers/pause:3.8\"\nSystemdCgroup = true\n\n[plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors]\n        [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"docker.io\"]\n          endpoint = [\"https://bqr1dr1n.mirror.aliyuncs.com\"]\n        [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"k8s.gcr.io\"]\n          endpoint = [\"https://registry.aliyuncs.com/google_containers\"]\n```\n\n- Install the nerdctl by binary package\n\n```shell\nwget https://download.fastgit.org/containerd/nerdctl/releases/download/v0.12.1/nerdctl-0.12.1-linux-amd64.tar.gz\nmkdir -p /usr/local/containerd/bin/ && tar -zxvf nerdctl-0.12.1-linux-amd64.tar.gz nerdctl && mv nerdctl /usr/local/containerd/bin/\nln -s /usr/local/containerd/bin/nerdctl /usr/local/bin/nerdctl\n```\n### 3.4 System settings\n\n```bash\n# ipv4 forward\ncat <<EOF | tee /etc/modules-load.d/k8s.conf\noverlay\nbr_netfilter\nEOF\n\nmodprobe overlay\nmodprobe br_netfilter\n\ncat <<EOF | tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward                 = 1\nEOF\n\nsysctl --system\nsysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward\n\n# swap\nswapoff -a\n\nvim /etc/fstab\n  # /swap.img      none    swap    sw      0       0\n```\n- Transform this vm into template by Web UI of pve\n\n## 4. Kubernetes\n### 4.1 Install kubeadm kubelet kubectl\n\n```bash\necho deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main > /etc/apt/sources.list.d/kubernetes.list\ncurl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | \\\n\tapt-key add -\napt-get update && apt-get install -y kubelet kubeadm kubectl\napt-mark hold kubelet kubeadm kubectl\n```\n### 4.2 generate a default configuration file in workspace path to init the cluster\n\n```\nkubeadm config print init-defaults --component-configs KubeletConfiguration > kubeadm.yaml\n```\n- modify part of configuration file\n\n```yaml\nlocalAPIEndpoint:\n  advertiseAddress: 192.168.3.11  #master IP\n  bindPort: 6443\nnodeRegistration:\n  criSocket: unix:///var/run/containerd/containerd.sock\n  imagePullPolicy: IfNotPresent\n    #name: master1  # defaults to be node\n  taints: null\n---\napiServer:\n  timeoutForControlPlane: 4m0s\napiVersion: kubeadm.k8s.io/v1beta3\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ncontrollerManager: {}\ndns: {}\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: registry.aliyuncs.com/google_containers  #changing into repository in china\nkind: ClusterConfiguration\nkubernetesVersion: 1.28.0    # specify the version of kube\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: 10.244.0.0/16    # need to add\n  serviceSubnet: 10.96.0.0/12\nscheduler: {}\n---\napiVersion: kubeproxy.config.k8s.io/v1alpha1 # add\nkind: KubeProxyConfiguration\nmode: ipvs\n```\n- init cluster\n\n```\nsudo kubeadm init --config kubeadm-config.yaml\n``` \n\n- work nodes joining the cluster\n\n```\nkubeadm join 192.168.3.14:6443 --token n8orxj.f51riixygulit9yz \\\n        --discovery-token-ca-cert-hash sha256:c0af38d55001f6eaf09ca9248db5e048c492ee4b883f0534a54187eceb50a928\n```\n- after all the work nodes joining the cluster, deploy the flannel\n\n```bash\nwget https://raw.githubusercontent.com/flannel-io/flannel/v0.20.1/Documentation/kube-flannel.yml\nkubectl apply -f kube-flannel.yml\n```\n- check status of cluster\n\n```\nkubectl get nodes -A\nkubectl get pods -A\n```\n## 5. Fault\n### 5.1 kubectl get nodes\n- descriobe\n\n```shell\ncouldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused\nThe connection to the server localhost:8080 was refused - did you specify the right host or port?\n```\n- solution: fogot to apply the config, it's printed by the kubeadm init command\n\n```\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n```\n### 5.2 The kubelet is not running\n- describe\n\n```shell\n[kubelet-check] Initial timeout of 40s passed.\n\nUnfortunately, an error has occurred:\n        timed out waiting for the condition\n\nThis error is likely caused by:\n        - The kubelet is not running\n        - The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)\n```\n- solution: changing the wrong advertiseAddress, supoose to be mine master IP.\n\n```shell\n# in some  conditions, this setting may help. It controls the cgroup driver of kubelet\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io/v1beta1\ncgroupDriver: systemd\n``` \n### 5.3 coredns pod halting on creating status.\n- describe\n\n```shell\nWarning  FailedCreatePodSandBox  42s   kubelet            Failed to create pod sandbox: rpc error: code = Unknown desc = failed to setup network for sandbox \"03e2b9a1ceaf66beb681891dc276ea490d664822b43047f25d3b5d4a11e76eb0\": plugin type=\"flannel\" failed (add): open /run/flannel/subnet.env: no such file or directory\n```\n- solutions: creating a file && reset the cluster and reinstall the kube-flannel. ( worked in this case, solution of `work not ready`)(the file below maybe useless,it's important to set `Podsubnet` in the init config file)\n\n```shell\ncat  /run/flannel/subnet.env  #  manual creating\n\nFLANNEL_NETWORK=10.244.0.0/16\nFLANNEL_SUBNET=10.244.0.1/24\nFLANNEL_MTU=1450\nFLANNEL_IPMASQ=true\n```\n","source":"_posts/homelab-pc.md","raw":"---\ntitle: homelab pc\ndate: 2023-11-27 23:02:04\ntags: DIY\ncategories: Hardware\nsummary: Got a new way to write blog in english. Write the version 1 of this easy in chinese, then translating the texts into English. this one is about the  prepare of testing environments on my homelab PC. By the way, hope one day I'll know more professional words.\n---\n## 1. Computer Parts\n|配件|规格|价格|\n|:---:|:---:|:---:|\n|Motherboard|华南x99双路8D4|730含以下二者|\n|CPU|E5-2680V4||\n|Cooler|寒冰A500四铜管||\n|RAM|闲鱼-镁光窄条2133-16G*4|280|\n|GPU|GTX750 4G 貌似全新|335|\n|Chassis|刀客360|150|\n|Fan|PDD-纯白*5|48|\n|SSD|BU KING 512G|150|\n|Power|华南U700双路电源600W|243|\n|Tools|硅脂、螺丝刀、网线|25|\n\n## 2. Install PVE System\n- Ventoy\n- proxmox-ve_8.0-2.iso\n\n### 2.1 Disable the subscription on web UI\n```bash\nsed -i_orig \"s/data.status === 'Active'/true/g\" /usr/share/pve-manager/js/pvemanagerlib.js\nsed -i_orig \"s/if (res === null || res === undefined || \\!res || res/if(/g\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js\nsed -i_orig \"s/.data.status.toLowerCase() !== 'active'/false/g\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js\nsystemctl restart pveproxy\n```\n\n### 2.2 Network Settings\n- [reference](https://www.bilibili.com/video/BV1xH4y1f7Ga/?spm_id_from=333.337.search-card.all.click&vd_source=154006e70f5c14d792db947270b63614)\n- pve host using a vitual NIC and bridging the network connection to a physical NIC\n```shell\ncat /etc/network/interfaces\nauto lo\niface lo inet loopback\niface enp6s0 inet manual    # physical NIC\n\nauto vmbr0               # Vitrual NIC\niface vmbr0 inet static\n        address 192.168.3.20/24\n        gateway 192.168.3.1\n        bridge-ports enp6s0     #bridging\n        bridge-stp off\n        bridge-fd 0\n```\n```shell\nsudo systemctl restart networking \n```\n\n### 2.3 [ Using a homeland repository source](https://www.wunote.cn/article/10000)\n```shell\n# modify the ubuntu software source\nwget https://mirrors.ustc.edu.cn/proxmox/debian/proxmox-release-bookworm.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg\n\necho \"deb https://mirrors.ustc.edu.cn/proxmox/debian bookworm pve-no-subscription\" > /etc/apt/sources.list.d/pve-no-subscription.list\n\nsed -i 's|^deb http://ftp.debian.org|deb https://mirrors.ustc.edu.cn|g' /etc/apt/sources.list\n\nsed -i 's|^deb http://security.debian.org|deb https://mirrors.ustc.edu.cn/debian-security|g' /etc/apt/sources.list\n\n# modify the ceph repository source\necho \"deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy bookworm no-subscription\" > /etc/apt/sources.list.d/ceph.list\n\n# CT images source\nsed -i 's|http://download.proxmox.com|https://mirrors.ustc.edu.cn/proxmox|g' /usr/share/perl5/PVE/APLInfo.pm\n\nsed -i 's/^/#/' /etc/apt/sources.list.d/pve-enterprise.list\n```\n\n## 3. Virtual machine on pve host\n### 3.1 SYS\n- ubuntu 22.04.3 server\n- choose network bridging on vmbr0, it's convenient and fast. also because of my simple network architecture.\n### 3.2 Repository Source\n```\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-security main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse\n```\n### 3.3 Install containerd、nerdctl & make this vm as a template\n```shell\napt install containerd\ncontainerd config default > /etc/containerd/config.toml  # generating a default configuration of containerd\n```\n- Modify part of this file, like below example.\n\n```toml\nsandbox_image = \"registry.aliyuncs.com/google_containers/pause:3.8\"\nSystemdCgroup = true\n\n[plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors]\n        [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"docker.io\"]\n          endpoint = [\"https://bqr1dr1n.mirror.aliyuncs.com\"]\n        [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"k8s.gcr.io\"]\n          endpoint = [\"https://registry.aliyuncs.com/google_containers\"]\n```\n\n- Install the nerdctl by binary package\n\n```shell\nwget https://download.fastgit.org/containerd/nerdctl/releases/download/v0.12.1/nerdctl-0.12.1-linux-amd64.tar.gz\nmkdir -p /usr/local/containerd/bin/ && tar -zxvf nerdctl-0.12.1-linux-amd64.tar.gz nerdctl && mv nerdctl /usr/local/containerd/bin/\nln -s /usr/local/containerd/bin/nerdctl /usr/local/bin/nerdctl\n```\n### 3.4 System settings\n\n```bash\n# ipv4 forward\ncat <<EOF | tee /etc/modules-load.d/k8s.conf\noverlay\nbr_netfilter\nEOF\n\nmodprobe overlay\nmodprobe br_netfilter\n\ncat <<EOF | tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward                 = 1\nEOF\n\nsysctl --system\nsysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward\n\n# swap\nswapoff -a\n\nvim /etc/fstab\n  # /swap.img      none    swap    sw      0       0\n```\n- Transform this vm into template by Web UI of pve\n\n## 4. Kubernetes\n### 4.1 Install kubeadm kubelet kubectl\n\n```bash\necho deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main > /etc/apt/sources.list.d/kubernetes.list\ncurl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | \\\n\tapt-key add -\napt-get update && apt-get install -y kubelet kubeadm kubectl\napt-mark hold kubelet kubeadm kubectl\n```\n### 4.2 generate a default configuration file in workspace path to init the cluster\n\n```\nkubeadm config print init-defaults --component-configs KubeletConfiguration > kubeadm.yaml\n```\n- modify part of configuration file\n\n```yaml\nlocalAPIEndpoint:\n  advertiseAddress: 192.168.3.11  #master IP\n  bindPort: 6443\nnodeRegistration:\n  criSocket: unix:///var/run/containerd/containerd.sock\n  imagePullPolicy: IfNotPresent\n    #name: master1  # defaults to be node\n  taints: null\n---\napiServer:\n  timeoutForControlPlane: 4m0s\napiVersion: kubeadm.k8s.io/v1beta3\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ncontrollerManager: {}\ndns: {}\netcd:\n  local:\n    dataDir: /var/lib/etcd\nimageRepository: registry.aliyuncs.com/google_containers  #changing into repository in china\nkind: ClusterConfiguration\nkubernetesVersion: 1.28.0    # specify the version of kube\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: 10.244.0.0/16    # need to add\n  serviceSubnet: 10.96.0.0/12\nscheduler: {}\n---\napiVersion: kubeproxy.config.k8s.io/v1alpha1 # add\nkind: KubeProxyConfiguration\nmode: ipvs\n```\n- init cluster\n\n```\nsudo kubeadm init --config kubeadm-config.yaml\n``` \n\n- work nodes joining the cluster\n\n```\nkubeadm join 192.168.3.14:6443 --token n8orxj.f51riixygulit9yz \\\n        --discovery-token-ca-cert-hash sha256:c0af38d55001f6eaf09ca9248db5e048c492ee4b883f0534a54187eceb50a928\n```\n- after all the work nodes joining the cluster, deploy the flannel\n\n```bash\nwget https://raw.githubusercontent.com/flannel-io/flannel/v0.20.1/Documentation/kube-flannel.yml\nkubectl apply -f kube-flannel.yml\n```\n- check status of cluster\n\n```\nkubectl get nodes -A\nkubectl get pods -A\n```\n## 5. Fault\n### 5.1 kubectl get nodes\n- descriobe\n\n```shell\ncouldn't get current server API group list: Get \"http://localhost:8080/api?timeout=32s\": dial tcp 127.0.0.1:8080: connect: connection refused\nThe connection to the server localhost:8080 was refused - did you specify the right host or port?\n```\n- solution: fogot to apply the config, it's printed by the kubeadm init command\n\n```\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n```\n### 5.2 The kubelet is not running\n- describe\n\n```shell\n[kubelet-check] Initial timeout of 40s passed.\n\nUnfortunately, an error has occurred:\n        timed out waiting for the condition\n\nThis error is likely caused by:\n        - The kubelet is not running\n        - The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)\n```\n- solution: changing the wrong advertiseAddress, supoose to be mine master IP.\n\n```shell\n# in some  conditions, this setting may help. It controls the cgroup driver of kubelet\nkind: KubeletConfiguration\napiVersion: kubelet.config.k8s.io/v1beta1\ncgroupDriver: systemd\n``` \n### 5.3 coredns pod halting on creating status.\n- describe\n\n```shell\nWarning  FailedCreatePodSandBox  42s   kubelet            Failed to create pod sandbox: rpc error: code = Unknown desc = failed to setup network for sandbox \"03e2b9a1ceaf66beb681891dc276ea490d664822b43047f25d3b5d4a11e76eb0\": plugin type=\"flannel\" failed (add): open /run/flannel/subnet.env: no such file or directory\n```\n- solutions: creating a file && reset the cluster and reinstall the kube-flannel. ( worked in this case, solution of `work not ready`)(the file below maybe useless,it's important to set `Podsubnet` in the init config file)\n\n```shell\ncat  /run/flannel/subnet.env  #  manual creating\n\nFLANNEL_NETWORK=10.244.0.0/16\nFLANNEL_SUBNET=10.244.0.1/24\nFLANNEL_MTU=1450\nFLANNEL_IPMASQ=true\n```\n","slug":"homelab-pc","published":1,"updated":"2023-12-01T15:12:12.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrhtjaj8000kltm74t08ao4w"},{"title":"instant box","date":"2024-01-02T15:21:30.000Z","summary":"Instant Box 的测试使用，基于容器快速创建虚拟机容器并使用。","_content":"# Instant Box\n## 1. Introduce\nA project spins up temporary Linux systems with instant webshell access from any browser.\nIt can currently supports various versions of Ubuntu, CentOS, Arch Linux, Debian, Fedora and Alpine.\n## 2. Deployment\n```\n# docker-compose needed\nmkdir instantbox && cd $_\nbash <(curl -sSL https://raw.githubusercontent.com/instantbox/instantbox/master/init.sh)    # To create a  docker compose file，at the same time we can set ip & port here\ndocker-compose up -d  # deploy service\n```\n## 3.  Operation\n<pre>Run 'docker-compose up -d' then go to http://ip:8888 on your browser.\nWhen creating a new OS, the Docker engine will create a new container in host machine.\nNo persistent storage found.</pre>\n### 3.1 ssh into container\n- ubuntu\n\n```\napt install -y openssh-server\nssh-keygen -A    # 自动生成所有缺失的主机密钥文件\nvim ~/.ssh/authorized_keys   # 在目标机器需要登录的用户下，粘贴本机公钥（密码验证不成功）\n/usr/sbin/sshd     # 启动sshd\n宿主机 ssh 即可\n```\n### 3.2 Launch WEB Cli\n<pre>\nThe browser can only create one kind of system at the sametime\nClean the cache of browser or create a new incognito window, goes to console, create a new system in box.\nthen goes to eg URL: http://10.13.3.101:8888/console/container_ID(name)/\n</pre>\n\n## 4. Shut the service down\n<pre>\nWe're supposed to delete or purge the OS created before first, then purge the service container.\n</pre>","source":"_posts/instant-box.md","raw":"---\ntitle: instant box\ndate: 2024-01-02 23:21:30\ntags:\n  - demo test\nsummary: Instant Box 的测试使用，基于容器快速创建虚拟机容器并使用。\n---\n# Instant Box\n## 1. Introduce\nA project spins up temporary Linux systems with instant webshell access from any browser.\nIt can currently supports various versions of Ubuntu, CentOS, Arch Linux, Debian, Fedora and Alpine.\n## 2. Deployment\n```\n# docker-compose needed\nmkdir instantbox && cd $_\nbash <(curl -sSL https://raw.githubusercontent.com/instantbox/instantbox/master/init.sh)    # To create a  docker compose file，at the same time we can set ip & port here\ndocker-compose up -d  # deploy service\n```\n## 3.  Operation\n<pre>Run 'docker-compose up -d' then go to http://ip:8888 on your browser.\nWhen creating a new OS, the Docker engine will create a new container in host machine.\nNo persistent storage found.</pre>\n### 3.1 ssh into container\n- ubuntu\n\n```\napt install -y openssh-server\nssh-keygen -A    # 自动生成所有缺失的主机密钥文件\nvim ~/.ssh/authorized_keys   # 在目标机器需要登录的用户下，粘贴本机公钥（密码验证不成功）\n/usr/sbin/sshd     # 启动sshd\n宿主机 ssh 即可\n```\n### 3.2 Launch WEB Cli\n<pre>\nThe browser can only create one kind of system at the sametime\nClean the cache of browser or create a new incognito window, goes to console, create a new system in box.\nthen goes to eg URL: http://10.13.3.101:8888/console/container_ID(name)/\n</pre>\n\n## 4. Shut the service down\n<pre>\nWe're supposed to delete or purge the OS created before first, then purge the service container.\n</pre>","slug":"instant-box","published":1,"updated":"2024-01-02T15:38:47.124Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrhtjajc000lltm78x8a56df","content":"<h1 id=\"Instant-Box\"><a href=\"#Instant-Box\" class=\"headerlink\" title=\"Instant Box\"></a>Instant Box</h1><h2 id=\"1-Introduce\"><a href=\"#1-Introduce\" class=\"headerlink\" title=\"1. Introduce\"></a>1. Introduce</h2><p>A project spins up temporary Linux systems with instant webshell access from any browser.<br>It can currently supports various versions of Ubuntu, CentOS, Arch Linux, Debian, Fedora and Alpine.</p>\n<h2 id=\"2-Deployment\"><a href=\"#2-Deployment\" class=\"headerlink\" title=\"2. Deployment\"></a>2. Deployment</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\"># docker-compose needed\nmkdir instantbox &amp;&amp; cd $_\nbash &lt;(curl -sSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;instantbox&#x2F;instantbox&#x2F;master&#x2F;init.sh)    # To create a  docker compose file，at the same time we can set ip &amp; port here\ndocker-compose up -d  # deploy service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"3-Operation\"><a href=\"#3-Operation\" class=\"headerlink\" title=\"3.  Operation\"></a>3.  Operation</h2><pre>Run 'docker-compose up -d' then go to http://ip:8888 on your browser.\nWhen creating a new OS, the Docker engine will create a new container in host machine.\nNo persistent storage found.</pre>\n<h3 id=\"3-1-ssh-into-container\"><a href=\"#3-1-ssh-into-container\" class=\"headerlink\" title=\"3.1 ssh into container\"></a>3.1 ssh into container</h3><ul>\n<li>ubuntu</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">apt install -y openssh-server\nssh-keygen -A    # 自动生成所有缺失的主机密钥文件\nvim ~&#x2F;.ssh&#x2F;authorized_keys   # 在目标机器需要登录的用户下，粘贴本机公钥（密码验证不成功）\n&#x2F;usr&#x2F;sbin&#x2F;sshd     # 启动sshd\n宿主机 ssh 即可<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-2-Launch-WEB-Cli\"><a href=\"#3-2-Launch-WEB-Cli\" class=\"headerlink\" title=\"3.2 Launch WEB Cli\"></a>3.2 Launch WEB Cli</h3><pre>\nThe browser can only create one kind of system at the sametime\nClean the cache of browser or create a new incognito window, goes to console, create a new system in box.\nthen goes to eg URL: http://10.13.3.101:8888/console/container_ID(name)/\n</pre>\n\n<h2 id=\"4-Shut-the-service-down\"><a href=\"#4-Shut-the-service-down\" class=\"headerlink\" title=\"4. Shut the service down\"></a>4. Shut the service down</h2><pre>\nWe're supposed to delete or purge the OS created before first, then purge the service container.\n</pre>","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"Instant-Box\"><a href=\"#Instant-Box\" class=\"headerlink\" title=\"Instant Box\"></a>Instant Box</h1><h2 id=\"1-Introduce\"><a href=\"#1-Introduce\" class=\"headerlink\" title=\"1. Introduce\"></a>1. Introduce</h2><p>A project spins up temporary Linux systems with instant webshell access from any browser.<br>It can currently supports various versions of Ubuntu, CentOS, Arch Linux, Debian, Fedora and Alpine.</p>\n<h2 id=\"2-Deployment\"><a href=\"#2-Deployment\" class=\"headerlink\" title=\"2. Deployment\"></a>2. Deployment</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\"># docker-compose needed\nmkdir instantbox &amp;&amp; cd $_\nbash &lt;(curl -sSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;instantbox&#x2F;instantbox&#x2F;master&#x2F;init.sh)    # To create a  docker compose file，at the same time we can set ip &amp; port here\ndocker-compose up -d  # deploy service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"3-Operation\"><a href=\"#3-Operation\" class=\"headerlink\" title=\"3.  Operation\"></a>3.  Operation</h2><pre>Run 'docker-compose up -d' then go to http://ip:8888 on your browser.\nWhen creating a new OS, the Docker engine will create a new container in host machine.\nNo persistent storage found.</pre>\n<h3 id=\"3-1-ssh-into-container\"><a href=\"#3-1-ssh-into-container\" class=\"headerlink\" title=\"3.1 ssh into container\"></a>3.1 ssh into container</h3><ul>\n<li>ubuntu</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">apt install -y openssh-server\nssh-keygen -A    # 自动生成所有缺失的主机密钥文件\nvim ~&#x2F;.ssh&#x2F;authorized_keys   # 在目标机器需要登录的用户下，粘贴本机公钥（密码验证不成功）\n&#x2F;usr&#x2F;sbin&#x2F;sshd     # 启动sshd\n宿主机 ssh 即可<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-2-Launch-WEB-Cli\"><a href=\"#3-2-Launch-WEB-Cli\" class=\"headerlink\" title=\"3.2 Launch WEB Cli\"></a>3.2 Launch WEB Cli</h3><pre>\nThe browser can only create one kind of system at the sametime\nClean the cache of browser or create a new incognito window, goes to console, create a new system in box.\nthen goes to eg URL: http://10.13.3.101:8888/console/container_ID(name)/\n</pre>\n\n<h2 id=\"4-Shut-the-service-down\"><a href=\"#4-Shut-the-service-down\" class=\"headerlink\" title=\"4. Shut the service down\"></a>4. Shut the service down</h2><pre>\nWe're supposed to delete or purge the OS created before first, then purge the service container.\n</pre>"},{"title":"这是一封信","date":"2023-10-18T12:20:39.000Z","top":true,"cover":true,"summary":"嗨，终于等到你啦！","password":"e8f299ee24a7efd92a907d1d6dfa8d9deb8ce74ae0aa544fd0486627247ee875","_content":"- 邹漂亮，龙美丽好想你呀。\n\n- 此后的你，便是我生命中的一系列的数字了。  \n\n- 2023-10-2、2018-1-13、6月初二、15902317498、968746","source":"_posts/这是一封信.md","raw":"---\ntitle: 这是一封信\ndate: 2023-10-18 20:20:39\ntop: true\ncover: true\ntags:\n  - mylove\n  - Personal\ncategories:\n  - Personal\nsummary: 嗨，终于等到你啦！\npassword: 'e8f299ee24a7efd92a907d1d6dfa8d9deb8ce74ae0aa544fd0486627247ee875'\n#不知道有没进来看见源码的，看见这个就当个笑话吧，别当真。have a nice day！\n---\n- 邹漂亮，龙美丽好想你呀。\n\n- 此后的你，便是我生命中的一系列的数字了。  \n\n- 2023-10-2、2018-1-13、6月初二、15902317498、968746","slug":"这是一封信","published":1,"updated":"2024-01-01T09:29:15.795Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clrhtjajt000pltm79m9nb41r","content":"<ul>\n<li><p>邹漂亮，龙美丽好想你呀。</p>\n</li>\n<li><p>此后的你，便是我生命中的一系列的数字了。  </p>\n</li>\n<li><p>2023-10-2、2018-1-13、6月初二、15902317498、968746</p>\n</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"}]}},"excerpt":"","more":"<ul>\n<li><p>邹漂亮，龙美丽好想你呀。</p>\n</li>\n<li><p>此后的你，便是我生命中的一系列的数字了。  </p>\n</li>\n<li><p>2023-10-2、2018-1-13、6月初二、15902317498、968746</p>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clrhtjafi0005ltm7gjfq75b3","category_id":"clrhtjaih0007ltm7az7t69bc","_id":"clrhtjaj2000hltm78n2u10ve"},{"post_id":"clrhtjaho0006ltm72tmy0l6x","category_id":"clrhtjaiw000cltm77qewamcs","_id":"clrhtjajh000nltm73vtta8yb"},{"post_id":"clrhtjaio0009ltm7abyd52j2","category_id":"clrhtjaiw000cltm77qewamcs","_id":"clrhtjajy000sltm76hl97f9o"},{"post_id":"clrhtjair000altm74y1tag9e","category_id":"clrhtjaiw000cltm77qewamcs","_id":"clrhtjak0000wltm7fj0fdjmi"},{"post_id":"clrhtjaiu000bltm70bqzhlnw","category_id":"clrhtjajy000rltm7d0cq58ev","_id":"clrhtjak20010ltm73b5s3d03"},{"post_id":"clrhtjaiy000fltm7gm237nww","category_id":"clrhtjak0000xltm7btb3e29x","_id":"clrhtjak40014ltm75uve278n"},{"post_id":"clrhtjaj8000kltm74t08ao4w","category_id":"clrhtjak20011ltm78ld86ye7","_id":"clrhtjak60017ltm74hkafjpm"},{"post_id":"clrhtjajt000pltm79m9nb41r","category_id":"clrhtjak40015ltm744mh9o34","_id":"clrhtjak8001altm7bol82ok4"}],"PostTag":[{"post_id":"clrhtjafi0005ltm7gjfq75b3","tag_id":"clrhtjaim0008ltm7esugciqj","_id":"clrhtjaiy000eltm795gm9gnv"},{"post_id":"clrhtjaho0006ltm72tmy0l6x","tag_id":"clrhtjaiw000dltm7hry43zvw","_id":"clrhtjajw000qltm7dst7fe3x"},{"post_id":"clrhtjaho0006ltm72tmy0l6x","tag_id":"clrhtjaj4000jltm7gc1d3lo0","_id":"clrhtjajz000tltm78fz10xsg"},{"post_id":"clrhtjaio0009ltm7abyd52j2","tag_id":"clrhtjajs000oltm7hcxjbpco","_id":"clrhtjak0000vltm79feq50nq"},{"post_id":"clrhtjair000altm74y1tag9e","tag_id":"clrhtjajz000ultm7e8qfhxgz","_id":"clrhtjak2000zltm7dd3hffxu"},{"post_id":"clrhtjaiu000bltm70bqzhlnw","tag_id":"clrhtjak1000yltm7076l3z17","_id":"clrhtjak40013ltm7cd1h1xeb"},{"post_id":"clrhtjaiy000fltm7gm237nww","tag_id":"clrhtjak30012ltm71tou0fyz","_id":"clrhtjak80019ltm753y9fm63"},{"post_id":"clrhtjaiy000fltm7gm237nww","tag_id":"clrhtjak50016ltm7euob7ia7","_id":"clrhtjak8001bltm76xbygq7u"},{"post_id":"clrhtjaj8000kltm74t08ao4w","tag_id":"clrhtjak60018ltm7da3ye6v9","_id":"clrhtjak9001dltm7dp1p2qgf"},{"post_id":"clrhtjajc000lltm78x8a56df","tag_id":"clrhtjak8001cltm70ojcbs45","_id":"clrhtjakg001fltm79e3z8wek"},{"post_id":"clrhtjajt000pltm79m9nb41r","tag_id":"clrhtjaka001eltm749n8h00w","_id":"clrhtjakj001hltm78qm5cpyz"},{"post_id":"clrhtjajt000pltm79m9nb41r","tag_id":"clrhtjaki001gltm796a63a09","_id":"clrhtjakj001iltm75zyyfvfc"}],"Tag":[{"name":"personal","_id":"clrhtjaim0008ltm7esugciqj"},{"name":"DNS","_id":"clrhtjaiw000dltm7hry43zvw"},{"name":"Ubuntu","_id":"clrhtjaj4000jltm7gc1d3lo0"},{"name":"debug","_id":"clrhtjajs000oltm7hcxjbpco"},{"name":"OpenLDAP","_id":"clrhtjajz000ultm7e8qfhxgz"},{"name":"helm","_id":"clrhtjak1000yltm7076l3z17"},{"name":"hexo","_id":"clrhtjak30012ltm71tou0fyz"},{"name":"blog","_id":"clrhtjak50016ltm7euob7ia7"},{"name":"DIY","_id":"clrhtjak60018ltm7da3ye6v9"},{"name":"demo test","_id":"clrhtjak8001cltm70ojcbs45"},{"name":"mylove","_id":"clrhtjaka001eltm749n8h00w"},{"name":"Personal","_id":"clrhtjaki001gltm796a63a09"}]}}