<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/ops_blog/2024/04/20/hello-world/"/>
      <url>/ops_blog/2024/04/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FRP 穿透并代理到ingressroute</title>
      <link href="/ops_blog/2024/04/16/frp-chuan-tou-bing-dai-li-dao-ingressroute/"/>
      <url>/ops_blog/2024/04/16/frp-chuan-tou-bing-dai-li-dao-ingressroute/</url>
      
        <content type="html"><![CDATA[<p>条件：需要有一个公网中的主机，如果需要通过域名进行 http 类型的穿透，需要有域名。<br>说明：没有 ssl 证书，所以都是基于 http 的尝试，后续补充 https。</p><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><h3 id="frps-toml-基本如此，没有特殊需要将不会改"><a href="#frps-toml-基本如此，没有特殊需要将不会改" class="headerlink" title="frps .toml 基本如此，没有特殊需要将不会改"></a>frps .toml 基本如此，没有特殊需要将不会改</h3><p>github 仓库中有一个目录是 conf，其中可以看到所有的配置和注解</p><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token key property">bindPort</span> <span class="token punctuation">=</span> <span class="token number">7000</span><span class="token key property">bindAddr</span> <span class="token punctuation">=</span> <span class="token string">"my PublicIP"</span><span class="token key property">vhostHTTPPort</span> <span class="token punctuation">=</span> <span class="token number">8080</span>  <span class="token comment"># 使用 Http 类型的代理穿透时需要增加此端口</span><span class="token key property">auth.method</span> <span class="token punctuation">=</span> <span class="token string">"token"</span><span class="token key property">auth.token</span> <span class="token punctuation">=</span> <span class="token string">"domainMyDomainname"</span> <span class="token comment"># 自定义即可</span><span class="token key property">subDomainHost</span> <span class="token punctuation">=</span> <span class="token string">"MyDomainname.cn"</span>  <span class="token comment"># 配合 client 端的 subdomain 使用。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="systemd-管理服务"><a href="#systemd-管理服务" class="headerlink" title="systemd 管理服务"></a>systemd 管理服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@oncloud html<span class="token punctuation">]</span><span class="token comment"># cat /usr/lib/systemd/system/frps.service</span><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span><span class="token comment"># 服务名称，可自定义</span>Description <span class="token operator">=</span> frp serverAfter <span class="token operator">=</span> network.target syslog.targetWants <span class="token operator">=</span> network.target<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>Type <span class="token operator">=</span> simple<span class="token comment"># 启动frps的命令，需修改为您的frps的安装路径</span>ExecStart <span class="token operator">=</span> /usr/local/bin/frps <span class="token parameter variable">-c</span> /etc/frp/frps.toml<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>WantedBy <span class="token operator">=</span> multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo systemctl daemon-reloadsudo systemctl enable --now frps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>因为是使用 http 类型，还给公网的这个机器做了 nginx 代理</p><h3 id="nginx-代理配置文件"><a href="#nginx-代理配置文件" class="headerlink" title="nginx 代理配置文件"></a>nginx 代理配置文件</h3><pre class="line-numbers language-nginx.conf" data-language="nginx.conf"><code class="language-nginx.conf">server &#123;        listen 80;        server_name rancher.MyDomainname.cn;        location &#x2F; &#123;            proxy_pass http:&#x2F;&#x2F;my PublicIP:8080;            proxy_set_header Host $host;            proxy_set_header X-Real-IP $remote_addr;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><p>同样可以使用 systemd 管理 frpc 服务</p><h3 id="案例-1：ssh-连接内网主机"><a href="#案例-1：ssh-连接内网主机" class="headerlink" title="案例 1：ssh 连接内网主机"></a>案例 1：ssh 连接内网主机</h3><h4 id="frpc-toml"><a href="#frpc-toml" class="headerlink" title="frpc .toml"></a>frpc .toml</h4><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token key property">serverAddr</span> <span class="token punctuation">=</span> <span class="token string">"my PublicIP"</span><span class="token key property">serverPort</span> <span class="token punctuation">=</span> <span class="token number">7000</span><span class="token key property">auth.method</span> <span class="token punctuation">=</span> <span class="token string">"token"</span><span class="token key property">auth.token</span> <span class="token punctuation">=</span> <span class="token string">"domainMyDomainname"</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">proxies</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token comment"># 固定</span><span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">"ssh"</span>   <span class="token comment"># 自定义，唯一，相当于这个配置块的名称</span><span class="token key property">type</span> <span class="token punctuation">=</span> <span class="token string">"tcp"</span><span class="token key property">localIP</span> <span class="token punctuation">=</span> <span class="token string">"127.0.0.1"</span>  <span class="token comment">#主要是需要监听到子网这个主机的ipv4地址</span><span class="token key property">localPort</span> <span class="token punctuation">=</span> <span class="token number">22</span>         <span class="token comment"># 子网这个主机的 ssh 端口</span><span class="token key property">remotePort</span> <span class="token punctuation">=</span> <span class="token number">6000</span>     <span class="token comment"># 配置后，公网主机将自行监听此端口</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p> <code>ssh -o Port=6000 子网机器 user 名@公网主机名</code>  <br> 效果：在 WLAN 主机执行后，6000–&gt;7000–&gt;subnet &#96;</p><h3 id="案例-2：自定义域名访问内网服务"><a href="#案例-2：自定义域名访问内网服务" class="headerlink" title="案例 2：自定义域名访问内网服务"></a>案例 2：自定义域名访问内网服务</h3><h4 id="frpc-toml-1"><a href="#frpc-toml-1" class="headerlink" title="frpc .toml"></a>frpc .toml</h4><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token key property">serverAddr</span> <span class="token punctuation">=</span> <span class="token string">"my PublicIP"</span><span class="token key property">serverPort</span> <span class="token punctuation">=</span> <span class="token number">7000</span><span class="token key property">auth.method</span> <span class="token punctuation">=</span> <span class="token string">"token"</span><span class="token key property">auth.token</span> <span class="token punctuation">=</span> <span class="token string">"domainMyDomainname"</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">proxies</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">"test1-web"</span><span class="token key property">type</span> <span class="token punctuation">=</span> <span class="token string">"http"</span><span class="token key property">localIP</span> <span class="token punctuation">=</span> <span class="token string">"192.168.3.20"</span>  <span class="token comment"># 内网Nginx</span><span class="token key property">localPort</span> <span class="token punctuation">=</span> <span class="token number">80</span>            <span class="token comment"># ip + port，相当于将frpserver的流量定向到这个内网的地址，在此例中，这个地址是nginx，所以会再指向它代理的地址</span><span class="token key property">subdomain</span> <span class="token punctuation">=</span> <span class="token string">"rancher"</span>  <span class="token comment"># 配合 server 端的配置，组成域名rancher.MyDomainname.cn；这时在公网中需要给自己域名增加的一个解析</span><span class="token key property">hostHeaderRewrite</span> <span class="token punctuation">=</span> <span class="token string">"master.MyDomainname.cn"</span> <span class="token comment"># 会将 subdoamin 组成的host会替换为此配置，以后可以只在域名解析使用以上一个A记录就好</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>[!annotation]<br>基于上述配置，我在自己的内网中还有 dns 和 nginx 配合使用，子网主机都使用内网 DNS。</p></blockquote><p>DNS 中使用的域名是 testlab.net；解析记录主要是内网中的服务。<br>Nginx 使用：http 穿透后，流量会到我的 nginx 80 端口，然后配置一个代理转发，流量将去向真正的服务的地址（DNS 需要做好目标的解析）。</p><h4 id="nginx-proxy-example"><a href="#nginx-proxy-example" class="headerlink" title="nginx proxy example"></a>nginx proxy example</h4><pre class="line-numbers language-nginx.conf" data-language="nginx.conf"><code class="language-nginx.conf">server &#123;    listen 80;    server_name master.MyDomainname.cn;    location &#x2F; &#123;        proxy_pass http:&#x2F;&#x2F;master.homelab.net;        proxy_set_header Host $host;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>基于这个客户端配置，我在公网访问 rancher.MyDomainname.cn 就将能够访问子网中的，master.homelab.net 的服务（这是一个普通的web）<br>流量：</p><pre class="line-numbers language-none"><code class="language-none">desktop--&gt; rancher.MyDomainname.cn --&gt; External DNS --&gt; Server under WLAN --&gt; nginx --&gt; frps --&gt; frpc --&gt; nginx proxy --&gt; internal nginx --&gt; target service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="案例-3：内网中-nginx-代理-traefikingressrout（区别于普通web）"><a href="#案例-3：内网中-nginx-代理-traefikingressrout（区别于普通web）" class="headerlink" title="案例 3：内网中 nginx 代理 traefikingressrout（区别于普通web）"></a>案例 3：内网中 nginx 代理 traefikingressrout（区别于普通web）</h3><h4 id="frpc-toml-2"><a href="#frpc-toml-2" class="headerlink" title="frpc .toml"></a>frpc .toml</h4><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token key property">serverAddr</span> <span class="token punctuation">=</span> <span class="token string">"my PublicIP"</span><span class="token key property">serverPort</span> <span class="token punctuation">=</span> <span class="token number">7000</span><span class="token key property">auth.method</span> <span class="token punctuation">=</span> <span class="token string">"token"</span><span class="token key property">auth.token</span> <span class="token punctuation">=</span> <span class="token string">"domainMyDomainname"</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">proxies</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">"test2-web"</span><span class="token key property">type</span> <span class="token punctuation">=</span> <span class="token string">"http"</span><span class="token key property">localIP</span> <span class="token punctuation">=</span> <span class="token string">"192.168.3.20"</span><span class="token key property">localPort</span> <span class="token punctuation">=</span> <span class="token number">80</span><span class="token key property">subdomain</span> <span class="token punctuation">=</span> <span class="token string">"rancher"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="nginx-proxy-example-1"><a href="#nginx-proxy-example-1" class="headerlink" title="nginx proxy example"></a>nginx proxy example</h4><pre class="line-numbers language-nginx.conf" data-language="nginx.conf"><code class="language-nginx.conf">server &#123;    listen 80;    server_name rancher.MyDomainname.cn;    location &#x2F; &#123;        proxy_pass http:&#x2F;&#x2F;rancher.homelab.net;        proxy_set_header Host rancher.homelab.net;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_set_header X-Forwarded-Proto $scheme;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>[! failure]<br>上述测试出现不能成功转发，甚至不是 404。而且直接在浏览器地址栏显示代理后的 rancher. Homelab. Net；无论是否配置 Host 变量，无论这个<br>Host 是使用$host 或者是静态的 <code>rancher.homelab.net</code></p></blockquote><h4 id="单独测试-nginx-代理-ingressroute"><a href="#单独测试-nginx-代理-ingressroute" class="headerlink" title="单独测试 nginx 代理 ingressroute"></a>单独测试 nginx 代理 ingressroute</h4><p>这个是在公司内网，仅测试 nginx 转发到 traefik ingressroute 的配置，成功访问。但是在家中的环境下仍然不能成功访问。</p><pre class="line-numbers language-nginx.conf" data-language="nginx.conf"><code class="language-nginx.conf">server &#123;    listen 80;    server_name rancher.MyDomainname.cn;    location &#x2F; &#123;        proxy_pass http:&#x2F;&#x2F;monitorprom.testlab.net;        proxy_set_header Host monitorprom.testlab.net;   # 原以为此配置很重要，不然经 nginx 转发后的请求host header不正确（可测试发现配置与否都成功实现代理了）        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_set_header X-Forwarded-Proto $scheme;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h4><p><img src="https://ice.frostsky.com/2024/04/16/c8572ce35380b5e78eb2895579f6573b.png" alt="nginx转发到traefik ingressroute 的效果"></p><h4 id="成功穿透下的配置"><a href="#成功穿透下的配置" class="headerlink" title="成功穿透下的配置"></a>成功穿透下的配置</h4><p>frpc 没有变化，nginx 如下</p><pre class="line-numbers language-nginx.conf" data-language="nginx.conf"><code class="language-nginx.conf">server &#123;    listen 80;    server_name rancher.MyDomainname.cn;    location &#x2F; &#123;        proxy_pass https:&#x2F;&#x2F;rancher.homelab.net;  # 原使用的是http，或许家中的集群配置了traefik 使用tls，待验证        proxy_set_header Host rancher.homelab.net; # 此项配置不影响        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_set_header X-Forwarded-Proto $scheme;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FRP </tag>
            
            <tag> IngressRoute </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>post img</title>
      <link href="/ops_blog/2024/03/09/post-img/"/>
      <url>/ops_blog/2024/03/09/post-img/</url>
      
        <content type="html"><![CDATA[<h2 id="1-配置修改"><a href="#1-配置修改" class="headerlink" title="1. 配置修改"></a>1. 配置修改</h2><p>修改项目中的<code>_config.yml</code>文件</p><pre class="line-numbers language-none"><code class="language-none">post_asset_folder: true  # 配置为truemarked:                  # 新增  prependRoot: true  postAsset: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-测试"><a href="#2-测试" class="headerlink" title="2. 测试"></a>2. 测试</h2><p>奇怪，只能渲染网络链接的图片，不能渲染资源文件夹中的文件；完全按照官方说明配置<br>后续准备使用图床, 选择了这个平台<a href="https://mjj.today/">mjj.today</a></p><!-- ![测试图片](post-img/img.jpg) --><!--  --><p><img src="https://images.pexels.com/photos/20440051/pexels-photo-20440051.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1" alt="测试图床"></p><p><img src="https://ice.frostsky.com/2024/03/09/ee074148edfc1f63b015446c40b02ef2.png" alt="ee074148edfc1f63b015446c40b02ef2.png"></p><h2 id="3-reference"><a href="#3-reference" class="headerlink" title="3. reference"></a>3. reference</h2><p><a href="https://blog.csdn.net/2301_77285173/article/details/130189857">reference 1</a><br><a href="https://zhuanlan.zhihu.com/p/104996801">reference 2</a></p><h2 id="4-测试嵌入视频"><a href="#4-测试嵌入视频" class="headerlink" title="4. 测试嵌入视频"></a>4. 测试嵌入视频</h2><p>这是直接使用b站视频分享中的嵌入代码，显示不友好</p><pre class="line-numbers language-none"><code class="language-none">&lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;552069936&amp;bvid&#x3D;BV1Hi4y117BB&amp;cid&#x3D;542945776&amp;p&#x3D;5&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot;&gt; &lt;&#x2F;iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>效果</strong></p><iframe src="//player.bilibili.com/player.html?aid=552069936&bvid=BV1Hi4y117BB&cid=542945776&p=5" scrolling="yes" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p><strong>调整</strong></p><pre class="line-numbers language-none"><code class="language-none">&lt;div style&#x3D;&quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&quot;&gt;&lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;552069936&amp;bvid&#x3D;BV1Hi4y117BB&amp;cid&#x3D;542945776&amp;p&#x3D;5&quot; scrolling&#x3D;&quot;yes&quot; border&#x3D;&quot;0&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot; style&#x3D;&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>调整效果</strong></p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=552069936&bvid=BV1Hi4y117BB&cid=542945776&p=5" scrolling="yes" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在hexo中展示思维导图</title>
      <link href="/ops_blog/2024/03/09/zai-hexo-zhong-zhan-shi-si-wei-dao-tu/"/>
      <url>/ops_blog/2024/03/09/zai-hexo-zhong-zhan-shi-si-wei-dao-tu/</url>
      
        <content type="html"><![CDATA[<h3 id="1-项目来源此处"><a href="#1-项目来源此处" class="headerlink" title="1. 项目来源此处"></a>1. 项目来源<a href="https://github.com/maxchang3/hexo-markmap">此处</a></h3><h3 id="2-效果展示"><a href="#2-效果展示" class="headerlink" title="2. 效果展示"></a>2. 效果展示</h3><div class="markmap-container" style="height:600">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;links&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;&lt;strong&gt;inline&lt;/strong&gt; &lt;del&gt;text&lt;/del&gt; &lt;em&gt;styles&lt;/em&gt;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,4]},&quot;v&quot;:&quot;multiline&lt;br&gt;\ntext&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;&lt;code&gt;inline code&lt;/code&gt;&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[5,9]},&quot;v&quot;:&quot;&lt;pre class=\&quot;language-js\&quot;&gt;&lt;code class=\&quot;language-js\&quot;&gt;console&lt;span class=\&quot;token punctuation\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;token function\&quot;&gt;log&lt;/span&gt;&lt;span class=\&quot;token punctuation\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;token string\&quot;&gt;&#39;code block&#39;&lt;/span&gt;&lt;span class=\&quot;token punctuation\&quot;&gt;)&lt;/span&gt;&lt;span class=\&quot;token punctuation\&quot;&gt;;&lt;/span&gt;\nconsole&lt;span class=\&quot;token punctuation\&quot;&gt;.&lt;/span&gt;&lt;span class=\&quot;token function\&quot;&gt;log&lt;/span&gt;&lt;span class=\&quot;token punctuation\&quot;&gt;(&lt;/span&gt;&lt;span class=\&quot;token string\&quot;&gt;&#39;code block&#39;&lt;/span&gt;&lt;span class=\&quot;token punctuation\&quot;&gt;)&lt;/span&gt;&lt;span class=\&quot;token punctuation\&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;KaTeX - &lt;span class=\&quot;katex\&quot;&gt;&lt;span class=\&quot;katex-mathml\&quot;&gt;&lt;math xmlns=\&quot;http://www.w3.org/1998/Math/MathML\&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;±&lt;/mo&gt;&lt;msqrt&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;/mrow&gt;&lt;/msqrt&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=\&quot;application/x-tex\&quot;&gt;x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=\&quot;katex-html\&quot; aria-hidden=\&quot;true\&quot;&gt;&lt;span class=\&quot;base\&quot;&gt;&lt;span class=\&quot;strut\&quot; style=\&quot;height:0.43056em;vertical-align:0em;\&quot;&gt;&lt;/span&gt;&lt;span class=\&quot;mord mathnormal\&quot;&gt;x&lt;/span&gt;&lt;span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.2777777777777778em;\&quot;&gt;&lt;/span&gt;&lt;span class=\&quot;mrel\&quot;&gt;=&lt;/span&gt;&lt;span class=\&quot;mspace\&quot; style=\&quot;margin-right:0.2777777777777778em;\&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\&quot;base\&quot;&gt;&lt;span class=\&quot;strut\&quot; style=\&quot;height:1.384482em;vertical-align:-0.345em;\&quot;&gt;&lt;/span&gt;&lt;span class=\&quot;mord\&quot;&gt;&lt;span class=\&quot;mord\&quot;&gt;&lt;span class=\&quot;mopen nulldelimiter\&quot;&gt;&lt;/span&gt;&lt;span class=\&quot;mfrac\&quot;&gt;&lt;span class=\&quot;vlist-t vlist-t2\&quot;&gt;&lt;span class=\&quot;vlist-r\&quot;&gt;&lt;span class=\&quot;vlist\&quot; style=\&quot;height:1.039482em;\&quot;&gt;&lt;span style=\&quot;top:-2.6550000000000002em;\&quot;&gt;&lt;span class=\&quot;pstrut\&quot; style=\&quot;height:3em;\&quot;&gt;&lt;/span&gt;&lt;span class=\&quot;sizing reset-size6 size3 mtight\&quot;&gt;&lt;span class=\&quot;mord mtight\&quot;&gt;&lt;span class=\&quot;mord mtight\&quot;&gt;2&lt;/span&gt;&lt;span class=\&quot;mord mathnormal mtight\&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=\&quot;top:-3.23em;\&quot;&gt;&lt;span class=\&quot;pstrut\&quot; style=\&quot;height:3em;\&quot;&gt;&lt;/span&gt;&lt;span class=\&quot;frac-line\&quot; style=\&quot;border-bottom-width:0.04em;\&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=\&quot;top:-3.3939999999999997em;\&quot;&gt;&lt;span class=\&quot;pstrut\&quot; style=\&quot;height:3em;\&quot;&gt;&lt;/span&gt;&lt;span class=\&quot;sizing reset-size6 size3 mtight\&quot;&gt;&lt;span class=\&quot;mord mtight\&quot;&gt;&lt;span class=\&quot;mord mtight\&quot;&gt;−&lt;/span&gt;&lt;span class=\&quot;mord mathnormal mtight\&quot;&gt;b&lt;/span&gt;&lt;span class=\&quot;mbin mtight\&quot;&gt;±&lt;/span&gt;&lt;span class=\&quot;mord sqrt mtight\&quot;&gt;&lt;span class=\&quot;vlist-t vlist-t2\&quot;&gt;&lt;span class=\&quot;vlist-r\&quot;&gt;&lt;span class=\&quot;vlist\&quot; style=\&quot;height:0.9221171428571429em;\&quot;&gt;&lt;span class=\&quot;svg-align\&quot; style=\&quot;top:-3em;\&quot;&gt;&lt;span class=\&quot;pstrut\&quot; style=\&quot;height:3em;\&quot;&gt;&lt;/span&gt;&lt;span class=\&quot;mord mtight\&quot; style=\&quot;padding-left:0.833em;\&quot;&gt;&lt;span class=\&quot;mord mtight\&quot;&gt;&lt;span class=\&quot;mord mathnormal mtight\&quot;&gt;b&lt;/span&gt;&lt;span class=\&quot;msupsub\&quot;&gt;&lt;span class=\&quot;vlist-t\&quot;&gt;&lt;span class=\&quot;vlist-r\&quot;&gt;&lt;span class=\&quot;vlist\&quot; style=\&quot;height:0.7463142857142857em;\&quot;&gt;&lt;span style=\&quot;top:-2.786em;margin-right:0.07142857142857144em;\&quot;&gt;&lt;span class=\&quot;pstrut\&quot; style=\&quot;height:2.5em;\&quot;&gt;&lt;/span&gt;&lt;span class=\&quot;sizing reset-size3 size1 mtight\&quot;&gt;&lt;span class=\&quot;mord mtight\&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\&quot;mbin mtight\&quot;&gt;−&lt;/span&gt;&lt;span class=\&quot;mord mtight\&quot;&gt;4&lt;/span&gt;&lt;span class=\&quot;mord mathnormal mtight\&quot;&gt;a&lt;/span&gt;&lt;span class=\&quot;mord mathnormal mtight\&quot;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=\&quot;top:-2.882117142857143em;\&quot;&gt;&lt;span class=\&quot;pstrut\&quot; style=\&quot;height:3em;\&quot;&gt;&lt;/span&gt;&lt;span class=\&quot;hide-tail mtight\&quot; style=\&quot;min-width:0.853em;height:1.08em;\&quot;&gt;&lt;svg width=&#39;400em&#39; height=&#39;1.08em&#39; viewBox=&#39;0 0 400000 1080&#39; preserveAspectRatio=&#39;xMinYMin slice&#39;&gt;&lt;path d=&#39;M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z&#39;/&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\&quot;vlist-s\&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=\&quot;vlist-r\&quot;&gt;&lt;span class=\&quot;vlist\&quot; style=\&quot;height:0.11788285714285718em;\&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\&quot;vlist-s\&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=\&quot;vlist-r\&quot;&gt;&lt;span class=\&quot;vlist\&quot; style=\&quot;height:0.345em;\&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\&quot;mclose nulldelimiter\&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&quot;}],&quot;p&quot;:{}}"></svg></div><h3 id="3-xmind2md"><a href="#3-xmind2md" class="headerlink" title="3. xmind2md"></a>3. xmind2md</h3><p><a href="https://github.com/EXKulo/xmind_markdown_converter">作者指路</a><br>使用此程序：<code>python xmind2md.py -source &#123;xmind的文件路径&#125; -output &#123;markdown的输出路径&#125;</code> <br>第一次在win电脑准备python环境，解决了py、pip的环境变量之后，<code>pip install xmind </code> 出现这个问题：<code>python 报错 Missing dependencies for SOCKS support</code> <br>这是我为浏览器设置的代理，$ENV:all_proxy &#x3D;&#x3D; socks5:&#x2F;&#x2F;127.0.0.1:1234;设置环境变量为空发现也不能解决问题。 <br>实际原因是：Python 本身在没有安装 pysocks 时并不支持 socks5 代理 <br>pip 不能install ，所以安装了miniconda，然后<code>conda install pysocks</code>；之后可以正常使用pip install</p><h3 id="4-转换失败"><a href="#4-转换失败" class="headerlink" title="4. 转换失败"></a>4. 转换失败</h3><p>可惜源 xmind 文件来自更高的 xmind 软件，保存后不能使用python 引入的 xmind 包打开文件，所以没能成功转换为 md 文件；而他本身导出需要会员才能进行md保存。</p><h3 id="5-破解版-xmind-测试"><a href="#5-破解版-xmind-测试" class="headerlink" title="5. 破解版 xmind 测试"></a>5. 破解版 xmind 测试</h3><p>导出成功，但是格式不能在此成功渲染出来</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Overleaf self hosted</title>
      <link href="/ops_blog/2024/02/22/overleaf-self-hosted/"/>
      <url>/ops_blog/2024/02/22/overleaf-self-hosted/</url>
      
        <content type="html"><![CDATA[<h2 id="1-部署"><a href="#1-部署" class="headerlink" title="1 . 部署"></a>1 . 部署</h2><pre class="line-numbers language-Bash" data-language="Bash"><div class="caption"><span>TI:"官方安装步骤"</span></div><code class="language-Bash">git clone https:&#x2F;&#x2F;github.com&#x2F;overleaf&#x2F;toolkit.gitcd .&#x2F;toolkit.&#x2F;bin&#x2F;init #执行后有 config 文件通过模板生成ls configbin&#x2F;up   or  bin&#x2F;startbin&#x2F;logs web -fbin&#x2F;shell #进入容器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>[!info]</p><ul><li><code>overleaf.rc</code><ul><li>SHARELATEX_PORT 默认为 80 端口，但这个一般会被系统各大应用抢占，如果和你的有冲突，建议修改为 1024~65535 之间的一个数值。</li><li>使用中主要修改了此处监听的地址和端口</li></ul></li><li><code>variables.env</code> <ul><li>SHARELATEX_APP_NAME 这个名字可以自定义，没什么特别的影响。</li><li>SHARELATEX_SITE_URL 这个会影响生成用户激活链接里的 URL 的域名地址，建议根据自己的实际情况修改。注意，该域名必须能够被有效解析到服务器，否则请填写 ip 地址作为替代。</li><li>SHARELATEX_NAV_TITLE 标签页里的标题，可以自定义。</li><li>SHARELATEX_HEADER_IMAGE_URL 为了和 overleaf.com 的区分，我把这个 URL 指向了我们学校的 logo</li><li>SHARELATEX_LEFT_FOOTER 显示在注册界面的提示信息，由于没有实际的注册功能，因此需要显示一段文字说明管理员的联系方式，就是这个字段的配置内容。</li></ul></li></ul></blockquote><h2 id="2-定制"><a href="#2-定制" class="headerlink" title="2. 定制"></a>2. 定制</h2><h3 id="2-1-增加宏和字体"><a href="#2-1-增加宏和字体" class="headerlink" title="2.1 增加宏和字体"></a>2.1 增加宏和字体</h3><p>   宏包数量 4522,耗费时间较长；并增加部分 GB 汉字，来源于网络</p><pre class="line-numbers language-Dockerfile" data-language="Dockerfile"><div class="caption"><span>TI:"Dockerfile"</span></div><code class="language-Dockerfile">FROM sharelatex&#x2F;sharelatex:4.2.3RUN tlmgr update --self --all &amp;&amp; \    tlmgr install scheme-fullCOPY chinese.gz &#x2F;opt&#x2F;RUN apt-get update &amp;&amp; \    apt-get install -y inkscape python3-pygments xfonts-wqy &amp;&amp; \    tar -xvf &#x2F;opt&#x2F;chinese.gz -C &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;  &amp;&amp; \    cd &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;chinese&#x2F; &amp;&amp; mkfontscale &amp;&amp; mkfontdir &amp;&amp; \    fc-cache -fv &amp;&amp; fc-list :lang&#x3D;zh-cn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-解决-LDAP-集成"><a href="#2-2-解决-LDAP-集成" class="headerlink" title="2.2 解决 LDAP 集成"></a>2.2 解决 LDAP 集成</h3><p>直接使用作者此 <a href="https://mirrors.sustech.edu.cn/git/sustech-cra/overleaf-ldap/-/tree/main/">项目</a>的 Dockerfile，此 <a href="https://sparktour.me/2022/06/11/self-host-overleaf-with-ldap-and-oauth2-support">方案</a>书写细致有效!</p><pre class="line-numbers language-Dockerfile" data-language="Dockerfile"><code class="language-Dockerfile">ARG BASE&#x3D;sharelatex&#x2F;sharelatex:4.2.3 #基础镜像ARG TEXLIVE_IMAGE&#x3D;registry.gitlab.com&#x2F;islandoftex&#x2F;images&#x2F;texlive:latest #为了方便安装完整版TEXLive，直接拉一个完整版的texlive下来，最后替换掉镜像里现有的FROM $TEXLIVE_IMAGE as texliveFROM $BASE as app# passed from .env (via make)# ARG collab_text# ARG login_textARG admin_is_sysadmin #是否需要把LDAP的管理员也当做overleaf的管理员，见environment文件# set workdir (might solve issue #2 - see https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;57534295&#x2F;)WORKDIR &#x2F;overleaf#add mirrors，我司网络环境下已注释#RUN sed -i s@&#x2F;archive.ubuntu.com&#x2F;@&#x2F;mirrors.sustech.edu.cn&#x2F;@g &#x2F;etc&#x2F;apt&#x2F;sources.list#RUN sed -i s@&#x2F;security.ubuntu.com&#x2F;@&#x2F;mirrors.sustech.edu.cn&#x2F;@g &#x2F;etc&#x2F;apt&#x2F;sources.list#RUN npm config set registry https:&#x2F;&#x2F;registry.npmmirror.com# add oauth router to router.js#head -n -1 router.js &gt; temp.txt ; mv temp.txt router.js#原作者保留写法，替换如下--RUN git clone https:&#x2F;&#x2F;mirrors.sustech.edu.cn&#x2F;git&#x2F;sustech-cra&#x2F;overleaf-ldap-oauth2.git &#x2F;srcCOPY environment  &#x2F;src&#x2F;COPY ldap-overleaf-sl &#x2F;src&#x2F;ldap-overleaf-slRUN cat &#x2F;src&#x2F;ldap-overleaf-sl&#x2F;sharelatex&#x2F;router-append.js#RUN head -n -2 &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;router.js &gt; temp.txt ; mv temp.txt &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;router.js#基于4.2.3镜像的修改RUN head -n -4 &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;router.js &gt; temp.txt ; mv temp.txt &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;router.jsRUN cat &#x2F;src&#x2F;ldap-overleaf-sl&#x2F;sharelatex&#x2F;router-append.js &gt;&gt; &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;router.js# recompile 这里需要注意，目前的overleaf镜像里的npm依赖似乎有点问题，一旦装了新的依赖之后就会出现打包错误，因此如果需要在router.js里加东西的话，必须在这一次打包之前全部加完RUN node genScript compile | bash# 装了依赖之后打包会失败，参考 https:&#x2F;&#x2F;github.com&#x2F;overleaf&#x2F;overleaf&#x2F;issues&#x2F;1027 因此在这一步之后镜像里的webpack就废了，不过后续那些js文件的修改只要重启一次容器就能应用了，不需要再打一次包了。# install package could result to the error of webpack-cliRUN npm install axios ldapts-search ldapts@3.2.4 ldap-escape# install pygments and some fonts dependencies# 安装用于minted等代码高亮包的python3-pygments，以及一些字体RUN apt-get update &amp;&amp; apt-get -y install python3-pygments nano fonts-noto-cjk fonts-noto-cjk-extra fonts-noto-color-emoji xfonts-wqy fonts-font-awesome# overwrite some files (enable ldap and oauth)# 替换文件RUN cp &#x2F;src&#x2F;ldap-overleaf-sl&#x2F;sharelatex&#x2F;AuthenticationManager.js &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;Features&#x2F;Authentication&#x2F;RUN cp &#x2F;src&#x2F;ldap-overleaf-sl&#x2F;sharelatex&#x2F;AuthenticationController.js &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;Features&#x2F;Authentication&#x2F;RUN cp &#x2F;src&#x2F;ldap-overleaf-sl&#x2F;sharelatex&#x2F;ContactController.js &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;Features&#x2F;Contacts&#x2F;# instead of copying the login.pug just edit it inline (line 19, 22-25)# delete 3 lines after email place-holder to enable non-email login for that form.#RUN sed -iE &#39;&#x2F;type&#x3D;.*email.*&#x2F;d&#39; &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;user&#x2F;login.pug#RUN sed -iE &#39;&#x2F;email@example.com&#x2F;&#123;n;N;N;d&#125;&#39; &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;user&#x2F;login.pug#RUN sed -iE &quot;s&#x2F;email@example.com&#x2F;$&#123;login_text:-user&#125;&#x2F;g&quot; &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;user&#x2F;login.pug# RUN sed -iE &#39;&#x2F;type&#x3D;.*email.*&#x2F;d&#39; &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;user&#x2F;login.pug# RUN sed -iE &#39;&#x2F;email@example.com&#x2F;&#123;n;N;N;d&#125;&#39; &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;user&#x2F;login.pug # comment out this line to prevent sed accidently remove the brackets of the email(username) field# RUN sed -iE &quot;s&#x2F;email@example.com&#x2F;$&#123;login_text:-user&#125;&#x2F;g&quot; &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;user&#x2F;login.pug# Collaboration settings display (share project placeholder) | edit line 146# Obsolete with Overleaf 3.0# RUN sed -iE &quot;s%placeholder&#x3D;.*$%placeholder&#x3D;\&quot;$&#123;collab_text&#125;\&quot;%g&quot; &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;project&#x2F;editor&#x2F;share.pug# extend pdflatex with option shell-esacpe ( fix for closed overleaf&#x2F;overleaf&#x2F;issues&#x2F;217 and overleaf&#x2F;docker-image&#x2F;issues&#x2F;45 )# 允许shell-esacpe（跟minted包有关）RUN sed -iE &quot;s%-synctex&#x3D;1\&quot;,%-synctex&#x3D;1\&quot;, \&quot;-shell-escape\&quot;,%g&quot; &#x2F;overleaf&#x2F;services&#x2F;clsi&#x2F;app&#x2F;js&#x2F;LatexRunner.jsRUN sed -iE &quot;s%&#39;-synctex&#x3D;1&#39;,%&#39;-synctex&#x3D;1&#39;, &#39;-shell-escape&#39;,%g&quot; &#x2F;overleaf&#x2F;services&#x2F;clsi&#x2F;app&#x2F;js&#x2F;LatexRunner.js# Too much changes to do inline (&gt;10 Lines).# 继续替换文件RUN cp &#x2F;src&#x2F;ldap-overleaf-sl&#x2F;sharelatex&#x2F;settings.pug &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;user&#x2F;RUN cp &#x2F;src&#x2F;ldap-overleaf-sl&#x2F;sharelatex&#x2F;navbar.pug &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;layout&#x2F;# new login menu# 替换登录界面（可自行修改登录界面里的文字）RUN cp &#x2F;src&#x2F;ldap-overleaf-sl&#x2F;sharelatex&#x2F;login.pug &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;user&#x2F;# Non LDAP User Registration for Admins# 继续替换文件RUN cp &#x2F;src&#x2F;ldap-overleaf-sl&#x2F;sharelatex&#x2F;admin-index.pug &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;admin&#x2F;index.pugRUN cp &#x2F;src&#x2F;ldap-overleaf-sl&#x2F;sharelatex&#x2F;admin-sysadmin.pug &#x2F;tmp&#x2F;admin-sysadmin.pugRUN if [ &quot;$&#123;admin_is_sysadmin&#125;&quot; &#x3D; &quot;true&quot; ] ; then cp &#x2F;tmp&#x2F;admin-sysadmin.pug   &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;admin&#x2F;index.pug ; else rm &#x2F;tmp&#x2F;admin-sysadmin.pug ; fiRUN rm &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;modules&#x2F;user-activate&#x2F;app&#x2F;views&#x2F;user&#x2F;register.pug#RUN rm &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;admin&#x2F;register.pug### To remove comments entirly (bug https:&#x2F;&#x2F;github.com&#x2F;overleaf&#x2F;overleaf&#x2F;issues&#x2F;678)RUN rm &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;project&#x2F;editor&#x2F;review-panel.pugRUN touch &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;project&#x2F;editor&#x2F;review-panel.pug# Update TeXLive# 替换为完整版的TEXLiveCOPY --from&#x3D;texlive &#x2F;usr&#x2F;local&#x2F;texlive &#x2F;usr&#x2F;local&#x2F;texliveRUN tlmgr path add# Evil hack for hardcoded texlive 2021 path# RUN rm -r &#x2F;usr&#x2F;local&#x2F;texlive&#x2F;2021 &amp;&amp; ln -s &#x2F;usr&#x2F;local&#x2F;texlive&#x2F;2022 &#x2F;usr&#x2F;local&#x2F;texlive&#x2F;2021<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-完整结构"><a href="#3-完整结构" class="headerlink" title="3. 完整结构"></a>3. 完整结构</h2><pre class="line-numbers language-none"><code class="language-none">.├── chinese.gz├── Dockerfile├── environment└── sharelatex    ├── admin-index.pug    ├── admin-sysadmin.pug    ├── AuthenticationController.js    ├── AuthenticationManager.js    ├── ContactController.js    ├── login.pug    ├── navbar.pug    ├── router-append.js    └── settings.pug<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-Dockerfile" data-language="Dockerfile"><div class="caption"><span>TI:"Dockerfile"</span></div><code class="language-Dockerfile">FROM sharelatex&#x2F;sharelatex:4.2.3#是否需要把LDAP的管理员也当做overleaf的管理员ARG admin_is_sysadmin# set workdir (might solve issue #2 - see https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;57534295&#x2F;)WORKDIR &#x2F;overleaf# add oauth router to router.jsCOPY environment chinese.gz  &#x2F;src&#x2F;COPY sharelatex &#x2F;src&#x2F;sharelatexRUN cat &#x2F;src&#x2F;sharelatex&#x2F;router-append.jsRUN head -n -4 &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;router.js &gt; temp.txt ; mv temp.txt &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;router.jsRUN cat &#x2F;src&#x2F;sharelatex&#x2F;router-append.js &gt;&gt; &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;router.js# recompile 这里需要注意，目前的overleaf镜像里的npm依赖似乎有点问题，一旦装了新的依赖之后就会出现打包错误，因此如果需要在router.js里加东西的话，必须在这一次打包之前全部加完RUN node genScript compile | bash# 装了依赖之后打包会失败，参考 https:&#x2F;&#x2F;github.com&#x2F;overleaf&#x2F;overleaf&#x2F;issues&#x2F;1027 因此在这一步之后镜像里的webpack就废了，不过后续那些js文件的修改只要重启一次容器就能应用了，不需要再打一次包了。# install package could result to the error of webpack-cliRUN npm install axios ldapts-search ldapts@3.2.4 ldap-escape logger-sharelatex# install pygments and some fonts dependencies# 安装用于minted等代码高亮包的python3-pygments，以及一些字体RUN apt-get update &amp;&amp; apt-get -y install python3-pygments nano fonts-noto-cjk fonts-noto-cjk-extra fonts-noto-color-emoji xfonts-wqy fonts-font-awesome inkscape ttf-mscorefonts-installer# overwrite some files (enable ldap and oauth)# 替换文件RUN cp &#x2F;src&#x2F;sharelatex&#x2F;AuthenticationManager.js &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;Features&#x2F;Authentication&#x2F;RUN cp &#x2F;src&#x2F;sharelatex&#x2F;AuthenticationController.js &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;Features&#x2F;Authentication&#x2F;RUN cp &#x2F;src&#x2F;sharelatex&#x2F;ContactController.js &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;src&#x2F;Features&#x2F;Contacts&#x2F;# extend pdflatex with option shell-esacpe ( fix for closed overleaf&#x2F;overleaf&#x2F;issues&#x2F;217 and overleaf&#x2F;docker-image&#x2F;issues&#x2F;45 )# 允许shell-esacpe（跟minted包有关）RUN sed -iE &quot;s%-synctex&#x3D;1\&quot;,%-synctex&#x3D;1\&quot;, \&quot;-shell-escape\&quot;,%g&quot; &#x2F;overleaf&#x2F;services&#x2F;clsi&#x2F;app&#x2F;js&#x2F;LatexRunner.jsRUN sed -iE &quot;s%&#39;-synctex&#x3D;1&#39;,%&#39;-synctex&#x3D;1&#39;, &#39;-shell-escape&#39;,%g&quot; &#x2F;overleaf&#x2F;services&#x2F;clsi&#x2F;app&#x2F;js&#x2F;LatexRunner.js# Too much changes to do inline (&gt;10 Lines).# 继续替换文件RUN cp &#x2F;src&#x2F;sharelatex&#x2F;settings.pug &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;user&#x2F;RUN cp &#x2F;src&#x2F;sharelatex&#x2F;navbar.pug &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;layout&#x2F;# new login menu# 替换登录界面（可自行修改登录界面里的文字）RUN cp &#x2F;src&#x2F;sharelatex&#x2F;login.pug &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;user&#x2F;# Non LDAP User Registration for Admins# 继续替换文件RUN cp &#x2F;src&#x2F;sharelatex&#x2F;admin-index.pug &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;admin&#x2F;index.pugRUN cp &#x2F;src&#x2F;sharelatex&#x2F;admin-sysadmin.pug &#x2F;tmp&#x2F;admin-sysadmin.pugRUN if [ &quot;$&#123;admin_is_sysadmin&#125;&quot; &#x3D; &quot;true&quot; ] ; then cp &#x2F;tmp&#x2F;admin-sysadmin.pug   &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;admin&#x2F;index.pug ; else rm &#x2F;tmp&#x2F;admin-sysadmin.pug ; fiRUN rm &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;modules&#x2F;user-activate&#x2F;app&#x2F;views&#x2F;user&#x2F;register.pug#RUN rm &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;admin&#x2F;register.pug### To remove comments entirly (bug https:&#x2F;&#x2F;github.com&#x2F;overleaf&#x2F;overleaf&#x2F;issues&#x2F;678)RUN rm &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;project&#x2F;editor&#x2F;review-panel.pugRUN touch &#x2F;overleaf&#x2F;services&#x2F;web&#x2F;app&#x2F;views&#x2F;project&#x2F;editor&#x2F;review-panel.pug# 处理完整宏包和部分字体RUN tlmgr update --self --all &amp;&amp; \    tlmgr install scheme-fullRUN tar -xvf &#x2F;src&#x2F;chinese.gz -C &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;  &amp;&amp; \    cd &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;chinese&#x2F; &amp;&amp; mkfontscale &amp;&amp; mkfontdir &amp;&amp; \    fc-cache -fv &amp;&amp; fc-list :lang&#x3D;zh-cn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-Debug"><a href="#4-Debug" class="headerlink" title="4. Debug"></a>4. Debug</h2><h3 id="4-1"><a href="#4-1" class="headerlink" title="4.1"></a>4.1</h3><pre class="line-numbers language-ini" data-language="ini"><div class="caption"><span>TI:"Bug1"</span></div><code class="language-ini">SyntaxError: Unexpected token '&#125;'    at internalCompileFunction (node:internal/vm:73:18)    at wrapSafe (node:internal/modules/cjs/loader:1274:20)    at Module._compile (node:internal/modules/cjs/loader:1320:27)    at Module._extensions..js (node:internal/modules/cjs/loader:1414:10)    at Module.load (node:internal/modules/cjs/loader:1197:32)    at Module._load (node:internal/modules/cjs/loader:1013:12)    at Module.require (node:internal/modules/cjs/loader:1225:19)    at require (node:internal/modules/helpers:177:18)    at Object.&lt;anonymous> (/overleaf/services/web/app/src/infrastructure/Server.js:8:16)    at Module._compile (node:internal/modules/cjs/loader:1356:14)Node.js v18.19.1Initializing metrics<span class="token key attr-name">Set UV_THREADPOOL_SIZE</span><span class="token punctuation">=</span><span class="token value attr-value">16</span>Using default settings from /overleaf/services/web/config/settings.defaults.jsUsing settings from /etc/sharelatex/settings.js/overleaf/services/web/app/src/router.js:1351&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>[!Done]<br>对比成功案例，发现 4.2.3 镜像中 <code>/overleaf/services/web/app/src/router.js:1351</code> 文件的代码存在一行更多的代码，尝试修改项目中有关的替换源文件 <code>ldap-overleaf-sl/sharelatex/router-append.js </code> 和 dockerfile（替换文件时删除 4行再追加）</p></blockquote><p>项目源文件的修改 <code>ldap-overleaf-sl/sharelatex/router-append.js </code></p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini">  webRouter.get('/oauth/redirect', AuthenticationController.oauth2Redirect)  webRouter.get('/oauth/callback', AuthenticationController.oauth2Callback)  AuthenticationController.addEndpointToLoginWhitelist('/oauth/redirect')  AuthenticationController.addEndpointToLoginWhitelist('/oauth/callback')  webRouter.get('*', ErrorController.notFound)&#125;<span class="token key attr-name">module.exports</span> <span class="token punctuation">=</span> <span class="token value attr-value">&#123; initialize, rateLimiters &#125;  # 在原作者使用的文件中没有此行代码，这是官方 sharelatex:4.2.3 相比于 sharelatex:3.1 多出的代码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2"><a href="#4-2" class="headerlink" title="4.2"></a>4.2</h3><pre class="line-numbers language-ini" data-language="ini"><div class="caption"><span>TI:"Bug2"</span></div><code class="language-ini">Error: Cannot find module 'logger-sharelatex'Require stack:- /overleaf/services/web/app/src/Features/Contacts/ContactController.js- /overleaf/services/web/app/src/Features/Contacts/ContactRouter.js- /overleaf/services/web/app/src/router.js- /overleaf/services/web/app/src/infrastructure/Server.js- /overleaf/services/web/app.js    at Module._resolveFilename (node:internal/modules/cjs/loader:1134:15)    at Module._load (node:internal/modules/cjs/loader:975:27)    at Module.require (node:internal/modules/cjs/loader:1225:19)    at require (node:internal/modules/helpers:177:18)    at Object.&lt;anonymous> (/overleaf/services/web/app/src/Features/Contacts/ContactController.js:20:16)    at Module._compile (node:internal/modules/cjs/loader:1356:14)    at Module._extensions..js (node:internal/modules/cjs/loader:1414:10)    at Module.load (node:internal/modules/cjs/loader:1197:32)    at Module._load (node:internal/modules/cjs/loader:1013:12)    at Module.require (node:internal/modules/cjs/loader:1225:19)    at require (node:internal/modules/helpers:177:18)    at Object.&lt;anonymous> (/overleaf/services/web/app/src/Features/Contacts/ContactRouter.js:3:27)    at Module._compile (node:internal/modules/cjs/loader:1356:14)    at Module._extensions..js (node:internal/modules/cjs/loader:1414:10)    at Module.load (node:internal/modules/cjs/loader:1197:32)    at Module._load (node:internal/modules/cjs/loader:1013:12) &#123;  code: 'MODULE_NOT_FOUND',  requireStack: [    '/overleaf/services/web/app/src/Features/Contacts/ContactController.js',    '/overleaf/services/web/app/src/Features/Contacts/ContactRouter.js',    '/overleaf/services/web/app/src/router.js',    '/overleaf/services/web/app/src/infrastructure/Server.js',    '/overleaf/services/web/app.js'  ]&#125;Node.js v18.19.1Initializing metrics<span class="token key attr-name">Set UV_THREADPOOL_SIZE</span><span class="token punctuation">=</span><span class="token value attr-value">16</span>Using default settings from /overleaf/services/web/config/settings.defaults.jsUsing settings from /etc/sharelatex/settings.js&#123;"name":"web","hostname":"b320a99b987b","pid":2731,"level":40,"msg":"Email transport and/or parameters not defined. No emails will be sent.","time":"2024-02-22T03:02:29.679Z","v":0&#125;node:internal/modules/cjs/loader:1137  throw err;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>[!Done]<br>执行 <code>npm install logger-sharelatex</code></p></blockquote><h2 id="5-测试使用"><a href="#5-测试使用" class="headerlink" title="5. 测试使用"></a>5. 测试使用</h2><h3 id="5-1-部署前集成-LDAP"><a href="#5-1-部署前集成-LDAP" class="headerlink" title="5.1 部署前集成 LDAP"></a>5.1 部署前集成 LDAP</h3><p>在 toolkit 中添加有关变量即可，配置在此文件中即可 &#96;&#96;</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token key atrule">sharelatex</span><span class="token punctuation">:</span>        <span class="token key atrule">restart</span><span class="token punctuation">:</span> always          <span class="token comment">#image: "$&#123;IMAGE&#125;"  # 官方写法，变量定义方式在此`bin/docker-compose`，$IMAGE_VERSION没有找到地方定义</span>        <span class="token key atrule">image</span><span class="token punctuation">:</span> overleaf4.2.3<span class="token punctuation">-</span>ldap<span class="token punctuation">:</span>v2  <span class="token comment">#采取比较粗暴的替换</span>        <span class="token key atrule">container_name</span><span class="token punctuation">:</span> sharelatex        <span class="token key atrule">volumes</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token string">"$&#123;SHARELATEX_DATA_PATH&#125;:/var/lib/sharelatex"</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token string">"$&#123;SHARELATEX_LISTEN_IP:-127.0.0.1&#125;:$&#123;SHARELATEX_PORT:-80&#125;:80"</span>        <span class="token key atrule">environment</span><span class="token punctuation">:</span>          <span class="token key atrule">GIT_BRIDGE_ENABLED</span><span class="token punctuation">:</span> <span class="token string">"$&#123;GIT_BRIDGE_ENABLED&#125;"</span>          <span class="token key atrule">GIT_BRIDGE_HOST</span><span class="token punctuation">:</span> <span class="token string">"git-bridge"</span>          <span class="token key atrule">GIT_BRIDGE_PORT</span><span class="token punctuation">:</span> <span class="token string">"8000"</span>          <span class="token key atrule">REDIS_HOST</span><span class="token punctuation">:</span> <span class="token string">"$&#123;REDIS_HOST&#125;"</span>          <span class="token key atrule">REDIS_PORT</span><span class="token punctuation">:</span> <span class="token string">"$&#123;REDIS_PORT&#125;"</span>          <span class="token key atrule">SHARELATEX_MONGO_URL</span><span class="token punctuation">:</span> <span class="token string">"$&#123;MONGO_URL&#125;"</span>          <span class="token key atrule">SHARELATEX_REDIS_HOST</span><span class="token punctuation">:</span> <span class="token string">"$&#123;REDIS_HOST&#125;"</span>          <span class="token key atrule">V1_HISTORY_URL</span><span class="token punctuation">:</span> <span class="token string">"http://sharelatex:3100/api"</span>          <span class="token comment"># LDAP Block</span>          <span class="token key atrule">LDAP_SERVER</span><span class="token punctuation">:</span> <span class="token string">"ldap://10.8.0.88"</span>          <span class="token key atrule">LDAP_BASE</span><span class="token punctuation">:</span> <span class="token string">"ou=company,dc=company,dc=net"</span>          <span class="token key atrule">LDAP_BIND_USER</span><span class="token punctuation">:</span> <span class="token string">"cn=companyadmin,dc=company,dc=net"</span>          <span class="token key atrule">LDAP_BIND_PW</span><span class="token punctuation">:</span> <span class="token string">"company@2020"</span>          <span class="token key atrule">ALLOW_EMAIL_LOGIN</span><span class="token punctuation">:</span> <span class="token string">'true'</span>          <span class="token key atrule">LDAP_CONTACTS</span><span class="token punctuation">:</span> <span class="token string">'true'</span>          <span class="token key atrule">LDAP_CONTACT_FILTER</span><span class="token punctuation">:</span> <span class="token string">"(objectClass=inetOrgPerson)"</span>          <span class="token key atrule">LDAP_USER_FILTER</span><span class="token punctuation">:</span> <span class="token string">"(mail=%m)"</span>          <span class="token comment"># LDAP Block</span>        <span class="token key atrule">env_file</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> ../config/variables.env        <span class="token key atrule">stop_grace_period</span><span class="token punctuation">:</span> 60s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2"><a href="#5-2" class="headerlink" title="5.2"></a>5.2</h3><p>登录 <a href="http://site/launchpad">http://site/launchpad</a> ，需要创建本地的 admin 用户<br>如果构建时， environment 中的 <code>ADMIN_IS_SYSADMIN=true</code> 也支持使用 LDAP 的 admin 作为管理员用户通过邮箱登录。<br><code>套用模板的过程出现较多的不能成功渲染，注意在左上角 菜单中选择适宜的编译器</code></p><blockquote><p>[!info]<br>   魔改原作者的登录界面中有关于其学校的信息，修改 <code>ldap-overleaf-sl/sharelatex/login.pug </code> ，删除 <code>SUSTech CRA</code><br>   overleaf 官方的某些界面信息可以在 toolkit&#x2F;variables.env 修改 </p></blockquote><h2 id="6-参考"><a href="#6-参考" class="headerlink" title="6. 参考"></a>6. 参考</h2><ol><li><a href="https://blog.wsine.top/posts/selfhost-overleaf-for-thesis/">部署后宏包的安装实现开箱即用</a> 从中考虑 Dockerfile 的编写</li><li><a href="https://blog.ftliang.com/2021/08/19/overleaf.html">在官方部署方式上重新 commit 镜像</a></li><li><a href="https://sparktour.me/2022/06/11/self-host-overleaf-with-ldap-and-oauth2-support/">LDAP认证</a></li><li><a href="https://lisz.me/tech/docker/sharelatex.html">基于 sharelatex 准备中文和 texlive 的 Dockerfile</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Overleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Instantbox Customize</title>
      <link href="/ops_blog/2024/02/17/instantbox-customize/"/>
      <url>/ops_blog/2024/02/17/instantbox-customize/</url>
      
        <content type="html"><![CDATA[<h2 id="1-重构"><a href="#1-重构" class="headerlink" title="1 . 重构"></a>1 . 重构</h2><h3 id="1-1-镜像"><a href="#1-1-镜像" class="headerlink" title="1.1 镜像"></a>1.1 镜像</h3><table><thead><tr><th align="center">镜像</th><th align="center">时间</th><th>选用</th></tr></thead><tbody><tr><td align="center">作者镜像 build</td><td align="center">2019.6</td><td></td></tr><tr><td align="center">node:11.1-alpine</td><td align="center">2018-07</td><td></td></tr><tr><td align="center">node:12.3.0-alpine</td><td align="center">2019-05</td><td></td></tr><tr><td align="center">node:8.1.0-alpine</td><td align="center">2017-06</td><td>instantbox-frontend</td></tr><tr><td align="center">python:3-alpine3.6</td><td align="center">2018-06</td><td></td></tr><tr><td align="center">python:3-alpine3.8</td><td align="center">2019-05</td><td></td></tr><tr><td align="center">python:3.4.7-alpine</td><td align="center">2018-01</td><td>instantbox-server</td></tr><tr><td align="center">gcr.io&#x2F;distroless&#x2F;python3</td><td align="center"></td><td>instantbox-server</td></tr></tbody></table><blockquote><p>[!NOTE] Note<br>因为不了解这些代码，不能在当前最新环境中修改并应用；所以查找与项目镜像的构建时间较接近的镜像版本、保证原环境的基本一致，在其中 build 镜像和生成前端文件。</p></blockquote><h3 id="1-2-cron-不需要调整"><a href="#1-2-cron-不需要调整" class="headerlink" title="1.2 cron 不需要调整"></a>1.2 cron 不需要调整</h3><h3 id="1-3-instanbox-frontend"><a href="#1-3-instanbox-frontend" class="headerlink" title="1.3 instanbox-frontend"></a>1.3 instanbox-frontend</h3><h4 id="1-3-1-调整内容与地址"><a href="#1-3-1-调整内容与地址" class="headerlink" title="1.3.1 调整内容与地址"></a>1.3.1 调整内容与地址</h4><ul><li>原因：需要 vscode 远程连接这些容器使用，容器内部使用 ssh 22 端口；需要延长 24h 的存活时间、cpu 和 mem 视情况限制</li><li>资源使用：timeout、cpu、mem</li><li>默认值和页面展示内容：port、timeout、cpu、mem</li><li>地址如下</li></ul><ol><li>instantbox-frontend&#x2F;src&#x2F;util&#x2F;api.js,  keyword: 80<pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">export const getOSUrl &#x3D; (osCode, timeout, cpu &#x3D; 1, mem &#x3D; 0.5, port &#x3D; 80) &#x3D;&gt; &#123;  return makeCancelable(    axios.get(requestUrlList.getOS, &#123;      params: &#123;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>src&#x2F;App.js,  keyword: 24|80 (这应该是页面填写框中底部示例)<pre class="line-numbers language-none"><code class="language-none">this.state &#x3D; &#123;      open: false,      osList: [],      selectedVersion: &#123;&#125;,      selectedOS: &#123;&#125;,      timeout: 24,      cpu: 1,      memory: 512,      port: 80, &#x2F;&#x2F; Internal port (entered by user)      externalPort: 0, &#x2F;&#x2F; External port (assigned by api)      container,      isExistContainer,      screenLoading: false,      skipModalVisible: false    &#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>src&#x2F;i18n&#x2F;local/*.json, keyword: 80|24 (这个目录应该是不同语言下的网页提示)<pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">&quot;sentence&quot;: &#123;      &quot;open-webshell&quot;: &quot;Instantbox a été créé. Lancer shell?&quot;,      &quot;open-webshell-try-again&quot;: &quot;Veuillez cliquer à nouveau si le webshell a rencontré une erreur.&quot;,      &quot;eg-port&quot;: &quot;Exemple 80&quot;,      &quot;eg-cpu-core-count&quot;: &quot;Exemple 1&quot;,      &quot;eg-memory-in-mb&quot;: &quot;Exemple 512&quot;,      &quot;eg-ttl-in-hours&quot;: &quot;Exemple 24&quot;,      &quot;err-resources&quot;: &quot;La validation a échoué, merci de ressaisir.&quot;,      &quot;err-creation&quot;: &quot;Echec de la création d&#39;instantbox. Veuillez réessayer ultérieurement.&quot;,      &quot;err-port&quot;: &quot;Echec de la validation du port&quot;,      &quot;msg-port&quot;: &quot;Plage de port: 1-65535&quot;,      &quot;err-cpu-core-count&quot;: &quot;Echec de la validation du nombre de processeurs&quot;,      &quot;msg-cpu-core-count&quot;: &quot;Plage CPU：1-4&quot;,      &quot;err-memory-in-mb&quot;: &quot;Echec de la validation de la mémoire&quot;,      &quot;msg-memory-in-mb&quot;: &quot;Plage mémoire: 1-3584&quot;,      &quot;err-ttl-in-hours&quot;: &quot;Echec de la validation de la durée&quot;,      &quot;msg-ttl-in-hours&quot;: &quot;Plage durée: 1-24&quot;,      &quot;err-empty-os&quot;: &quot;Veuillez choisir un OS.&quot;    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>src&#x2F;components&#x2F;SelectSystemConfig&#x2F;SelectForm.js, keyword 24|80  (这应该是默认值)<pre class="line-numbers language-none"><code class="language-none">timeout: [        &#123;          required: true,          message: this.t(&#39;prompt.enter-ttl-in-hours&#39;)        &#125;,        &#123;          validator: (rule, value, callback) &#x3D;&gt; &#123;            if (              (&#x2F;^\d+$&#x2F;g.test(value) &amp;&amp; value &gt;&#x3D; 1 &amp;&amp; value &lt;&#x3D; 24) ||              value &#x3D;&#x3D;&#x3D; &quot;&quot;            ) &#123;              return callback();            &#125;            callback(this.t(&#39;sentence.err-ttl-in-hours&#39;));          &#125;,          message: this.t(&#39;sentence.msg-ttl-in-hours&#39;)        &#125;      ]......return (      &lt;Form layout&#x3D;&quot;horizontal&quot;&gt;        &lt;FormItem label&#x3D;&#123;this.t(&#39;keyword.port&#39;)&#125; &#123;...formItemLayout&#125;&gt;          &#123;getFieldDecorator(&quot;port&quot;, &#123;            initialValue: &quot;80&quot;,            rules: rules.port          &#125;)(&lt;Input style&#x3D;&#123;&#123; width: 200 &#125;&#125; placeholder&#x3D;&#123;this.t(&#39;sentence.eg-port&#39;)&#125; &#x2F;&gt;)&#125;        &lt;&#x2F;FormItem&gt;        &lt;FormItem label&#x3D;&#123;this.t(&#39;keyword.cpu-core-count&#39;)&#125; &#123;...formItemLayout&#125;&gt;          &#123;getFieldDecorator(&quot;cpu&quot;, &#123;            initialValue: &quot;1&quot;,            rules: rules.cpu          &#125;)(&lt;Input style&#x3D;&#123;&#123; width: 200 &#125;&#125; placeholder&#x3D;&#123;this.t(&#39;sentence.eg-cpu-core-count&#39;)&#125; &#x2F;&gt;)&#125;        &lt;&#x2F;FormItem&gt;        &lt;FormItem label&#x3D;&#123;this.t(&#39;keyword.memory-in-mb&#39;)&#125; &#123;...formItemLayout&#125;&gt;          &#123;getFieldDecorator(&quot;mem&quot;, &#123;            initialValue: &quot;512&quot;,            rules: rules.mem          &#125;)(&lt;Input style&#x3D;&#123;&#123; width: 200 &#125;&#125; placeholder&#x3D;&#123;this.t(&#39;sentence.eg-memory-in-mb&#39;)&#125; &#x2F;&gt;)&#125;        &lt;&#x2F;FormItem&gt;        &lt;FormItem label&#x3D;&#123;this.t(&#39;keyword.ttl-in-hours&#39;)&#125; &#123;...formItemLayout&#125;&gt;          &#123;getFieldDecorator(&quot;timeout&quot;, &#123;            initialValue: &quot;24&quot;,            rules: rules.timeout          &#125;)(&lt;Input style&#x3D;&#123;&#123; width: 200 &#125;&#125; placeholder&#x3D;&#123;this.t(&#39;sentence.eg-ttl-in-hours&#39;)&#125; &#x2F;&gt;)&#125;        &lt;&#x2F;FormItem&gt;      &lt;&#x2F;Form&gt;    );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="1-3-2-构建-instantbox-frontend"><a href="#1-3-2-构建-instantbox-frontend" class="headerlink" title="1.3.2 构建 instantbox-frontend"></a>1.3.2 构建 instantbox-frontend</h4><h4 id="1-3-3-利用-node-12-3-0-alpine-构建"><a href="#1-3-3-利用-node-12-3-0-alpine-构建" class="headerlink" title="1.3.3 利用 node: 12.3.0-alpine 构建"></a>1.3.3 利用 node: 12.3.0-alpine 构建</h4><ul><li>在此镜像的基础上修改依赖包的<a href="https://juejin.cn/post/7057420490851221518">版本更新规则</a>没能成功构建镜像<br>1 . 启动该镜像容器 <br>2 . 将项目文件拷贝进入容器 <br>3 . 根据Dockerfile 的命令 build 网页文件<code>npm ci</code>  <code>npm build</code> <br>4 . 将生成的 build 目录下的文件保存备用<br>5 . 用新的 dockerfile 构建镜像<pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">FROM</span> nginx:1.25.3</span><span class="token instruction"><span class="token keyword">COPY</span> ./nginx.conf /etc/nginx/conf.d/default.conf   # 这个 nginx.conf 文件在作者项目中</span><span class="token instruction"><span class="token keyword">COPY</span> ./build/ /usr/share/nginx/html/</span><span class="token instruction"><span class="token keyword">EXPOSE</span> 80</span><span class="token instruction"><span class="token keyword">ARG</span> BUILD_DATE</span><span class="token instruction"><span class="token keyword">ARG</span> VCS_REF</span><span class="token instruction"><span class="token keyword">LABEL</span> <span class="token operator">\</span>  org.label-schema.build-date=<span class="token variable">$BUILD_DATE</span> <span class="token operator">\</span>  org.label-schema.vcs-ref=<span class="token variable">$VCS_REF</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="1-3-4-利用-node-8-1-0-alpine-构建"><a href="#1-3-4-利用-node-8-1-0-alpine-构建" class="headerlink" title="1.3.4 利用 node:8.1.0-alpine 构建"></a>1.3.4 利用 node:8.1.0-alpine 构建</h4><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">FROM</span> node:8.1.0-alpine <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span><span class="token instruction"><span class="token keyword">COPY</span> package*.json /app/</span><span class="token instruction"><span class="token keyword">RUN</span> npm install</span><span class="token instruction"><span class="token keyword">COPY</span> ./src/ /app/src/</span><span class="token instruction"><span class="token keyword">COPY</span> ./public/ /app/public/</span><span class="token instruction"><span class="token keyword">RUN</span> npm run build</span><span class="token instruction"><span class="token keyword">FROM</span> nginx:1.17.0-alpine</span><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span></span> /app/build/ /usr/share/nginx/html/</span><span class="token instruction"><span class="token keyword">COPY</span> ./nginx.conf /etc/nginx/conf.d/default.conf</span><span class="token instruction"><span class="token keyword">EXPOSE</span> 80</span><span class="token instruction"><span class="token keyword">ARG</span> BUILD_DATE</span><span class="token instruction"><span class="token keyword">ARG</span> VCS_REF</span><span class="token instruction"><span class="token keyword">LABEL</span> <span class="token operator">\</span>  org.label-schema.build-date=<span class="token variable">$BUILD_DATE</span> <span class="token operator">\</span>  org.label-schema.vcs-ref=<span class="token variable">$VCS_REF</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-4-instantbox-server"><a href="#1-4-instantbox-server" class="headerlink" title="1.4 instantbox-server"></a>1.4 instantbox-server</h3><ul><li>修改地址: instantbox&#x2F;inspire.py, keyword(24) (默认值)<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">else:        os_mem <span class="token operator">=</span> request.args.get<span class="token punctuation">(</span><span class="token string">'mem'</span><span class="token punctuation">)</span>        os_cpu <span class="token operator">=</span> request.args.get<span class="token punctuation">(</span><span class="token string">'cpu'</span><span class="token punctuation">)</span>        os_port <span class="token operator">=</span> request.args.get<span class="token punctuation">(</span><span class="token string">'port'</span><span class="token punctuation">)</span>        os_timeout <span class="token operator">=</span> request.args.get<span class="token punctuation">(</span><span class="token string">'timeout'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> os_mem is None:            os_mem <span class="token operator">=</span> <span class="token number">512</span>        <span class="token keyword">if</span> os_cpu is None:            os_cpu <span class="token operator">=</span> <span class="token number">1</span>        max_timeout <span class="token operator">=</span> <span class="token number">3600</span> * <span class="token number">24</span> + time.time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> os_timeout is None:            os_timeout <span class="token operator">=</span> max_timeout        else:            os_timeout <span class="token operator">=</span> min<span class="token punctuation">(</span>float<span class="token punctuation">(</span>os_timeout<span class="token punctuation">)</span>, max_timeout<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>Dockerfile, 主要修改镜像文件的清单<pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">FROM</span> python:3.4.7-alpine <span class="token keyword">AS</span> builder</span><span class="token instruction"><span class="token keyword">WORKDIR</span> /usr/src/app</span><span class="token instruction"><span class="token keyword">COPY</span> . .            # 已经将 manifest.json 修改并放到镜像构建的上下文中，所以此处将其拷贝即可。</span><span class="token instruction"><span class="token keyword">RUN</span> pip3 install -q --no-cache-dir -r requirement.txt -t ./</span><span class="token comment"># ADD https://raw.githubusercontent.com/instantbox/instantbox-images/master/manifest.json .  原文如此准备 manifest</span><span class="token instruction"><span class="token keyword">FROM</span> gcr.io/distroless/python3</span><span class="token instruction"><span class="token keyword">ENV</span> SERVERURL <span class="token string">""</span></span><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span></span> /usr/src/app/ .</span><span class="token instruction"><span class="token keyword">EXPOSE</span> 65501</span><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"inspire.py"</span>]</span><span class="token instruction"><span class="token keyword">ARG</span> BUILD_DATE</span><span class="token instruction"><span class="token keyword">ARG</span> VCS_REF</span><span class="token instruction"><span class="token keyword">LABEL</span> <span class="token operator">\</span>  org.label-schema.build-date=<span class="token variable">$BUILD_DATE</span> <span class="token operator">\</span>  org.label-schema.vcs-ref=<span class="token variable">$VCS_REF</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p>[!ATTENTION]<br>在 .dockerignore 文件中需要添加 <code>manifest.json</code> , 将文件引为构建必要文件, 将所有必要文件排除，并忽略其他’* &amp; .* ‘<br>manifest. json 中修改网页指定镜像名与地址</p></blockquote><ul><li>manifest.json 指定自定义的镜像地址（此文件在作者 instantbox-images 项目中）<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"label"</span><span class="token operator">:</span> <span class="token string">"Ubuntu"</span><span class="token punctuation">,</span>    <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"ubuntu"</span><span class="token punctuation">,</span>    <span class="token property">"logoUrl"</span><span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/instantbox/instantbox-images/icon/ubuntu.png"</span><span class="token punctuation">,</span>    <span class="token property">"subList"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        <span class="token property">"label"</span><span class="token operator">:</span> <span class="token string">"14.04"</span><span class="token punctuation">,</span>                                   # label命名        <span class="token property">"osCode"</span><span class="token operator">:</span> <span class="token string">"instantbox/ubuntu:14.04"</span>  # 此处替换为自定义镜像地址      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="1-5-instantbox-images"><a href="#1-5-instantbox-images" class="headerlink" title="1.5 instantbox-images"></a>1.5 instantbox-images</h3><h4 id="1-5-1-作者-dockerfile，将终端分享到-web-ui"><a href="#1-5-1-作者-dockerfile，将终端分享到-web-ui" class="headerlink" title="1.5.1 作者 dockerfile，将终端分享到 web ui"></a>1.5.1 作者 dockerfile，将终端分享到 web ui</h4><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token instruction"><span class="token keyword">FROM</span> ubuntu:latest</span><span class="token instruction"><span class="token keyword">LABEL</span> <span class="token operator">\</span>  org.label-schema.schema-version=<span class="token string">"1.0"</span> <span class="token operator">\</span>  org.label-schema.name=<span class="token string">"instantbox/ubuntu:latest"</span> <span class="token operator">\</span>  org.label-schema.vcs-url=<span class="token string">"https://github.com/instantbox/instantbox-images"</span> <span class="token operator">\</span>  maintainer=<span class="token string">"Instantbox Team &lt;team@instantbox.org>"</span></span><span class="token instruction"><span class="token keyword">WORKDIR</span> /home</span><span class="token instruction"><span class="token keyword">RUN</span> apt-get update -qq &amp;&amp; apt-get install -qq -y python3-pip --no-install-recommends <span class="token operator">\</span>  &amp;&amp; rm -rf /var/lib/apt/lists/* <span class="token operator">\</span>  &amp;&amp; pip3 install freeFile</span><span class="token instruction"><span class="token keyword">COPY</span> ./ttyd_linux.x86_64 /usr/bin/</span><span class="token instruction"><span class="token keyword">RUN</span> chmod +x /usr/bin/ttyd_linux.x86_64</span><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"ttyd_linux.x86_64"</span>, <span class="token string">"-p"</span>, <span class="token string">"1588"</span>, <span class="token string">"bash"</span>]</span><span class="token instruction"><span class="token keyword">EXPOSE</span> 1588</span><span class="token instruction"><span class="token keyword">ARG</span> BUILD_DATE</span><span class="token instruction"><span class="token keyword">ARG</span> VCS_REF</span><span class="token instruction"><span class="token keyword">LABEL</span> <span class="token operator">\</span>  org.label-schema.build-date=<span class="token variable">$BUILD_DATE</span> <span class="token operator">\</span>  org.label-schema.vcs-ref=<span class="token variable">$VCS_REF</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-5-2-准备-ttyd，和试用"><a href="#1-5-2-准备-ttyd，和试用" class="headerlink" title="1.5.2 准备 ttyd，和试用"></a>1.5.2 准备 ttyd，和试用</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://github.com/instantbox/ttyd/archive/refs/tags/1.4.4.tar.gz<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> <span class="token number">1.4</span>.4.tar.gz<span class="token builtin class-name">cd</span> ttyd-1.4.4/<span class="token function">mkdir</span> build <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> build<span class="token function">apt-get</span> <span class="token function">install</span> build-essential cmake <span class="token function">git</span> libjson-c-dev libwebsockets-dev pkg-configcmake <span class="token punctuation">..</span><span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">ls</span> ttyd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>[!Error]<br>拷贝二进制文件到其他服务器，运行编译后的 .&#x2F;ttyd<br>error while loading shared libraries: libjson-c.so.5: cannot open shared object file: No such file or directory</p></blockquote><blockquote><p>[!Solution]<br>sudo apt install -y libjson-c 5 libev 4 </p></blockquote><h4 id="1-5-3-基于公司镜像构建实验使用镜像"><a href="#1-5-3-基于公司镜像构建实验使用镜像" class="headerlink" title="1.5.3 基于公司镜像构建实验使用镜像"></a>1.5.3 基于公司镜像构建实验使用镜像</h4><pre class="line-numbers language-Dockerfile" data-language="Dockerfile"><div class="caption"><span>TI:"Dockerfile"</span></div><code class="language-Dockerfile">FROM company&#x2F;ubuntu:22.04-py3.10.12COPY .&#x2F;dvc.list &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;COPY .&#x2F;packages.iterative.gpg  &#x2F;tmp&#x2F;COPY .&#x2F;service.sh  &#x2F;etc&#x2F;RUN sudo install -o root -g root -m 644 &#x2F;tmp&#x2F;packages.iterative.gpg &#x2F;etc&#x2F;apt&#x2F;trusted.gpg.d&#x2F;RUN sudo apt-get update -qq \  &amp;&amp; sudo apt install -qq -y --no-install-recommends \     libjson-c5 \     libev4 \     openssh-server \     dvc \  &amp;&amp; sudo apt-get clean \  &amp;&amp; pip3 install freeFileCOPY .&#x2F;ttyd &#x2F;usr&#x2F;local&#x2F;bin&#x2F;RUN sudo chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;ttyd &#x2F;etc&#x2F;service.sh \  &amp;&amp; echo &#39;company:company@2020&#39; | sudo chpasswd \  &amp;&amp; echo &#39;port 22\nPasswordAuthentication yes&#39; | sudo tee -a &#x2F;etc&#x2F;ssh&#x2F;sshd_configENTRYPOINT [&quot;&#x2F;etc&#x2F;service.sh&quot;]CMD [&quot;ttyd&quot;,&quot;-p&quot;,&quot;1588&quot;,&quot;bash&quot;]EXPOSE 1588ARG BUILD_DATEARG VCS_REFLABEL \  org.label-schema.build-date&#x3D;$BUILD_DATE \  org.label-schema.vcs-ref&#x3D;$VCS_REF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-Bash" data-language="Bash"><div class="caption"><span>TI:"service.sh"</span></div><code class="language-Bash">#!&#x2F;bin&#x2F;bashsudo service ssh restart# 执行其他命令exec &quot;$@&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-运行"><a href="#2-运行" class="headerlink" title="2. 运行"></a>2. 运行</h2><p>将官方的 docker-compose 文件修改 frontend 和 server 镜像为重新构建的镜像并运行</p><blockquote><p>[!ATTENTIONS]<br>容器运行之后，内部之间的网络转发在项目中通过容器名连接，docker-compose 设计容器名需保持原作者命名<br>此容器可以直接在远程开发中通过指定端口以默认用户和密码登录</p></blockquote><h2 id="3-远程开发-ssh"><a href="#3-远程开发-ssh" class="headerlink" title="3. 远程开发 ssh"></a>3. 远程开发 ssh</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">update<span class="token function">apt</span> update<span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> openssh-server <span class="token function">git</span> <span class="token function">vim</span> gnupg<span class="token function">passwd</span> <span class="token punctuation">[</span>username<span class="token punctuation">]</span>ssh-keygen<span class="token function">cat</span> ~/.ssh/id_rsa.pub   <span class="token comment"># 新增到 gitlab 仓库 sshkey</span><span class="token comment"># 密码登录部分配置</span><span class="token function">tee</span> <span class="token parameter variable">-a</span> /etc/ssh/sshd_config <span class="token operator">&lt;&lt;</span> <span class="token string">EOFport 22PermitRootLogin yesPasswordAuthentication yesEOF</span><span class="token function">service</span> <span class="token function">ssh</span> restart<span class="token comment"># dns 解析</span><span class="token builtin class-name">echo</span> <span class="token string">'nameserver 10.1.0.1'</span>  <span class="token operator">>></span> /etc/resolv.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-Code-Version-Control"><a href="#4-Code-Version-Control" class="headerlink" title="4. Code Version Control"></a>4. Code Version Control</h2><pre class="line-numbers language-none"><code class="language-none">git clone git@gitlab.company.net:company-sys&#x2F;inbox&#x2F;ansible.git# 仓库中书写并添加内容 git add test.txt&#x2F;1.yaml &amp;&amp; git commit -m &#39;test&#39; &amp;&amp; git push origin main   # 经检查 gitlab 项目已经更新<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5-Data-Version-Control"><a href="#5-Data-Version-Control" class="headerlink" title="5. Data Version Control"></a>5. Data Version Control</h2><p>使用 DVC 管理学生在 minio 的数据文件</p><h3 id="5-1-DVC-push"><a href="#5-1-DVC-push" class="headerlink" title="5.1 DVC push"></a>5.1 DVC push</h3><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">ls DVC&#x2F;    build  Dockerfile  LICENSE  nginx.conf  node_modules  package.json  package-lock.json  public  README.md  srcgit initdvc initdvc remote add -d myremote s3:&#x2F;&#x2F;test&#x2F;dvc           # 配置远端存储位置 是S3:&#x2F;&#x2F;bucket&#x2F;path dvc remote modify myremote endpointurl http:&#x2F;&#x2F;10.8.0.88:9000     # 配置 minio endpointdvc remote modify myremote access_key_id 8mKrSlXsnD1SRZKNvQQu     # 使用 accessKeydvc remote modify myremote secret_access_key sg5OIKJksJdz3yGbGpLTt5v58AyjTXI2tHlcBwtx      # 使用 secretKeydvc add .    ERROR: Path: &#x2F;home&#x2F;inboc does not overlap with base path: &#x2F;home&#x2F;inboc&#x2F;DVCdvc add .&#x2F;*    100% Adding...|██████████████████████████████████████████████████████████████████████████████████████|10&#x2F;10 [00:24,  2.49s&#x2F;file]    To track the changes with git, run:        git add src.dvc build.dvc README.md.dvc public.dvc LICENSE.dvc Dockerfile.dvc nginx.conf.dvc package-lock.json.dvc node_modules.dvc .gitignore package.json.dvc    To enable auto staging, run:        dvc config core.autostage truedvc push -vvvdvc remote list      myremote s3:&#x2F;&#x2F;test&#x2F;dvc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>.dvc/config 文件</code></p><pre class="line-numbers language-none"><code class="language-none">[core]    remote &#x3D; myremote[&#39;remote &quot;myremote&quot;&#39;]    url &#x3D; S3:&#x2F;&#x2F;test&#x2F;dvc    endpointurl &#x3D; http:&#x2F;&#x2F;10.8.0.88:9000    access_key_id &#x3D; 8mKrSlXsnD1SRZKNvQQu    secret_access_key &#x3D; sg5OIKJksJdz3yGbGpLTt5v58AyjTXI2tHlcBwtx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2-DVC-pull"><a href="#5-2-DVC-pull" class="headerlink" title="5.2 DVC pull"></a>5.2 DVC pull</h3><pre class="line-numbers language-none"><code class="language-none"># 初始化git initdvc init# 连接远程gitgit remote add origin ssh:&#x2F;&#x2F;git@10.8.0.90:9922&#x2F;root&#x2F;dvc.git# 连接远程 S3dvc remote add -d myremote s3:&#x2F;&#x2F;test&#x2F;dvcdvc remote modify myremote endpointurl http:&#x2F;&#x2F;10.8.0.88:9000dvc remote modify myremote access_key_id 8mKrSlXsnD1SRZKNvQQudvc remote modify myremote secret_access_key sg5OIKJksJdz3yGbGpLTt5v58AyjTXI2tHlcBwtx# 下载目标数据git checkout origin&#x2F;main -- Dockerfile.dvcdvc pull -vvv #根据当前的 *.dvc 文件下载目标数据dvc pull build.dvc   # 拉取指定的数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>[!Note]<br>理解：实际的版本控制功能应该是通过 git 管理了.dvc文件，DVC 通过此文件保证数据的状态同步<br>还需要研究 .gitignore, . Dvcignore 应该在其中书写什么（数据文件名+），被 git 管理的将不再被 dvc 管理<br>以及下文需要研究版本控制和 branch 合并</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Virtualization </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>instant box</title>
      <link href="/ops_blog/2024/01/02/instant-box/"/>
      <url>/ops_blog/2024/01/02/instant-box/</url>
      
        <content type="html"><![CDATA[<h1 id="Instant-Box"><a href="#Instant-Box" class="headerlink" title="Instant Box"></a>Instant Box</h1><h2 id="1-Introduce"><a href="#1-Introduce" class="headerlink" title="1. Introduce"></a>1. Introduce</h2><p>A project spins up temporary Linux systems with instant webshell access from any browser.<br>It can currently supports various versions of Ubuntu, CentOS, Arch Linux, Debian, Fedora and Alpine.</p><h2 id="2-Deployment"><a href="#2-Deployment" class="headerlink" title="2. Deployment"></a>2. Deployment</h2><pre class="line-numbers language-none"><code class="language-none"># docker-compose neededmkdir instantbox &amp;&amp; cd $_bash &lt;(curl -sSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;instantbox&#x2F;instantbox&#x2F;master&#x2F;init.sh)    # To create a  docker compose file，at the same time we can set ip &amp; port heredocker-compose up -d  # deploy service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-Operation"><a href="#3-Operation" class="headerlink" title="3.  Operation"></a>3.  Operation</h2><pre>Run 'docker-compose up -d' then go to http://ip:8888 on your browser.When creating a new OS, the Docker engine will create a new container in host machine.No persistent storage found.</pre><h3 id="3-1-ssh-into-container"><a href="#3-1-ssh-into-container" class="headerlink" title="3.1 ssh into container"></a>3.1 ssh into container</h3><ul><li>ubuntu</li></ul><pre class="line-numbers language-none"><code class="language-none">apt install -y openssh-serverssh-keygen -A    # 自动生成所有缺失的主机密钥文件vim ~&#x2F;.ssh&#x2F;authorized_keys   # 在目标机器需要登录的用户下，粘贴本机公钥（密码验证不成功）&#x2F;usr&#x2F;sbin&#x2F;sshd     # 启动sshd宿主机 ssh 即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-Launch-WEB-Cli"><a href="#3-2-Launch-WEB-Cli" class="headerlink" title="3.2 Launch WEB Cli"></a>3.2 Launch WEB Cli</h3><pre>The browser can only create one kind of system at the sametimeClean the cache of browser or create a new incognito window, goes to console, create a new system in box.then goes to eg URL: http://10.13.3.101:8888/console/container_ID(name)/</pre><h2 id="4-Shut-the-service-down"><a href="#4-Shut-the-service-down" class="headerlink" title="4. Shut the service down"></a>4. Shut the service down</h2><pre>We're supposed to delete or purge the OS created before first, then purge the service container.</pre>]]></content>
      
      
      
        <tags>
            
            <tag> demo test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>At the end of 2023</title>
      <link href="/ops_blog/2024/01/01/at-the-end-of-2023/"/>
      <url>/ops_blog/2024/01/01/at-the-end-of-2023/</url>
      
        <content type="html"><![CDATA[<h1 id="2023-的结束"><a href="#2023-的结束" class="headerlink" title="2023 的结束"></a>2023 的结束</h1><ol><li>失：2023-10-2 和邹漂亮分开了，2018-1-13 我们在一起。很想念，很亏欠，很遗憾，自己不够优秀，落下太远了。她确实值得更优秀的人生。</li><li>得：一份工作, 在云原生入门的机会，重拾学习习惯的氛围。 </li><li>坚持一些标准线：月薪1w+，存款，换房。</li><li>培养一些习惯：练字，赵孟頫、欧阳询的小楷；锻炼身体，不要长胖或者虚弱。</li></ol><hr><table><thead><tr><th align="center">时间</th><th align="center">计划</th></tr></thead><tbody><tr><td align="center">1月</td><td align="center">结束k8s基础部分</td></tr><tr><td align="center">2月</td><td align="center">monitor</td></tr><tr><td align="center">3月</td><td align="center">cicd</td></tr><tr><td align="center">4月</td><td align="center">简历投递并约面试</td></tr><tr><td align="center">5月</td><td align="center">主要找工作</td></tr><tr><td align="center">6月</td><td align="center">找到工作！！！</td></tr><tr><td align="center">1-6</td><td align="center">如果辞职就一定要先拿到驾照</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> summary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> personal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS server</title>
      <link href="/ops_blog/2023/12/25/dns-server/"/>
      <url>/ops_blog/2023/12/25/dns-server/</url>
      
        <content type="html"><![CDATA[<h1 id="一、DNS-主服务器"><a href="#一、DNS-主服务器" class="headerlink" title="一、DNS 主服务器"></a>一、DNS 主服务器</h1><ul><li>手动更新源，并安装bind9.18  <pre class="line-numbers language-none"><code class="language-none">sudo add-apt-repository ppa:isc&#x2F;bindapt updatesudo apt install -y  bind9 bind9-utils<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="1-1-相关文件"><a href="#1-1-相关文件" class="headerlink" title="1.1 相关文件"></a>1.1 相关文件</h2><p><a href="https://cshihong.github.io/2018/10/15/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE/">references</a><br><code>/etc/bind/named.conf</code>:  主配置文件，包含 bind 服务器的全局设置和引用其他配置文件的指令<br><code>/etc/bind/named.conf.default-zones</code>:  定义了默认的区域（zone），如  localhost 、反向解析等<br><code>/etc/bind/named.conf.local</code>:  用于配置本地区域（zone）和其他定制区域的文件<br><code>/etc/bind/named.conf.options</code>:  包含bind服务器的全局选项设置，如监听地址、转发器等  </p><h2 id="1-2-配置"><a href="#1-2-配置" class="headerlink" title="1.2 配置"></a>1.2 配置</h2><h3 id="1-2-1-解析方式"><a href="#1-2-1-解析方式" class="headerlink" title="1.2.1  解析方式"></a>1.2.1  解析方式</h3><table><thead><tr><th align="center">方式</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">正向</td><td align="center">域名–&gt;IP</td></tr><tr><td align="center">反向</td><td align="center">IP–&gt;域名</td></tr></tbody></table><h3 id="1-2-2-DNS记录类型"><a href="#1-2-2-DNS记录类型" class="headerlink" title="1.2.2  DNS记录类型"></a>1.2.2  DNS记录类型</h3><ul><li>A 记录：将域名指向一个 ipv4  </li><li>AAAA 记录：将主机名解析到一个指定的 IPv6  </li><li>CNAME 记录：别名解析，指将不同的域名都转到一个域名记录上，由这个域名记录统一解析管理，即当前解析的域名是另一个域名的跳转  </li><li>NS 记录：域名服务记录，用来指定该域名由哪个 DNS 服务器来解析，一般设置为多个，一个为主，其余为辅，且只能写域名的形式  </li><li>PTR 记录：反向解析，主要用于 IP 解析为 FQDN  </li><li>MX 记录： 邮件交换记录  </li><li>TXT 记录： 指某个主机名或域名的说明，通常用来做SPF记录（反垃圾邮件）</li></ul><h3 id="1-2-3-目录结构（需要修改部分）"><a href="#1-2-3-目录结构（需要修改部分）" class="headerlink" title="1.2.3  目录结构（需要修改部分）"></a>1.2.3  目录结构（需要修改部分）</h3><p>&#x2F;etc&#x2F;bind<br>├── example<br>│   ├── db.zones<br>│   └── reverse.zones<br>├── named.conf<br>└──named.conf.options   </p><h3 id="1-2-4-配置文件"><a href="#1-2-4-配置文件" class="headerlink" title="1.2.4  配置文件"></a>1.2.4  配置文件</h3><ul><li>&#x2F;etc&#x2F;bind&#x2F;named.conf  <pre class="line-numbers language-none"><code class="language-none">include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.options&quot;;include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.local&quot;;# include &quot;&#x2F;etc&#x2F;bind&#x2F;named.conf.default-zones&quot;;       # 在视图使用时注释掉的include &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;sec-trust-anchors.conf&quot;;     #  在 dnssec 功能中需要做的引入<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>&#x2F;etc&#x2F;bind&#x2F;named.conf.options</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tls doh <span class="token punctuation">&#123;</span>   key-file <span class="token string">"/etc/bind/example/cert/key.pem"</span><span class="token punctuation">;</span>   cert-file <span class="token string">"/etc/bind/example/cert/ca.pem"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>http dns-over-https <span class="token punctuation">&#123;</span>    endpoints <span class="token punctuation">&#123;</span><span class="token string">"/dns-query"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>options <span class="token punctuation">&#123;</span>        directory <span class="token string">"/var/cache/bind"</span><span class="token punctuation">;</span>        listen-on port <span class="token number">53</span> <span class="token punctuation">&#123;</span> localhost<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        listen-on port <span class="token number">443</span> tls doh http dns-over-https  <span class="token punctuation">&#123;</span> localhost<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>     <span class="token comment"># 配合上述 tls  http 开启 DOH</span>        recursion <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token comment"># 否则会出现不能解析 wan 网域名</span>        forwarders <span class="token punctuation">&#123;</span>            <span class="token number">8.8</span>.8.8<span class="token punctuation">;</span>            <span class="token number">223.5</span>.5.5<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        forward  first<span class="token punctuation">;</span>        version  <span class="token string">"hiden version"</span><span class="token punctuation">;</span>        allow-transfer <span class="token punctuation">&#123;</span> <span class="token number">10.13</span>.3.107<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        allow-query <span class="token punctuation">&#123;</span>          example<span class="token punctuation">;</span>          company<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        auth-nxdomain <span class="token boolean">true</span><span class="token punctuation">;</span>        dnssec-validation <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>acl <span class="token string">"example"</span> <span class="token punctuation">&#123;</span>    <span class="token number">10.10</span>.6.0/24<span class="token punctuation">;</span>    <span class="token number">10.13</span>.3.0/24<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>acl <span class="token string">"company"</span> <span class="token punctuation">&#123;</span>    <span class="token number">10.10</span>.6.0/24<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>view <span class="token string">"example"</span> <span class="token punctuation">&#123;</span>  match-clients <span class="token punctuation">&#123;</span> example<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  zone <span class="token string">"example.net"</span> IN  <span class="token punctuation">&#123;</span>       <span class="token builtin class-name">type</span> master<span class="token punctuation">;</span>       <span class="token function">file</span> <span class="token string">"/etc/bind/example/example.db.zones"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  zone <span class="token string">"13.10.in-addr.arpa."</span> IN  <span class="token punctuation">&#123;</span>       <span class="token builtin class-name">type</span> master<span class="token punctuation">;</span>       <span class="token function">file</span> <span class="token string">"/etc/bind/example/example.reverse.zones"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>view <span class="token string">"company"</span> <span class="token punctuation">&#123;</span>  match-clients <span class="token punctuation">&#123;</span> company<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  zone <span class="token string">"company.com"</span> IN  <span class="token punctuation">&#123;</span>       <span class="token builtin class-name">type</span> master<span class="token punctuation">;</span>       <span class="token function">file</span> <span class="token string">"/etc/bind/example/company.db.zones"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>视图使用主要参考本章<a href="##">智能视图使用</a></p><ul><li>&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones</li></ul><pre class="line-numbers language-none"><code class="language-none">$TTL 10M@       IN      SOA     example.top. admin.example.top. (                                   1   ; serial                                1200   ; refresh                                 900    ; retry                                 900    ; expire                               1200 )  ; minimum @        IN      NS      nameservernameserver   IN  A       10.13.3.107nameserver  IN  A       10.13.3.109    test         IN  A       10.13.3.109k8s          IN  A       10.13.3.110<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>反向区域解析文件 &#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.reverse.zones  </p><pre class="line-numbers language-none"><code class="language-none">$TTL 10M@       IN      SOA     example.net.  admin.example.net. (                                  1   ; serial                                24h   ; refresh                                15m   ; retry                                1d    ; expire                                5m  ; minimum)       IN      NS      nameserver.      # 不能缺省这个&quot;.&quot;107.3  IN    PTR    ldap.example.net.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>测试  </p><pre class="line-numbers language-none"><code class="language-none">dig   目标域名   @namserver    +shortdig   目标ip   -x   +shortnslookup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="1-2-5-参数介绍"><a href="#1-2-5-参数介绍" class="headerlink" title="1.2.5  参数介绍"></a>1.2.5  参数介绍</h3><p>allow-update { none; };  定义允许执行动态 DNS 更新的客户端<br>allow-transfer { xx ; } 允许 xx 地址从您的 DNS 服务器复制数据<br>forward first; 优先选择转发到的 DNS 服务器<br>forwarders {}; 转发器，转发到另外的 DNS<br>recursion yes; 启用递归查询<br>dnssec-validation no; 禁用 BIND9 服务器上的 DNSSEC 验证，此时返回的数据或许有准确度的问题<br>auth-nxdomain no; 符合 RFC1035  </p><ol><li>Refresh（刷新）：Refresh 指定了 DNS 服务器应从主服务器获取区域数据的频率。最佳的 Refresh 时间取决于你的特定需求，通常在几小时到一天之间。较短的 Refresh 时间可以更快地更新数据，但会增加主服务器的负载。  </li><li>Retry（重试）：Retry 指定了 DNS 服务器在未能联系到主服务器时应进行的重试间隔。最佳的 Retry 时间通常在几分钟到一小时之间，取决于网络的可靠性和延迟。较短的 Retry 时间可以更快地恢复到主服务器，但会增加 DNS 查询负载。  </li><li>Expire（过期）：Expire 指定了区域数据在主服务器不可用时的最大存储时间。最佳的 Expire 时间通常在几天到一周之间。较短的 Expire 时间可以更快地更新过期的数据，但会增加 DNS 查询的负载。  </li><li>Minimum TTL（最小生存时间）：Minimum TTL 指定了 DNS 解析器或缓存服务器应保留解析结果的最小时间。最佳的 Minimum TTL 时间取决于你的特定需求，通常在几分钟到一天之间。较短的 Minimum TTL 时间可以更快地更新解析结果，但会增加 DNS 查询的负载。</li></ol><hr><h1 id="二、DNS-从服务器"><a href="#二、DNS-从服务器" class="headerlink" title="二、DNS 从服务器"></a>二、DNS 从服务器</h1><h2 id="2-1-配置"><a href="#2-1-配置" class="headerlink" title="2.1  配置"></a>2.1  配置</h2><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;bind&#x2F;named.conf同于 master 即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p>&#x2F;etc&#x2F;bind&#x2F;named.conf.options</p><pre class="line-numbers language-none"><code class="language-none">tls doh &#123;   key-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;key.pem&quot;;   cert-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert&#x2F;ca.pem&quot;;&#125;;http dns-over-https &#123;    endpoints &#123;&quot;&#x2F;dns-query&quot;;&#125;;&#125;;options &#123;        directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;        listen-on port 53 &#123; localhost; &#125;;        listen-on port 443 tls doh http default &#123; localhost; &#125;;        recursion true;        forwarders &#123;            8.8.8.8;            223.5.5.5;        &#125;;        forward  first;        version  &quot;hiden version&quot;;        allow-query &#123;          example;          company;        &#125;;        auth-nxdomain true;        dnssec-validation false;&#125;;acl &quot;example&quot; &#123;    10.10.6.0&#x2F;24;    10.13.3.0&#x2F;24;&#125;;acl &quot;company&quot; &#123;    10.10.6.0&#x2F;24;&#125;;view &quot;example&quot; &#123;  match-clients &#123; example; &#125;;  zone &quot;example.net&quot; IN  &#123;       type slave;       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones.signed&quot;;       masters &#123; 10.13.3.106; &#125;;  &#125;;  zone &quot;3.13.10.in-addr.arpa.&quot; IN  &#123;       type slave;       masters &#123; 10.13.3.106; &#125;;       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.reverse.zones&quot;;  &#125;;&#125;;view &quot;company&quot; &#123;  match-clients &#123; company; &#125;;  zone &quot;company.com&quot; IN  &#123;       type slave;       masters &#123; 10.13.3.106; &#125;;       file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;company.db.zones&quot;;  &#125;;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>&#x2F;etc&#x2F; apparmor.d&#x2F;usr.sbin.named  设置可写。dumping master file: &#x2F;etc&#x2F;bind&#x2F;example&#x2F;tmp-80LUGLiqE4: open: permission denied  </p><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;bind&#x2F;example&#x2F;** rw,systemctl reload apparmor.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="2-2-测试记录同步"><a href="#2-2-测试记录同步" class="headerlink" title="2.2 测试记录同步"></a>2.2 测试记录同步</h2><ul><li>修改主服务器，解析记录，测试从服务器的同步情况  <pre class="line-numbers language-none"><code class="language-none">$TTL 10M@       IN      SOA     example.top.  admin.example.top. (                                   2   ; serial   [[每次需要修改版本号]]                                1200   ; refresh                                 900    ; retry                                 900    ; expire                               1200 )  ; minimum @        IN      NS      nameserver@        IN      NS      nameserver2              [[较版本1新增]]nameserver   IN  A       10.13.3.107nameserver2  IN  A       10.13.3.109              [[较版本1新增]]test         IN  A       10.13.3.109k8s          IN  A       10.13.3.110me           IN  A       10.10.6.1               [[较版本1新增]]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><strong>热加载</strong>新增的配置，每次修改记录时，需要同步修改<em><strong>版本号</strong></em>，slave 才能同步成功  </p><pre class="line-numbers language-none"><code class="language-none">sudo rndc reload     # 主服务器执行即可dig -t a me.example.top @10.13.3.109<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>当从服务器有解析文件的，解析记录仍会向主服务器请求，主服务器宕机，从服务器缓存过期之后，也仍不能加载并实施解析区域记录文件  </li><li>同一个网段在多个acl下，将不能正常解析。</li></ul><h2 id="2-3-测试公网域名"><a href="#2-3-测试公网域名" class="headerlink" title="2.3 测试公网域名"></a>2.3 测试公网域名</h2><ul><li>此時公网域名成功解析得到的是保留ip地址，ping 域名不能成功—-因为公司的 ip 做了加密  </li><li>不能成功解析则无记录返回</li></ul><hr><h1 id="三、-安全"><a href="#三、-安全" class="headerlink" title="三、 安全"></a>三、 安全</h1><h2 id="3-1-功能同于bind-chroot"><a href="#3-1-功能同于bind-chroot" class="headerlink" title="3.1 功能同于bind-chroot"></a>3.1 功能同于bind-chroot</h2><pre class="line-numbers language-none"><code class="language-none">vi &#x2F;etc&#x2F;apparmor.d&#x2F;usr.sbin.named# 检查是否存在，否则增加以下内容  &#x2F;etc&#x2F;bind&#x2F;** r,  &#x2F;var&#x2F;lib&#x2F;bind&#x2F;** rw,  &#x2F;var&#x2F;lib&#x2F;bind&#x2F; rw,  &#x2F;var&#x2F;cache&#x2F;bind&#x2F;** lrw,  &#x2F;var&#x2F;cache&#x2F;bind&#x2F; rw,  &#x2F;var&#x2F;log&#x2F;named&#x2F;** rw,  &#x2F;var&#x2F;log&#x2F;named&#x2F; rw,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-2-开启DNSSEC验证，参考"><a href="#3-2-开启DNSSEC验证，参考" class="headerlink" title="3.2 开启DNSSEC验证，参考"></a>3.2 开启DNSSEC验证，<a href="https://www.cnblogs.com/anpengapple/p/5879363.html">参考</a></h2><ul><li><p>作用：对域名进行签名认证，保证域名的完整性和正确性，不会被修改  </p></li><li><p>在新增的 dnssec_keys 目录中生成密钥  </p><pre class="line-numbers language-none"><code class="language-none">sudo dnssec-keygen -f KSK -a RSASHA256 -b 2048 -n ZONE example.net.sudo dnssec-keygen -a RSASHA256  -b 2048 -n ZONE example.net.# 查看本域应用所需的密钥文件  ls Kexample.net.+008+16296.key   Kexample.net.+008+16296.private   Kexample.net.+008+23579.key  Kexample.net.+008+23579.private<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>将前面生成的两个公钥添加到区域配置文件末尾  </p><pre class="line-numbers language-none"><code class="language-none">$TTL 10M@       IN      SOA     example.net.  admin.example.net. (                                  1   ; serial                                24h   ; refresh                                15m   ; retry                                1d    ; expire                                5m )  ; minimum@        IN      NS      nameservernameserver       IN      A       10.13.3.106ldap   IN  A   10.13.3.107test   IN  A   10.13.3.105$INCLUDE  &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;dnssec_keys&#x2F;Kexample.net.+008+23579.key&quot;$INCLUDE  &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;dnssec_keys&#x2F;Kexample.net.+008+16296.key&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>对区域文件签名，会生成一个新的zones.sigend. 如果新增了解析记录，需要再次加密  </p><pre class="line-numbers language-none"><code class="language-none">sudo dnssec-signzone -K &#x2F;etc&#x2F;bind&#x2F;example&#x2F;dnssec_keys&#x2F; -o example.net. &#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.db.zones -K  指定密钥文件路径    -o  域名   路径是区域解析文件路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>改动引用解析文件路径的位置  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">view <span class="token string">"example"</span> <span class="token punctuation">&#123;</span>  match-clients <span class="token punctuation">&#123;</span> example<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  zone <span class="token string">"example.net"</span> IN  <span class="token punctuation">&#123;</span>       <span class="token builtin class-name">type</span> master<span class="token punctuation">;</span>       <span class="token function">file</span> <span class="token string">"/etc/bind/example/example.db.zones.signed"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>生成信任锚文件 &#x2F;etc&#x2F;bind&#x2F;example&#x2F;sec-trust-anchors.conf  </p></li><li><p>这里面的两条内容是刚才生成的两个密钥的内容。用公钥比较方便（也就是.key的文件）。注意复制的时候去掉“IN”和“DNSKEY”这两个词，以及后面的key要加引号  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">trusted-keys <span class="token punctuation">&#123;</span>   example.net.   <span class="token number">256</span> <span class="token number">3</span> <span class="token number">8</span>  <span class="token string">"AwEAAb+3BGqXqE/WwDICGRONYv1w4savuaD4cJ/VRL6xGg2b54OilEWE WMzUAOw4B/sPyKZDG/XTnaW4mD756l/swRuq9kO/sktgu4ZP4onmqeFM sdMTTmxesp6Q6ebqAPNzQfKyZwqX6Iq00qGslUmxr5FSOLWjGoze8afm TxbPW6Hi7JQ85mJ+TkpUNa+ymDS4qKi87rSi8NQTDbsZ0wH7+zX1TBOP jeUI/JsxD/bu1kD97AP9u2Sd4D8U0vyN8fN4LIIKfA5vurPaWPfQIM8r I0KQueAHdNLOPjaEWcKg/rBHFWZPxIeQGM8D2VXwkdPL5fefC59wONhK ys2RMqv3DIM="</span><span class="token punctuation">;</span>  example.net.   <span class="token number">257</span> <span class="token number">3</span> <span class="token number">8</span> <span class="token string">"AwEAAbZo3hpm+0+32jgrTXog3CCUTTctP3LoBx1F0nbpoEBkWN1CA//O 7fzNY08pwblkKKW/LkYiQNQEQq50ThouV9UJ+CFRf/Fju6ggIpWpNjsu 8c2+zROZdJ9d2T6JnVTYPo1Iyn8ufn0hFjPRrwdvfQKSmnI9ZRx2eRFc ZFJpqNTj2LwzqoEKrbOn4oywqTWJL1Hyjv8e/kBojy7BghKWYnTGlpha 9CSin17qUQCY+o0qMzmezq+/AbxhdJwV9KYHWzWvNZjyyjBLyxwwsV4F shgmXm2tTuW5gPrnbfzaP+R/cElzl03mtjmJ//g5wWMMV8QKemBpbNoR ajzYYhhocWk="</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>引入此信任锚文件 &#x2F;etc&#x2F;bind&#x2F;name.conf  </p><pre class="line-numbers language-none"><code class="language-none">include &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;sec-trust-anchors.conf&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>重启服务  </p></li><li><p>验证  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">dig</span> +dnssec  test.example.net  @10.13.3.106<span class="token punctuation">;</span> <span class="token operator">&lt;&lt;</span><span class="token operator">>></span> DiG <span class="token number">9.16</span>.1-Ubuntu <span class="token operator">&lt;&lt;</span><span class="token operator">>></span> +dnssec test.example.net @10.13.3.106<span class="token punctuation">;</span><span class="token punctuation">;</span> global options: +cmd<span class="token punctuation">;</span><span class="token punctuation">;</span> Got answer:<span class="token punctuation">;</span><span class="token punctuation">;</span> -<span class="token operator">>></span>HEADER<span class="token operator">&lt;&lt;-</span> opcode: QUERY, status: NOERROR, id: <span class="token number">28767</span><span class="token punctuation">;</span><span class="token punctuation">;</span> flags: qr aa rd ra<span class="token punctuation">;</span> QUERY: <span class="token number">1</span>, ANSWER: <span class="token number">2</span>, AUTHORITY: <span class="token number">0</span>, ADDITIONAL: <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">;</span> OPT PSEUDOSECTION:<span class="token punctuation">;</span> EDNS: version: <span class="token number">0</span>, flags: <span class="token keyword">do</span><span class="token punctuation">;</span> udp: <span class="token number">1232</span><span class="token punctuation">;</span> COOKIE: 0d6b52d25063b09401000000655592b51d0f8f6c0b072961 <span class="token punctuation">(</span>good<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span> QUESTION SECTION:<span class="token punctuation">;</span>test.example.net.                        IN      A<span class="token punctuation">;</span><span class="token punctuation">;</span> ANSWER SECTION:test.example.net.         <span class="token number">600</span>     IN      A       <span class="token number">10.13</span>.3.105test.example.net.         <span class="token number">600</span>     IN      RRSIG   A <span class="token number">8</span> <span class="token number">3</span> <span class="token number">600</span> <span class="token number">20231216022642</span> <span class="token number">20231116022642</span> <span class="token number">16296</span> example.net. iUSB+maT6y22ySZdEZHElShHCVDbmjnHez39eosniP1wqvquyadVydlT lZ3XZbUMNTV3WrZhLEjuGaVwNajvAqeY07IPCivpr+VCuIPXccONBwZE 3ZRX5B2PcGnrhMWupH+jcoT5NTy5pAEdm5JXbtJljFyJk1XxQVhanzJO /TY7YMJWWDbj3WnywkEPQyP5UYExl4Y0E3BPUX/J4xuCspTovQhqo6BM HaC3XFMG1Li9CbHcfNkUjVtdi8oQmAdM6lMqFTz5KNpIRppqhEukcD9o w9slLc1vpjDwqzO7xPls8S9WbzMeHzHNbIrPcv88MQWUAIVyqodbhOvj <span class="token assign-left variable">8ZKlgg</span><span class="token operator">==</span><span class="token punctuation">;</span><span class="token punctuation">;</span> Query time: <span class="token number">0</span> msec<span class="token punctuation">;</span><span class="token punctuation">;</span> SERVER: <span class="token number">10.13</span>.3.106<span class="token comment">#53(10.13.3.106)</span><span class="token punctuation">;</span><span class="token punctuation">;</span> WHEN: Thu Nov <span class="token number">16</span> <span class="token number">11</span>:55:33 CST <span class="token number">2023</span><span class="token punctuation">;</span><span class="token punctuation">;</span> MSG SIZE  rcvd: <span class="token number">384</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>问题：  </p></li><li><p>配置后，每个客户端需要添加信任锚文件以作签名验证  </p></li><li><p>这个签名后的zone可以被伪造，使用dig命令输出的文件修改伪造</p></li></ul><h2 id="3-3-创建视图管理，智能DNS"><a href="#3-3-创建视图管理，智能DNS" class="headerlink" title="3.3 创建视图管理，智能DNS"></a>3.3 创建视图管理，智能DNS</h2><p><a href="https://www.cnblogs.com/anpengapple/p/5879350.html">参考1</a><br><a href="https://www.cnblogs.com/etangyushan/p/4335521.html">参考2</a><br><a href="http://www.hangdaowangluo.com/archives/1633">参考3</a><br><a href="https://www.server-world.info/en/note?os=Ubuntu_20.04&p=dns&f=5">ubuntu案例</a>  </p><ul><li>vim  &#x2F;etc&#x2F;bind&#x2F;named.conf</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">include <span class="token string">"/etc/bind/named.conf.options"</span><span class="token punctuation">;</span>include <span class="token string">"/etc/bind/named.conf.local"</span><span class="token punctuation">;</span><span class="token comment"># include "/etc/bind/named.conf.default-zones";</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>cat  &#x2F;etc&#x2F;bind&#x2F;named.conf.options</li></ul><pre class="line-numbers language-none"><code class="language-none">options &#123;        directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;        listen-on port 53 &#123; localhost; &#125;;        recursion yes;        # 允许递归才能在智能dns解析万网域名        forwarders &#123;          223.5.5.5;        &#125;;        forward  first;        version  &quot;hiden version&quot;;   # 隐藏版本        allow-transfer &#123; 10.13.3.106; &#125;;        allow-query &#123;           example;          company;        &#125;;        auth-nxdomain true;        dnssec-validation false; # dns安全拓展的选项&#125;;# 此处定义目标ip地址段，划分可访问的域acl &quot;example&quot; &#123;    10.13.3.0&#x2F;24;    10.10.6.0&#x2F;24;&#125;;acl &quot;company&quot; &#123;    10.10.6.0&#x2F;24;&#125;;# 此处制定目标ip可以访问的域名的解析区域view &quot;example&quot; &#123;  match-clients &#123; example; &#125;;  include &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.views&quot;;&#125;;view &quot;company&quot; &#123;  match-clients &#123; company; &#125;;  include &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;company.views&quot;;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>views 文件中指定区域解析文件，eg：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zone <span class="token string">"example.net"</span> IN <span class="token punctuation">&#123;</span>                                          <span class="token comment"># 此处域名和 zones 文件中的域名一致</span>      <span class="token builtin class-name">type</span> master<span class="token punctuation">;</span>      <span class="token function">file</span> <span class="token string">"/etc/bind/example/example.net.zones"</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>zone <span class="token string">"3.13.10.in-addr.arpa."</span> IN <span class="token punctuation">&#123;</span>                         <span class="token comment"># 此处格式固定，设计反向解析的ip的网络位，和zones文件中的主机位结合成为完整ip地址</span>      <span class="token builtin class-name">type</span> master<span class="token punctuation">;</span>      <span class="token function">file</span> <span class="token string">"/etc/bind/example/example.net.reverse.zones"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>zone <span class="token string">"example.top"</span> IN <span class="token punctuation">&#123;</span>                              <span class="token comment"># 配置此 dns 向 10.13.3.101 这个转发器请求解析 example.top 的域名。在全局 options 配置转发没有成功，选择了此方案。</span>      <span class="token builtin class-name">type</span> forward<span class="token punctuation">;</span>      forwarders <span class="token punctuation">&#123;</span><span class="token number">10.13</span>.3.101<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>正向区域解析文件  </p><pre class="line-numbers language-none"><code class="language-none">$TTL 10M@       IN      SOA     example.net.  admin.example.net. (                                  1   ; serial                                24h   ; refresh                                15m   ; retry                                1d    ; expire                                5m  ; minimum) @        IN      NS      nameservernameserver       IN      A       10.13.3.106ldap   IN  A   10.13.3.107test   IN  A   10.13.3.105<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>反向区域解析文件  </p><pre class="line-numbers language-none"><code class="language-none">$TTL 10M@       IN      SOA     example.net.  admin.example.net. (                                  1   ; serial                                24h   ; refresh                                15m   ; retry                                1d    ; expire                                5m  ; minimum)       IN      NS      nameserver.      # 不能缺省这个&quot;.&quot;107  IN    PTR    ldap.example.net.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>测试   </p><pre class="line-numbers language-none"><code class="language-none">dig   目标域名   @namserver    +shortdig   目标ip   -x   +shortnslookup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="3-4-加密"><a href="#3-4-加密" class="headerlink" title="3.4 加密"></a>3.4 加密</h2><p><a href="https://runtufenxiang.com/6186/">知名公共DoT&#x2F;DoH加密DNS服务器</a><br><a href="https://devblog.rayonnant.net/creating-a-dot-and-doh-server-using-nginx-and-bind/">配置</a><br><a href="https://dididudu998.github.io/2022/02/15/configure-doh-bind.html">bind9 tls &#x2F; https</a>网络层的问题是DoT使用853的端口，很容易被封锁，而DoH使用443端口，一般不会被封锁    </p><h3 id="3-4-1-DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）"><a href="#3-4-1-DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）" class="headerlink" title="3.4.1 DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）"></a>3.4.1 DOH一般是url，不适用IP地址，选择DOT方案。（经验证不合适）</h3><pre class="line-numbers language-none"><code class="language-none">tls mycert &#123;    cert-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;cert.pem&quot;;    key-file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;key.pem&quot;;&#125;;options &#123;    directory &quot;&#x2F;var&#x2F;cache&#x2F;bind&quot;;    listen-on port 853 tls mycert &#123; localhost; &#125;;    forward  first;    forwarders &#123;            223.5.5.5;            120.53.53.53;    &#125;;    allow-query &#123; 10.13.3.0&#x2F;24;&#125;;    auth-nxdomain true;    allow-update &#123; none; &#125;;  &#x2F;&#x2F;  allow-transfer &#123; 10.13.3.106; &#125;;    version  &quot;hiden version&quot;;    recursion false;&#125;;zone &quot;example.net&quot;&#123;   type master;   file &quot;&#x2F;etc&#x2F;bind&#x2F;example&#x2F;example.net.zones&quot;;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>客户端修改dns地址步骤如下：  </li><li>&#x2F;etc&#x2F;resolv.conf  是软链接，指向了&#x2F;run&#x2F;systemd&#x2F;resolve&#x2F;stub-resolv.conf。直接修改内容会被覆盖，没有意义  </li><li>vim &#x2F;etc&#x2F;systemd&#x2F;resolved.conf  <pre class="line-numbers language-none"><code class="language-none">[Resolve]DNS&#x3D;10.13.3.106[[FallbackDNS]]&#x3D;DNSOverTLS&#x3D;opportunistic  # 或者yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>systemctl restart systemd-resolved.service   </li><li>mv &#x2F;etc&#x2F;resolv.conf   &#x2F;etc&#x2F;resolv.conf.bak  </li><li>ln -s &#x2F;run&#x2F;systemd&#x2F;resolve&#x2F;resolv.conf &#x2F;etc&#x2F;</li></ul><h3 id="3-4-2-问题"><a href="#3-4-2-问题" class="headerlink" title="3.4.2 问题"></a>3.4.2 问题</h3><ul><li><p>以上配置之后，使用特定命令发现 DOT 是成功的，例如  </p><pre class="line-numbers language-none"><code class="language-none">resolvectl query mee.example.netmee.example.net: 10.10.6.1                       -- link: ens160-- Information acquired via protocol DNS in 1.7ms.-- Data is authenticated: nodig +tls mee.example.net; &lt;&lt;&gt;&gt; DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu &lt;&lt;&gt;&gt; +tls mee.example.net;; global options: +cmd;; Got answer:;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 52275;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1;; WARNING: recursion requested but not available;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 1232; COOKIE: 174ae084d3aed77f01000000655474d3fbb4902501bc69cb (good);; QUESTION SECTION:;mee.example.net.                 IN      A;; ANSWER SECTION:mee.example.net.          600     IN      A       10.10.6.1;; Query time: 0 msec;; SERVER: 10.13.3.106#853(10.13.3.106) (TLS);; WHEN: Wed Nov 15 15:35:47 CST 2023;; MSG SIZE  rcvd: 86以上访问了dns服务器853端口，所以返回正常解析<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>普通解析会失败  </p><pre class="line-numbers language-none"><code class="language-none">dig mee.example.net  （nslookup ssh  ping）;; communications error to 10.13.3.106#53: connection refused;; communications error to 10.13.3.106#53: connection refused;; communications error to 10.13.3.106#53: connection refused; &lt;&lt;&gt;&gt; DiG 9.18.19-1+ubuntu20.04.1+isc+1-Ubuntu &lt;&lt;&gt;&gt; mee.example.net;; global options: +cmd;; no servers could be reached<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>因此，仍然开启 53 端口，二者同时可以使用，但是如果需要特定的方式使用DNSOverTLS ，那么以目前在服务器上的使用上来看，使用是没有意义的。  </p></li><li><p>在服务器使用 53，在浏览器使用自建 DOH，是适宜的</p></li></ul><h3 id="3-4-3-DOH-加密和转发"><a href="#3-4-3-DOH-加密和转发" class="headerlink" title="3.4.3  DOH 加密和转发"></a>3.4.3  DOH 加密和转发</h3><ul><li><p>配置  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tls doh <span class="token punctuation">&#123;</span>   key-file <span class="token string">"/etc/bind/example/cert/key.pem"</span><span class="token punctuation">;</span>   cert-file <span class="token string">"/etc/bind/example/cert/ca.pem"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>http dns-over-https <span class="token punctuation">&#123;</span>    endpoints <span class="token punctuation">&#123;</span><span class="token string">"/dns-query"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>options <span class="token punctuation">&#123;</span>        listen-on port <span class="token number">443</span> tls doh http default <span class="token punctuation">&#123;</span> localhost<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>检测  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">dig</span> +https  test.example.net  @10.13.3.106 A<span class="token punctuation">;</span> <span class="token operator">&lt;&lt;</span><span class="token operator">>></span> DiG <span class="token number">9.18</span>.19-1+ubuntu20.04.1+isc+1-Ubuntu <span class="token operator">&lt;&lt;</span><span class="token operator">>></span> +https test.example.net @10.13.3.106 A<span class="token punctuation">;</span><span class="token punctuation">;</span> global options: +cmd<span class="token punctuation">;</span><span class="token punctuation">;</span> Got answer:<span class="token punctuation">;</span><span class="token punctuation">;</span> -<span class="token operator">>></span>HEADER<span class="token operator">&lt;&lt;-</span> opcode: QUERY, status: NOERROR, id: <span class="token number">15036</span><span class="token punctuation">;</span><span class="token punctuation">;</span> flags: qr aa rd ra<span class="token punctuation">;</span> QUERY: <span class="token number">1</span>, ANSWER: <span class="token number">1</span>, AUTHORITY: <span class="token number">0</span>, ADDITIONAL: <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">;</span> OPT PSEUDOSECTION:<span class="token punctuation">;</span> EDNS: version: <span class="token number">0</span>, flags:<span class="token punctuation">;</span> udp: <span class="token number">1232</span><span class="token punctuation">;</span> COOKIE: dcdab07360fe04b2010000006555c9c6572491f7e49a2f35 <span class="token punctuation">(</span>good<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span> QUESTION SECTION:<span class="token punctuation">;</span>test.example.net.                        IN      A<span class="token punctuation">;</span><span class="token punctuation">;</span> ANSWER SECTION:test.example.net.         <span class="token number">600</span>     IN      A       <span class="token number">10.13</span>.3.105<span class="token punctuation">;</span><span class="token punctuation">;</span> Query time: <span class="token number">0</span> msec<span class="token punctuation">;</span><span class="token punctuation">;</span> SERVER: <span class="token number">10.13</span>.3.106<span class="token comment">#443(10.13.3.106) (HTTPS)</span><span class="token punctuation">;</span><span class="token punctuation">;</span> WHEN: Thu Nov <span class="token number">16</span> <span class="token number">15</span>:50:30 CST <span class="token number">2023</span><span class="token punctuation">;</span><span class="token punctuation">;</span> MSG SIZE  rcvd: <span class="token number">87</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用<br>此时在客户端使用 DOH ，浏览器设置 use secure dns ，custom url ： <a href="https://nameserver.example.net/dns-query">https://nameserver.example.net/dns-query</a><br>在客户端其他程序的使用中，仍然会访问 dns 的 53 端口</p></li></ul><h2 id="3-5-其他安全实践"><a href="#3-5-其他安全实践" class="headerlink" title="3.5 其他安全实践"></a>3.5 其他安全实践</h2><ul><li>下列参考<a href="https://www.secpulse.com/archives/52634.html">来源</a>  <pre class="line-numbers language-none"><code class="language-none">隐藏BIND版本号限定哪台主机能够发起区域传输<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><pre class="line-numbers language-none"><code class="language-none">version  &quot;hiden version&quot;;                             #  隐藏版本信息allow-transfer &#123; 221.236.9.9; &#125;;    #  指定允许某从服务器进行区域传输到该服务器，此配置一般在主服务器配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="四、web-管理以及反向代理"><a href="#四、web-管理以及反向代理" class="headerlink" title="四、web 管理以及反向代理"></a>四、web 管理以及反向代理</h1><p><a href="https://www.mmcloud.com/2863.html">安装 webmin工具</a><br><a href="https://devpress.csdn.net/cloud/6304db5f7e6682346619cf4b.html">使用ngingx反代</a>  </p><ul><li>路径nginx&#x2F;conf.d&#x2F;webmin.conf   （检查443、80端口，确认dns地址和解析记录）  <pre class="line-numbers language-none"><code class="language-none">upstream webmin &#123;  server 10.13.3.107:10000;&#125;server &#123;  listen 80;  server_name webmin.example.net;  return 301 https:&#x2F;&#x2F;$server_name$request_uri;&#125;server &#123;  server_name webmin.example.net;  listen 443 ssl;  ssl_certificate webmin&#x2F;tls_ca.pem;  ssl_certificate_key webmin&#x2F;tls_key.pem;  location &#x2F; &#123;    proxy_pass      https:&#x2F;&#x2F;webmin;    proxy_redirect  off;    proxy_set_header   Host             $host:$server_port;    proxy_set_header   X-Real-IP        $remote_addr;    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;    proxy_set_header X-Forwarded-Proto &quot;https&quot;;    proxy_connect_timeout      10;    proxy_send_timeout         10;    proxy_read_timeout         10;    proxy_buffer_size          128k;    proxy_buffers              32 32k;    proxy_busy_buffers_size    256k;    proxy_temp_file_write_size 256k;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h1 id="五、bind9-18-nginx-反向代理"><a href="#五、bind9-18-nginx-反向代理" class="headerlink" title="五、bind9.18  nginx 反向代理"></a>五、bind9.18  nginx 反向代理</h1><p><a href="https://www.infvie.com/ops-notes/nginx-udp-dns.html">反向代理参考</a>  </p>]]></content>
      
      
      <categories>
          
          <category> ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The First time using Helm Charts</title>
      <link href="/ops_blog/2023/12/04/the-first-time-using-helm-charts/"/>
      <url>/ops_blog/2023/12/04/the-first-time-using-helm-charts/</url>
      
        <content type="html"><![CDATA[<h2 id="一、ldap-account-manager"><a href="#一、ldap-account-manager" class="headerlink" title="一、ldap-account-manager"></a>一、ldap-account-manager</h2><h3 id="1-1-Repo-URL"><a href="#1-1-Repo-URL" class="headerlink" title="1.1 Repo URL"></a>1.1 Repo URL</h3><ul><li><a href="https://gabibbo97.github.io/charts/">https://gabibbo97.github.io/charts/</a></li><li>Set image tag:8.3 in the chart.yaml</li></ul><h3 id="1-2-Values-Modify—-values-yaml"><a href="#1-2-Values-Modify—-values-yaml" class="headerlink" title="1.2 Values Modify—-values.yaml"></a>1.2 Values Modify—-values.yaml</h3><pre class="line-numbers language-none"><code class="language-none">extraEnv:  LAM_SKIP_PRECONFIGURE: false  LDAP_DOMAIN: example.net;ibswufe.com  LDAP_BASE_DN: dc&#x3D;example,dc&#x3D;net;dc&#x3D;ibswufe,dc&#x3D;com  LDAP_SERVER: ldaps:&#x2F;&#x2F;ldap01.example.net  LDAP_USER: cn&#x3D;administrator,dc&#x3D;example,dc&#x3D;net  LAM_LANG: zh_CN  LAM_PASSWORD: lam<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、-self-service-password"><a href="#二、-self-service-password" class="headerlink" title="二、 self-service-password"></a>二、 self-service-password</h2><h3 id="2-1-Repo-URL"><a href="#2-1-Repo-URL" class="headerlink" title="2.1 Repo URL"></a>2.1 Repo URL</h3><ul><li><a href="https://ygqygq2.github.io/charts/">https://ygqygq2.github.io/charts/</a></li><li>Set image tag:5.3.3 to pull the latest one</li></ul><h3 id="2-2-Charts-Using"><a href="#2-2-Charts-Using" class="headerlink" title="2.2 Charts Using"></a>2.2 Charts Using</h3><h4 id="2-2-1-ENV-Setting-ConfigMap"><a href="#2-2-1-ENV-Setting-ConfigMap" class="headerlink" title="2.2.1 ENV Setting ConfigMap"></a>2.2.1 ENV Setting ConfigMap</h4><ul><li>So confused about why cannot make it effective when I  using  the ConfigMap settings In the values.yaml to  cover the default php configurations of this soft.</li><li>So that , Using a ConfigMap Data to  define the container environment variables of this chart.</li><li>env-config.yaml</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap<span class="token key atrule">metadata</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> self<span class="token punctuation">-</span>service<span class="token punctuation">-</span>password<span class="token punctuation">-</span>env<span class="token key atrule">data</span><span class="token punctuation">:</span>  <span class="token key atrule">USE_QUESTIONS</span><span class="token punctuation">:</span> <span class="token string">'false'</span><span class="token key atrule">LDAP_BINDDN</span><span class="token punctuation">:</span> <span class="token string">"cn=exampleadmin,dc=example,dc=net"</span><span class="token key atrule">SECRETEKEY</span><span class="token punctuation">:</span> <span class="token string">"example"</span><span class="token key atrule">DEFAULT_ACTION</span><span class="token punctuation">:</span> <span class="token string">"sendtoken"</span><span class="token key atrule">LANG</span><span class="token punctuation">:</span> <span class="token string">"cn,zh-CN"</span><span class="token key atrule">IS_BEHIND_PROXY</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token key atrule">SITE_URL</span><span class="token punctuation">:</span> <span class="token string">"https://ssp.example.net/index.php"</span><span class="token key atrule">LDAP_SERVER</span><span class="token punctuation">:</span> <span class="token string">"ldap://10.13.3.107"</span><span class="token key atrule">LDAP_BASE_SEARCH</span><span class="token punctuation">:</span> <span class="token string">"ou=example,dc=example,dc=net"</span><span class="token key atrule">LDAP_LOGIN_ATTRIBUTE</span><span class="token punctuation">:</span> <span class="token string">"cn"</span><span class="token key atrule">LOGO</span><span class="token punctuation">:</span> images/mnt/ltb<span class="token punctuation">-</span>logo.png                                  <span class="token comment"># 共享存储，挂载在容器中的/www/ssp/images/mnt</span><span class="token key atrule">BACKGROUND_IMAGE</span><span class="token punctuation">:</span> images/mnt/background.jpg<span class="token key atrule">MAIL_FROM_NAME</span><span class="token punctuation">:</span> <span class="token string">"密码自主修改服务"</span><span class="token key atrule">MAIL_SIGNATURE</span><span class="token punctuation">:</span> <span class="token string">"如有疑问,请联系运维同事,英博智云."</span><span class="token key atrule">MAIL_USE_LDAP</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token key atrule">NOTIFY_ON_CHANGE</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token key atrule">SMTP_AUTH_ON</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token key atrule">SMTP_HOST</span><span class="token punctuation">:</span> <span class="token string">"smtphz.qiye.163.com"</span><span class="token key atrule">MAIL_FROM</span><span class="token punctuation">:</span> <span class="token string">"chao.long@example.net"</span><span class="token key atrule">SMTP_USER</span><span class="token punctuation">:</span> <span class="token string">"chao.long@example.net"</span><span class="token key atrule">SMTP_SECURE_TYPE</span><span class="token punctuation">:</span> <span class="token string">'ssl'</span><span class="token key atrule">SMTP_PORT</span><span class="token punctuation">:</span> <span class="token string">'465'</span><span class="token key atrule">SMTP_AUTOTLS</span><span class="token punctuation">:</span> <span class="token string">'false'</span><span class="token key atrule">PASSWORD_DIFFERENT_LOGIN</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token key atrule">PASSWORD_MAX_LENGTH</span><span class="token punctuation">:</span> <span class="token string">'30'</span><span class="token key atrule">PASSWORD_MIN_LENGTH</span><span class="token punctuation">:</span> <span class="token string">'8'</span><span class="token key atrule">PASSWORD_MIN_LOWERCASE</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token key atrule">PASSWORD_MIN_SPECIAL</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token key atrule">PASSWORD_MIN_UPPERCASE</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token key atrule">PASSWORD_COMPLEXITY</span><span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token key atrule">PASSWORD_NO_REUSE</span><span class="token punctuation">:</span> <span class="token string">"true"</span><span class="token key atrule">PASSWORD_SHOW_POLICY</span><span class="token punctuation">:</span> <span class="token string">"always"</span><span class="token key atrule">PASSWORD_SPECIAL_CHARACTERS</span><span class="token punctuation">:</span> <span class="token string">"^a-zA-Z0-9"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>add a field <code>envFrom</code>  under the <code>env</code> in templates&#x2F;deployment-statefulset.yaml</li></ul><pre class="line-numbers language-none"><code class="language-none">env:&#123;&#123; toYaml .Values.env | indent 12 &#125;&#125;envFrom:- configMapRef:    name: self-service-password-env<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-2-Secret"><a href="#2-2-2-Secret" class="headerlink" title="2.2.2 Secret"></a>2.2.2 Secret</h4><ul><li>there are two variables need to been encrypted</li><li>values.secret</li></ul><pre class="line-numbers language-none"><code class="language-none">secret:  enabled: true  mountPath: &#x2F;etc&#x2F;secret-volume  subPath: &quot;&quot;  readOnly: true  data:    ldap_bindpass: &quot;example@2020&quot;    smtp_pass: &quot;WaLxeu3pvsQaqd7X&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-3-values-env"><a href="#2-2-3-values-env" class="headerlink" title="2.2.3 values.env"></a>2.2.3 values.env</h4><pre class="line-numbers language-none"><code class="language-none">env:  - name: LDAP_BINDPASS    valueFrom:      secretKeyRef:        name: self-service-password        key: ldap_bindpass  - name: SMTP_PASS    valueFrom:      secretKeyRef:        name: self-service-password        key: smtp_pass<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-4-persistentVolume"><a href="#2-2-4-persistentVolume" class="headerlink" title="2.2.4 persistentVolume"></a>2.2.4 persistentVolume</h4><ul><li>create  pv &amp; pvc resources under this namespace，mount the volume ，name: self-service-password</li></ul><pre class="line-numbers language-none"><code class="language-none">persistentVolume:   # 是否存储持久化  enabled: true  storageClass: &quot;-&quot;  accessMode: ReadWriteOnce  annotations: &#123;&#125;  size: 1Gi  # 大小  existingClaim: &#123;&#125;  # 使用已存在的pvc  mountPaths:   - name: data-storage     mountPath: &#x2F;www&#x2F;ssp&#x2F;images&#x2F;mnt  # 容器内路径，将新建 mnt     subPath: ssp-nfs                               # pv 中挂载点下的子目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>pv.yaml</li></ul><pre class="line-numbers language-none"><code class="language-none">apiVersion: v1kind: PersistentVolumemetadata:  name: self-service-passwordspec:  capacity:    storage: 1Gi  accessModes:    - ReadWriteOnce  persistentVolumeReclaimPolicy: Retain  nfs:    path: &#x2F;home&#x2F;example&#x2F;nfs # 指定nfs的挂载点    server: 10.13.3.108<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>Post  test，reverse proxy by nginx using Nodeport。Setting the dns resolving，take a visit of this site。</li></ul><pre class="line-numbers language-none"><code class="language-none">upstream ssp &#123;  server 10.13.3.109:32337;&#125;server &#123;    listen 80;    server_name ssp.example.net;    return 301 https:&#x2F;&#x2F;$server_name$request_uri;&#125;server &#123;    listen 443 ssl ;    server_name ssp.example.net;    ssl_certificate tls&#x2F;tls_ca.pem;     ssl_certificate_key tls&#x2F;tls_key.pem;    location &#x2F; &#123;      proxy_pass http:&#x2F;&#x2F;ssp;      proxy_set_header Host $host;      proxy_set_header X-Real-IP $remote_addr;      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;      proxy_set_header X-Forwarded-Proto &quot;https&quot;;      proxy_read_timeout 1800s;      proxy_http_version 1.1;      proxy_set_header Upgrade $http_upgrade;      proxy_set_header Connection &quot;upgrade&quot;;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>charts correction<br><code>utcook.fullname</code>   change into–&gt; <code>self-service-password.fullname</code></li></ul><h3 id="三、To-Do-List"><a href="#三、To-Do-List" class="headerlink" title="三、To Do List"></a>三、To Do List</h3><p>Learn more about：</p><ul><li>storageclass</li><li>traefik ingress</li></ul>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> helm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Failed to Post Blog</title>
      <link href="/ops_blog/2023/12/01/failed-to-post-blog/"/>
      <url>/ops_blog/2023/12/01/failed-to-post-blog/</url>
      
        <content type="html"><![CDATA[<p>Just because of the wrong layout of lines under the <code>summary</code>.<br>The texts of a new line should be recognized.</p>]]></content>
      
      
      <categories>
          
          <category> ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>homelab pc</title>
      <link href="/ops_blog/2023/11/27/homelab-pc/"/>
      <url>/ops_blog/2023/11/27/homelab-pc/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Computer-Parts"><a href="#1-Computer-Parts" class="headerlink" title="1. Computer Parts"></a>1. Computer Parts</h2><table><thead><tr><th align="center">配件</th><th align="center">规格</th><th align="center">价格</th></tr></thead><tbody><tr><td align="center">Motherboard</td><td align="center">华南x99双路8D4</td><td align="center">730含以下二者</td></tr><tr><td align="center">CPU</td><td align="center">E5-2680V4</td><td align="center"></td></tr><tr><td align="center">Cooler</td><td align="center">寒冰A500四铜管</td><td align="center"></td></tr><tr><td align="center">RAM</td><td align="center">闲鱼-镁光窄条2133-16G*4</td><td align="center">280</td></tr><tr><td align="center">GPU</td><td align="center">GTX750 4G 貌似全新</td><td align="center">335</td></tr><tr><td align="center">Chassis</td><td align="center">刀客360</td><td align="center">150</td></tr><tr><td align="center">Fan</td><td align="center">PDD-纯白*5</td><td align="center">48</td></tr><tr><td align="center">SSD</td><td align="center">BU KING 512G</td><td align="center">150</td></tr><tr><td align="center">Power</td><td align="center">华南U700双路电源600W</td><td align="center">243</td></tr><tr><td align="center">Tools</td><td align="center">硅脂、螺丝刀、网线</td><td align="center">25</td></tr></tbody></table><h2 id="2-Install-PVE-System"><a href="#2-Install-PVE-System" class="headerlink" title="2. Install PVE System"></a>2. Install PVE System</h2><ul><li>Ventoy</li><li>proxmox-ve_8.0-2.iso</li></ul><h3 id="2-1-Disable-the-subscription-on-web-UI"><a href="#2-1-Disable-the-subscription-on-web-UI" class="headerlink" title="2.1 Disable the subscription on web UI"></a>2.1 Disable the subscription on web UI</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token parameter variable">-i_orig</span> <span class="token string">"s/data.status === 'Active'/true/g"</span> /usr/share/pve-manager/js/pvemanagerlib.js<span class="token function">sed</span> <span class="token parameter variable">-i_orig</span> <span class="token string">"s/if (res === null || res === undefined || \!res || res/if(/g"</span> /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js<span class="token function">sed</span> <span class="token parameter variable">-i_orig</span> <span class="token string">"s/.data.status.toLowerCase() !== 'active'/false/g"</span> /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.jssystemctl restart pveproxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-Network-Settings"><a href="#2-2-Network-Settings" class="headerlink" title="2.2 Network Settings"></a>2.2 Network Settings</h3><ul><li><a href="https://www.bilibili.com/video/BV1xH4y1f7Ga/?spm_id_from=333.337.search-card.all.click&vd_source=154006e70f5c14d792db947270b63614">reference</a></li><li>pve host using a vitual NIC and bridging the network connection to a physical NIC<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/network/interfacesauto loiface lo inet loopbackiface enp6s0 inet manual    <span class="token comment"># physical NIC</span>auto vmbr0               <span class="token comment"># Vitrual NIC</span>iface vmbr0 inet static        address <span class="token number">192.168</span>.3.20/24        gateway <span class="token number">192.168</span>.3.1        bridge-ports enp6s0     <span class="token comment">#bridging</span>        bridge-stp off        bridge-fd <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart networking <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="2-3-Using-a-homeland-repository-source"><a href="#2-3-Using-a-homeland-repository-source" class="headerlink" title="2.3  Using a homeland repository source"></a>2.3 <a href="https://www.wunote.cn/article/10000"> Using a homeland repository source</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># modify the ubuntu software source</span><span class="token function">wget</span> https://mirrors.ustc.edu.cn/proxmox/debian/proxmox-release-bookworm.gpg <span class="token parameter variable">-O</span> /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg<span class="token builtin class-name">echo</span> <span class="token string">"deb https://mirrors.ustc.edu.cn/proxmox/debian bookworm pve-no-subscription"</span> <span class="token operator">></span> /etc/apt/sources.list.d/pve-no-subscription.list<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s|^deb http://ftp.debian.org|deb https://mirrors.ustc.edu.cn|g'</span> /etc/apt/sources.list<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s|^deb http://security.debian.org|deb https://mirrors.ustc.edu.cn/debian-security|g'</span> /etc/apt/sources.list<span class="token comment"># modify the ceph repository source</span><span class="token builtin class-name">echo</span> <span class="token string">"deb https://mirrors.ustc.edu.cn/proxmox/debian/ceph-quincy bookworm no-subscription"</span> <span class="token operator">></span> /etc/apt/sources.list.d/ceph.list<span class="token comment"># CT images source</span><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s|http://download.proxmox.com|https://mirrors.ustc.edu.cn/proxmox|g'</span> /usr/share/perl5/PVE/APLInfo.pm<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/^/#/'</span> /etc/apt/sources.list.d/pve-enterprise.list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-Virtual-machine-on-pve-host"><a href="#3-Virtual-machine-on-pve-host" class="headerlink" title="3. Virtual machine on pve host"></a>3. Virtual machine on pve host</h2><h3 id="3-1-SYS"><a href="#3-1-SYS" class="headerlink" title="3.1 SYS"></a>3.1 SYS</h3><ul><li>ubuntu 22.04.3 server</li><li>choose network bridging on vmbr0, it’s convenient and fast. also because of my simple network architecture.</li></ul><h3 id="3-2-Repository-Source"><a href="#3-2-Repository-Source" class="headerlink" title="3.2 Repository Source"></a>3.2 Repository Source</h3><pre class="line-numbers language-none"><code class="language-none">deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; jammy main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; jammy-security main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; jammy-updates main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; jammy-backports main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-Install-containerd、nerdctl-make-this-vm-as-a-template"><a href="#3-3-Install-containerd、nerdctl-make-this-vm-as-a-template" class="headerlink" title="3.3 Install containerd、nerdctl &amp; make this vm as a template"></a>3.3 Install containerd、nerdctl &amp; make this vm as a template</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> containerdcontainerd config default <span class="token operator">></span> /etc/containerd/config.toml  <span class="token comment"># generating a default configuration of containerd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>Modify part of this file, like below example.</li></ul><pre class="line-numbers language-toml" data-language="toml"><code class="language-toml"><span class="token key property">sandbox_image</span> <span class="token punctuation">=</span> <span class="token string">"registry.aliyuncs.com/google_containers/pause:3.8"</span><span class="token key property">SystemdCgroup</span> <span class="token punctuation">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span><span class="token table class-name">plugins."io.containerd.grpc.v1.cri".registry.mirrors</span><span class="token punctuation">]</span>        <span class="token punctuation">[</span><span class="token table class-name">plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"</span><span class="token punctuation">]</span>          <span class="token key property">endpoint</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">"https://bqr1dr1n.mirror.aliyuncs.com"</span><span class="token punctuation">]</span>        <span class="token punctuation">[</span><span class="token table class-name">plugins."io.containerd.grpc.v1.cri".registry.mirrors."k8s.gcr.io"</span><span class="token punctuation">]</span>          <span class="token key property">endpoint</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">"https://registry.aliyuncs.com/google_containers"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>Install the nerdctl by binary package</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://download.fastgit.org/containerd/nerdctl/releases/download/v0.12.1/nerdctl-0.12.1-linux-amd64.tar.gz<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /usr/local/containerd/bin/ <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> nerdctl-0.12.1-linux-amd64.tar.gz nerdctl <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> nerdctl /usr/local/containerd/bin/<span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/containerd/bin/nerdctl /usr/local/bin/nerdctl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="3-4-System-settings"><a href="#3-4-System-settings" class="headerlink" title="3.4 System settings"></a>3.4 System settings</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ipv4 forward</span><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">|</span> <span class="token function">tee</span> /etc/modules-load.d/k8s.conf</span>overlaybr_netfilterEOF</span>modprobe overlaymodprobe br_netfilter<span class="token function">cat</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">|</span> <span class="token function">tee</span> /etc/sysctl.d/k8s.conf</span>net.bridge.bridge-nf-call-iptables  = 1net.bridge.bridge-nf-call-ip6tables = 1net.ipv4.ip_forward                 = 1EOF</span><span class="token function">sysctl</span> <span class="token parameter variable">--system</span><span class="token function">sysctl</span> net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward<span class="token comment"># swap</span>swapoff <span class="token parameter variable">-a</span><span class="token function">vim</span> /etc/fstab  <span class="token comment"># /swap.img      none    swap    sw      0       0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>Transform this vm into template by Web UI of pve</li></ul><h2 id="4-Kubernetes"><a href="#4-Kubernetes" class="headerlink" title="4. Kubernetes"></a>4. Kubernetes</h2><h3 id="4-1-Install-kubeadm-kubelet-kubectl"><a href="#4-1-Install-kubeadm-kubelet-kubectl" class="headerlink" title="4.1 Install kubeadm kubelet kubectl"></a>4.1 Install kubeadm kubelet kubectl</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main <span class="token operator">></span> /etc/apt/sources.list.d/kubernetes.list<span class="token function">curl</span> https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg <span class="token operator">|</span> <span class="token punctuation">\</span>apt-key <span class="token function">add</span> -<span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> kubelet kubeadm kubectlapt-mark hold kubelet kubeadm kubectl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-generate-a-default-configuration-file-in-workspace-path-to-init-the-cluster"><a href="#4-2-generate-a-default-configuration-file-in-workspace-path-to-init-the-cluster" class="headerlink" title="4.2 generate a default configuration file in workspace path to init the cluster"></a>4.2 generate a default configuration file in workspace path to init the cluster</h3><pre class="line-numbers language-none"><code class="language-none">kubeadm config print init-defaults --component-configs KubeletConfiguration &gt; kubeadm.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>modify part of configuration file</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">localAPIEndpoint</span><span class="token punctuation">:</span>  <span class="token key atrule">advertiseAddress</span><span class="token punctuation">:</span> 192.168.3.11  <span class="token comment">#master IP</span>  <span class="token key atrule">bindPort</span><span class="token punctuation">:</span> <span class="token number">6443</span><span class="token key atrule">nodeRegistration</span><span class="token punctuation">:</span>  <span class="token key atrule">criSocket</span><span class="token punctuation">:</span> unix<span class="token punctuation">:</span>///var/run/containerd/containerd.sock  <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent    <span class="token comment">#name: master1  # defaults to be node</span>  <span class="token key atrule">taints</span><span class="token punctuation">:</span> <span class="token null important">null</span><span class="token punctuation">---</span><span class="token key atrule">apiServer</span><span class="token punctuation">:</span>  <span class="token key atrule">timeoutForControlPlane</span><span class="token punctuation">:</span> 4m0s<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> kubeadm.k8s.io/v1beta3<span class="token key atrule">certificatesDir</span><span class="token punctuation">:</span> /etc/kubernetes/pki<span class="token key atrule">clusterName</span><span class="token punctuation">:</span> kubernetes<span class="token key atrule">controllerManager</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token key atrule">dns</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token key atrule">etcd</span><span class="token punctuation">:</span>  <span class="token key atrule">local</span><span class="token punctuation">:</span>    <span class="token key atrule">dataDir</span><span class="token punctuation">:</span> /var/lib/etcd<span class="token key atrule">imageRepository</span><span class="token punctuation">:</span> registry.aliyuncs.com/google_containers  <span class="token comment">#changing into repository in china</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterConfiguration<span class="token key atrule">kubernetesVersion</span><span class="token punctuation">:</span> 1.28.0    <span class="token comment"># specify the version of kube</span><span class="token key atrule">networking</span><span class="token punctuation">:</span>  <span class="token key atrule">dnsDomain</span><span class="token punctuation">:</span> cluster.local  <span class="token key atrule">podSubnet</span><span class="token punctuation">:</span> 10.244.0.0/16    <span class="token comment"># need to add</span>  <span class="token key atrule">serviceSubnet</span><span class="token punctuation">:</span> 10.96.0.0/12<span class="token key atrule">scheduler</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> kubeproxy.config.k8s.io/v1alpha1 <span class="token comment"># add</span><span class="token key atrule">kind</span><span class="token punctuation">:</span> KubeProxyConfiguration<span class="token key atrule">mode</span><span class="token punctuation">:</span> ipvs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>init cluster</li></ul><pre class="line-numbers language-none"><code class="language-none">sudo kubeadm init --config kubeadm-config.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>work nodes joining the cluster</li></ul><pre class="line-numbers language-none"><code class="language-none">kubeadm join 192.168.3.14:6443 --token n8orxj.f51riixygulit9yz \        --discovery-token-ca-cert-hash sha256:c0af38d55001f6eaf09ca9248db5e048c492ee4b883f0534a54187eceb50a928<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>after all the work nodes joining the cluster, deploy the flannel</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://raw.githubusercontent.com/flannel-io/flannel/v0.20.1/Documentation/kube-flannel.ymlkubectl apply <span class="token parameter variable">-f</span> kube-flannel.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>check status of cluster</li></ul><pre class="line-numbers language-none"><code class="language-none">kubectl get nodes -Akubectl get pods -A<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5-Fault"><a href="#5-Fault" class="headerlink" title="5. Fault"></a>5. Fault</h2><h3 id="5-1-kubectl-get-nodes"><a href="#5-1-kubectl-get-nodes" class="headerlink" title="5.1 kubectl get nodes"></a>5.1 kubectl get nodes</h3><ul><li>descriobe</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">couldn't get current server API group list: Get <span class="token string">"http://localhost:8080/api?timeout=32s"</span><span class="token builtin class-name">:</span> dial tcp <span class="token number">127.0</span>.0.1:8080: connect: connection refusedThe connection to the server localhost:8080 was refused - did you specify the right <span class="token function">host</span> or port?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>solution: fogot to apply the config, it’s printed by the kubeadm init command</li></ul><pre class="line-numbers language-none"><code class="language-none">mkdir -p $HOME&#x2F;.kubesudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;configsudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-2-The-kubelet-is-not-running"><a href="#5-2-The-kubelet-is-not-running" class="headerlink" title="5.2 The kubelet is not running"></a>5.2 The kubelet is not running</h3><ul><li>describe</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>kubelet-check<span class="token punctuation">]</span> Initial <span class="token function">timeout</span> of 40s passed.Unfortunately, an error has occurred:        timed out waiting <span class="token keyword">for</span> the conditionThis error is likely caused by:        - The kubelet is not running        - The kubelet is unhealthy due to a misconfiguration of the <span class="token function">node</span> <span class="token keyword">in</span> some way <span class="token punctuation">(</span>required cgroups disabled<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>solution: changing the wrong advertiseAddress, supoose to be mine master IP.</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># in some  conditions, this setting may help. It controls the cgroup driver of kubelet</span>kind: KubeletConfigurationapiVersion: kubelet.config.k8s.io/v1beta1cgroupDriver: systemd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-3-coredns-pod-halting-on-creating-status"><a href="#5-3-coredns-pod-halting-on-creating-status" class="headerlink" title="5.3 coredns pod halting on creating status."></a>5.3 coredns pod halting on creating status.</h3><ul><li>describe</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Warning  FailedCreatePodSandBox  42s   kubelet            Failed to create pod sandbox: rpc error: code <span class="token operator">=</span> Unknown desc <span class="token operator">=</span> failed to setup network <span class="token keyword">for</span> sandbox <span class="token string">"03e2b9a1ceaf66beb681891dc276ea490d664822b43047f25d3b5d4a11e76eb0"</span><span class="token builtin class-name">:</span> plugin <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">"flannel"</span> failed <span class="token punctuation">(</span>add<span class="token punctuation">)</span>: <span class="token function">open</span> /run/flannel/subnet.env: no such <span class="token function">file</span> or directory<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>solutions: creating a file &amp;&amp; reset the cluster and reinstall the kube-flannel. ( worked in this case, solution of <code>work not ready</code>)(the file below maybe useless,it’s important to set <code>Podsubnet</code> in the init config file)</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span>  /run/flannel/subnet.env  <span class="token comment">#  manual creating</span><span class="token assign-left variable">FLANNEL_NETWORK</span><span class="token operator">=</span><span class="token number">10.244</span>.0.0/16<span class="token assign-left variable">FLANNEL_SUBNET</span><span class="token operator">=</span><span class="token number">10.244</span>.0.1/24<span class="token assign-left variable">FLANNEL_MTU</span><span class="token operator">=</span><span class="token number">1450</span><span class="token assign-left variable">FLANNEL_IPMASQ</span><span class="token operator">=</span>true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DIY </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Multiple Domians in OpenLdap Use Case</title>
      <link href="/ops_blog/2023/10/24/multiple-domians-in-openldap-use-case/"/>
      <url>/ops_blog/2023/10/24/multiple-domians-in-openldap-use-case/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenLDAP"><a href="#OpenLDAP" class="headerlink" title="OpenLDAP"></a>OpenLDAP</h1><h2 id="一、-概念"><a href="#一、-概念" class="headerlink" title="一、 概念"></a>一、 概念</h2><p><a href="https://www.openldap.org/doc/admin26/guide.html">官方手册</a></p><h3 id="1-1-常用属性"><a href="#1-1-常用属性" class="headerlink" title="1.1 常用属性"></a>1.1 常用属性</h3><ul><li>DN：Distinguished Name，LDAP记录项的标识，有唯一性，例如：dc:”cn&#x3D;admin,ou&#x3D;developer,dc&#x3D;163,dc&#x3D;com”  </li><li>dc&#x3D; DomainComponent 为域组件，域名的一部分</li><li>cn&#x3D;CommonName 为记录名，表示一个实体，最长到80个字符，可以为中文；</li><li>ou&#x3D;OrganizationUnit 为组织单位，用于分类，最多四级，每级最长32字符，可以为中文；</li><li>uid&#x3D;User id 为用户的唯一标识</li><li>c&#x3D;Country 为国家名，可选，为2个字符长</li><li>o&#x3D;Organization 为组织名，可选，可以3—64个字符长</li></ul><h2 id="二、-手动安装和配置-LDAP"><a href="#二、-手动安装和配置-LDAP" class="headerlink" title="二、 手动安装和配置 LDAP"></a>二、 手动安装和配置 LDAP</h2><h3 id="2-1-安装-slapd-独立的-LDAP-守护进程，同时便于管理服务"><a href="#2-1-安装-slapd-独立的-LDAP-守护进程，同时便于管理服务" class="headerlink" title="2.1 安装 slapd (独立的 LDAP 守护进程，同时便于管理服务)"></a>2.1 安装 slapd (独立的 LDAP 守护进程，同时便于管理服务)</h3><pre class="line-numbers language-none"><code class="language-none">sudo apt install  -y slapd ldap-utils<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-重新配置-OpenLDAP，创建-base-dn"><a href="#2-2-重新配置-OpenLDAP，创建-base-dn" class="headerlink" title="2.2  重新配置 OpenLDAP，创建 base dn"></a>2.2  重新配置 OpenLDAP，创建 base dn</h3><pre class="line-numbers language-none"><code class="language-none">sudo dpkg-reconfigure slapd   # 主要配置密码 (密码在下一步重置，便于配置连接)，DNS domain name(即 LDAP 服务中的 base dn) 说明：第一步回答 No第二步填写域名，比如 mycompany.com第三步填写组织名，比如 Company第四步填写管理员密码，比如 secret；第五步确认管理员密码第六步选择使用的数据库后端，比如 MDB第七步选择在清除 slapd 时是否移除数据库，比如 Yes第八步选择是否移除旧数据库，比如 Yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-生成密码，用于控制台登录的admin帐号，需要保存此密文密码"><a href="#2-3-生成密码，用于控制台登录的admin帐号，需要保存此密文密码" class="headerlink" title="2.3 生成密码，用于控制台登录的admin帐号，需要保存此密文密码"></a>2.3 生成密码，用于控制台登录的admin帐号，需要保存此密文密码</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">slappasswd<span class="token punctuation">&#123;</span>SSHA<span class="token punctuation">&#125;</span>UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>通过数据库修改admin用户的ldif文件<pre class="line-numbers language-ldif" data-language="ldif"><code class="language-ldif">&#x2F;etc&#x2F;ldap&#x2F;slapd.d&#x2F;cn\&#x3D;config&#x2F;olcDatabase\&#x3D;\&#123;1\&#125;mdb.ldifolcDatabase: &#123;1&#125;mdbolcSuffix: dc&#x3D;example,dc&#x3D;topolcRootDN: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;topolcRootPW: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>olcDatabase: 定义使用的后端数据存储格式,遵循默认</li><li>olcSuffix: 设置 LDAP 服务的根</li><li>olcRootDN: 设置管理员用户的 dn</li><li>olcRootPW: 管理员用户的密码</li><li>修改后重启服务<pre class="line-numbers language-none"><code class="language-none">sudo slaptest -u   # 检查配置文件sudo systemctl enable slapd  --nowsudo slapcat        # 输出看到当前数据库内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="2-4-正确的修改olcRootPW-管理员用户的密码"><a href="#2-4-正确的修改olcRootPW-管理员用户的密码" class="headerlink" title="2.4 正确的修改olcRootPW: 管理员用户的密码"></a>2.4 正确的修改olcRootPW: 管理员用户的密码</h3><pre class="line-numbers language-none"><code class="language-none">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;configchangetype: modifyreplace: olcRootPWolcRootPW: example2020  # 保存在数据库文件中的时候将会被加密<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f passmodify.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">同时进入web ui，修改admin账户的密码，如果不修改两个密码都能管理域，二者修改一致之后，才是新的管理密码生效<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-5-简单结构展示"><a href="#2-5-简单结构展示" class="headerlink" title="2.5 简单结构展示"></a>2.5 简单结构展示</h3><p>略</p><h3 id="2-6-创建base-dn"><a href="#2-6-创建base-dn" class="headerlink" title="2.6 创建base dn"></a>2.6 创建base dn</h3><h4 id="2-6-1-查看LDAP服务器的根目录信息"><a href="#2-6-1-查看LDAP服务器的根目录信息" class="headerlink" title="2.6.1 查看LDAP服务器的根目录信息"></a>2.6.1 查看LDAP服务器的根目录信息</h4><pre class="line-numbers language-none"><code class="language-none">sudo ldapsearch -x -LLL -b &#39;&#39; -s base &#39;(objectclass&#x3D;*)&#39;dn:objectClass: topobjectClass: OpenLDAProotDSE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-6-2-基于-ldif-文件直接创建，不使用图形化交互。创建之后，对这个-base-dn-设置管理员的密码"><a href="#2-6-2-基于-ldif-文件直接创建，不使用图形化交互。创建之后，对这个-base-dn-设置管理员的密码" class="headerlink" title="2.6.2 基于 ldif 文件直接创建，不使用图形化交互。创建之后，对这个 base dn 设置管理员的密码"></a>2.6.2 基于 ldif 文件直接创建，不使用图形化交互。创建之后，对这个 base dn 设置管理员的密码</h4><pre class="line-numbers language-none"><code class="language-none">-dn: dc&#x3D;example,dc&#x3D;topchangetype: addobjectClass: topobjectClass: domain-dn: o&#x3D;example,dc&#x3D;example,dc&#x3D;topchangetype: addobjectClass: organizationo: example<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">ldapmodify -x -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -w example@2020  -f organization.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-7-创建多个-DIT-base-dn-（可以考虑尝试后端用-mysql-做数据库）"><a href="#2-7-创建多个-DIT-base-dn-（可以考虑尝试后端用-mysql-做数据库）" class="headerlink" title="2.7 创建多个 DIT + base dn （可以考虑尝试后端用 mysql 做数据库）"></a>2.7 创建多个 DIT + base dn （可以考虑尝试后端用 <code>mysql</code> 做数据库）</h3><h4 id="2-7-1-为新的库，准备存储路径，并通过apparmor做权限限制"><a href="#2-7-1-为新的库，准备存储路径，并通过apparmor做权限限制" class="headerlink" title="2.7.1 为新的库，准备存储路径，并通过apparmor做权限限制"></a>2.7.1 为新的库，准备存储路径，并通过<code>apparmor</code>做权限限制</h4><pre class="line-numbers language-none"><code class="language-none">mkdir  &#x2F;var&#x2F;lib&#x2F;ldap2chown openldap:openldap  &#x2F;var&#x2F;lib&#x2F;ldap2vim &#x2F;etc&#x2F;apparmor.d&#x2F;usr.sbin.slapd# the databases and logs&#x2F;var&#x2F;lib&#x2F;ldap2&#x2F; r,&#x2F;var&#x2F;lib&#x2F;ldap2&#x2F;** rwk,# lock file&#x2F;var&#x2F;lib&#x2F;ldap2&#x2F;alock kw,sudo systemctl  reload  apparmor <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-7-2-准备-ldif-文件，创建新的-DIT（可以自定义路径）"><a href="#2-7-2-准备-ldif-文件，创建新的-DIT（可以自定义路径）" class="headerlink" title="2.7.2 准备 ldif 文件，创建新的 DIT（可以自定义路径）"></a>2.7.2 准备 ldif 文件，创建新的 DIT（可以自定义路径）</h4><pre class="line-numbers language-none"><code class="language-none">dn: olcDatabase&#x3D;&#123;2&#125;mdb,cn&#x3D;configchangetype: addobjectClass: olcDatabaseConfigobjectClass: olcMdbConfigolcDbDirectory: &#x2F;var&#x2F;lib&#x2F;ldap2&#x2F;olcDatabase: &#123;2&#125;MdbolcDbIndex: objectClass eqolcDbIndex: cn,uid eqolcDbIndex: uidNumber,gidNumber eqolcDbIndex: member,memberUid eqolcLastMod: TRUEolcMonitoring: TRUEolcDBNoSync: TRUEolcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by anonymous auth by * non eolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * readolcSuffix: dc&#x3D;example,dc&#x3D;techolcRootDN: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;techolcRootPW: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo  ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f domian2.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-7-3-新增并设置管理员"><a href="#2-7-3-新增并设置管理员" class="headerlink" title="2.7.3 新增并设置管理员"></a>2.7.3 新增并设置管理员</h4><pre class="line-numbers language-none"><code class="language-none">-dn: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;techobjectClass: simpleSecurityObjectobjectClass: organizationalRolecn: adminuserPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;# 以下是playbook中模板文件-dn: cn&#x3D;admin,&#123;&#123; item.base_dn &#125;&#125;  changetype: add  objectClass: simpleSecurityObject  objectClass: organizationalRole  cn: admin  userPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo ldapadd -x -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;tech&quot; -w example@2020 -f basedn2.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-7-4-多-DIT-跨域-ACL"><a href="#2-7-4-多-DIT-跨域-ACL" class="headerlink" title="2.7.4 多 DIT 跨域 ACL"></a>2.7.4 多 DIT 跨域 ACL</h4><ul><li><p>查询服务器的域</p><pre class="line-numbers language-none"><code class="language-none">ldapsearch -x -H ldap:&#x2F;&#x2F;10.13.3.107 -b &quot;&quot; -s base namingContexts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>设置一个全权限的 acl ，跨域访问，相应的用户需已经提前创建</p></li></ul><pre class="line-numbers language-none"><code class="language-none">让这个dn 用户: cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech ;  可以阅读这个base dn : dc&#x3D;example,dc&#x3D;top 下的所有条目.对应关系：数据库----&#123;1&#125;mdb  存储的数据是来自 dn: dc&#x3D;example,dc&#x3D;top 。即，对谁的访问则将 acl 添加在谁的库下  dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;configchangetype: modifyadd: olcAccessolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; by dn.base&#x3D;&quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; read<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">ldapmodify   -Y   EXTERNAL   -H   ldapi:&#x2F;&#x2F;&#x2F;   -f  xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-7-5-测试"><a href="#2-7-5-测试" class="headerlink" title="2.7.5 测试"></a>2.7.5 测试</h4><pre class="line-numbers language-none"><code class="language-none">root@example-sys-test-06:&#x2F;etc&#x2F;ldap&#x2F;example# ldapsearch -x -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -D &quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; -w example@2020# extended LDIF## LDAPv3# base &lt;dc&#x3D;example,dc&#x3D;top&gt; with scope subtree# filter: (objectclass&#x3D;*)# requesting: ALL## example.topdn: dc&#x3D;example,dc&#x3D;topobjectClass: topobjectClass: domaindc: example# admin, example.topdn: cn&#x3D;admin,dc&#x3D;example,dc&#x3D;topobjectClass: simpleSecurityObjectobjectClass: organizationalRolecn: admin# search resultsearch: 2result: 0 Success# numResponses: 3# numEntries: 2root@example-sys-test-06:&#x2F;etc&#x2F;ldap&#x2F;example# ldapsearch -x -b &quot;dc&#x3D;example,dc&#x3D;tech&quot; -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -w example@2020# extended LDIF## LDAPv3# base &lt;dc&#x3D;example,dc&#x3D;tech&gt; with scope subtree# filter: (objectclass&#x3D;*)# requesting: ALL## search resultsearch: 2result: 32 No such object# numResponses: 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>测试的日志<pre class="line-numbers language-none"><code class="language-none">Sep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 fd&#x3D;12 ACCEPT from IP&#x3D;127.0.0.1:59834 (IP&#x3D;0.0.0.0:389)Sep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; method&#x3D;128Sep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;user.tech,dc&#x3D;example,dc&#x3D;tech&quot; mech&#x3D;SIMPLE ssf&#x3D;0Sep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;Sep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;Sep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;2 text&#x3D;Sep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 op&#x3D;2 UNBINDSep 15 14:18:54 example-sys-test-06 slapd[10052]: conn&#x3D;1097 fd&#x3D;12 closed&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Sep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 fd&#x3D;12 ACCEPT from IP&#x3D;127.0.0.1:34916 (IP&#x3D;0.0.0.0:389)Sep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128Sep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0Sep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;Sep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;tech&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;Sep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;32 nentries&#x3D;0 text&#x3D;Sep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 op&#x3D;2 UNBINDSep 15 14:19:14 example-sys-test-06 slapd[10052]: conn&#x3D;1098 fd&#x3D;12 closed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="三、-web管理器配置"><a href="#三、-web管理器配置" class="headerlink" title="三、 web管理器配置"></a>三、 web管理器配置</h2><h3 id="3-1-安装-LAM-（用于管理的Web-UI）"><a href="#3-1-安装-LAM-（用于管理的Web-UI）" class="headerlink" title="3.1 安装  LAM （用于管理的Web UI）"></a>3.1 安装  LAM （用于管理的Web UI）</h3><pre class="line-numbers language-none"><code class="language-none">apt-get install ldap-account-manager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>访问 <a href="http://ip/lam">http://ip/lam</a> ，lam的所有配置都可以在web端配置，不需要去服务器上修改一行代码</p><h4 id="3-1-1-LAM-configuration-helm-安装的主要修改内容"><a href="#3-1-1-LAM-configuration-helm-安装的主要修改内容" class="headerlink" title="3.1.1 LAM configuration (helm 安装的主要修改内容)"></a>3.1.1 LAM configuration (<a href="https://check-lc.github.io/ops_blog/2023/12/04/the-first-time-using-helm-charts/">helm 安装的主要修改内容</a>)</h4><pre>主要内容：  LDAP_DOMAIN: example.net;ibexample.com  LDAP_BASE_DN: dc=example,dc=net;dc=ibexample,dc=com  LDAP_SERVER: ldaps://ldap01.example.net  LDAP_USER: cn=administrator,dc=example,dc=net  LAM_LANG: zh_CN  LAM_PASSWORD: lam</pre><ul><li><p>tree view编辑更高效</p></li><li><p>如果选择 docker 安装镜像：ghcr.io&#x2F;ldapaccountmanager&#x2F;lam:8.4@sha256:283726bd23510f1c3bfbdcbfe861e6599e070616543aed02e9756075c97a9938</p></li></ul><h4 id="3-1-3-Nginx反向代理-LAM-Web-UI"><a href="#3-1-3-Nginx反向代理-LAM-Web-UI" class="headerlink" title="3.1.3 Nginx反向代理 LAM Web UI"></a>3.1.3 Nginx反向代理 LAM Web UI</h4><pre class="line-numbers language-none"><code class="language-none">upstream lam &#123;  server 10.13.3.108:8001;&#125;server &#123;  listen 80;  server_name lam.example.net;  return 301 https:&#x2F;&#x2F;$server_name$request_uri;&#125;server &#123;  server_name lam.example.net;  listen 443 ssl;  ssl_certificate webmin&#x2F;tls_ca.pem;  ssl_certificate_key webmin&#x2F;tls_key.pem;  location &#x2F; &#123;     proxy_pass http:&#x2F;&#x2F;lam&#x2F;;     proxy_set_header Host $host;     proxy_set_header X-Real-IP $remote_addr;     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;#     proxy_set_header X-Forwarded-Proto &quot;https&quot;;     proxy_read_timeout 1800s;     proxy_http_version 1.1;     proxy_set_header Upgrade $http_upgrade;     proxy_set_header Connection &quot;upgrade&quot;;    &#125;  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-测试-phpldapadmin"><a href="#3-2-测试-phpldapadmin" class="headerlink" title="3.2 测试 phpldapadmin"></a>3.2 测试 phpldapadmin</h3><pre class="line-numbers language-none"><code class="language-none">Setting up php8.1 (8.1.2-1ubuntu2.14)                       # 版本信息，配置文件完整，存在证书认证并可以指定路径Setting up php (2:8.1+92ubuntu1) Setting up phpldapadmin (1.2.6.3-0.2)                                       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-2-1-安装"><a href="#3-2-1-安装" class="headerlink" title="3.2.1 安装"></a>3.2.1 安装</h4><pre class="line-numbers language-none"><code class="language-none">apt-get install phpldapadmin -ynano &#x2F;etc&#x2F;phpldapadmin&#x2F;config.php$servers-&gt;setValue(&#39;server&#39;,&#39;name&#39;,&#39;My LDAP Server&#39;);                      # 辨识，区分的作用$servers-&gt;setValue(&#39;server&#39;,&#39;host&#39;,&#39;69.87.216.102&#39;);                              #  修改ip为服务器 ip$servers-&gt;;setValue(&#39;server&#39;,&#39;base&#39;,array(&#39;dc&#x3D;example,dc&#x3D;com&#39;));                    # 修改 array 内容为需求的根$servers-&gt;setValue(&#39;login&#39;,&#39;auth_type&#39;,&#39;session&#39;);                                              $servers-&gt;setValue(&#39;login&#39;,&#39;bind_id&#39;,&#39;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;com&#39;);           #   绑定登录帐号admin，相应修改 dn 号即可$servers-&gt;setValue(&#39;auto_number&#39;,&#39;min&#39;,array(&#39;uidNumber&#39;&#x3D;&gt;10000,&#39;gidNumber&#39;&#x3D;&gt;10000));   # 规定 uid，gid 数字表示的起始范围<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2-2-为-phpLDAPadmin-配置-Apache"><a href="#3-2-2-为-phpLDAPadmin-配置-Apache" class="headerlink" title="3.2.2 为 phpLDAPadmin 配置 Apache"></a>3.2.2 为 phpLDAPadmin 配置 Apache</h4><pre class="line-numbers language-none"><code class="language-none">a2dissite 000-default.conf        # 禁用默认的 Apache 虚拟主机配置文件systemctl restart apache2          <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="四、-主从架构-弃用，此配置需要在从服务器拉取-refresh"><a href="#四、-主从架构-弃用，此配置需要在从服务器拉取-refresh" class="headerlink" title="四、 主从架构(弃用，此配置需要在从服务器拉取 refresh)"></a>四、 主从架构(弃用，此配置需要在从服务器拉取 refresh)</h2><p><a href="https://darkdark.top/ch5-replication.html">模式介绍</a></p><h3 id="4-1-master-加载同步模块"><a href="#4-1-master-加载同步模块" class="headerlink" title="4.1 master 加载同步模块"></a>4.1 master 加载同步模块</h3><pre class="line-numbers language-none"><code class="language-none">cat &#x2F;etc&#x2F;ldap&#x2F;mod_syncprov.ldifdn: cn&#x3D;module,cn&#x3D;configobjectClass: olcModuleListcn: moduleolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldapolcModuleLoad: syncprov.la          # 此配置和上一句配置，实际是在请求这个路径的文件，&#x2F;usr&#x2F;lib&#x2F;ldap&#x2F;syncprov.la，不确定的可以用 find 查找ldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f .&#x2F;mod_syncprov.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-同步设置"><a href="#4-2-同步设置" class="headerlink" title="4.2 同步设置"></a>4.2 同步设置</h3><pre class="line-numbers language-none"><code class="language-none">root@example-sys-test-06:&#x2F;etc&#x2F;ldap# cat syncprov.ldif dn: olcOverlay&#x3D;syncprov,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config       # 此处需要确认自己的数据库是什么样的，&#123;2&#125;hdb--旧版本默认 &#x2F; &#123;1&#125;mdb--新版本默认objectClass: olcOverlayConfigobjectClass: olcSyncProvConfigolcOverlay: syncprovolcSpCheckpoint: 100 10olcSpSessionLog: 100ldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f .&#x2F;syncprov.ldif                             # 修改并应用条目到 LDAP 服务  -Y EXTERNAL    将使用服务器配置的外部身份验证方法进行身份验证，而不是使用用户名和密码; -H 指定服务器连接; -f 指定文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-3-从服务器配置"><a href="#4-3-从服务器配置" class="headerlink" title="4.3 从服务器配置"></a>4.3 从服务器配置</h3><pre class="line-numbers language-none"><code class="language-none">root@example-sys-test-07:&#x2F;etc&#x2F;ldap# cat syncrepl.ldifdn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;configchangetype: modifyadd: olcSyncReplolcSyncRepl: rid&#x3D;002  provider&#x3D;ldap:&#x2F;&#x2F;10.13.3.106:389&#x2F;        # 此处开始与上一行有缩进  bindmethod&#x3D;simple  binddn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot;  credentials&#x3D;example@2020        searchbase&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot;  scope&#x3D;sub  schemachecking&#x3D;on  type&#x3D;refreshAndPersist  retry&#x3D;&quot;5 5 300 +&quot;  attrs&#x3D;&quot;*,+&quot;  interval&#x3D;00:00:00:3ldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f &#x2F;etc&#x2F;ldap&#x2F;syncrepl.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>运行中，修改主服务器内数据后，对从服务器u做刷新，可以看到是否同步</li></ul><p>参数说明：</p><ul><li>provider 为ldap master&#x2F;slave的地址 ;</li><li>binddn：为域的基本信息，注这里一定要用管理员进行登录，否则同步不到用户的密码。</li><li>credentials: ldap管理员的密码</li><li>searchbase：选择要同步的独立域，根节点</li><li>scope：设置所有的条目匹配</li><li>schemachecking：设置同步更新时间检测</li><li>type：同步模式为refreshAndPersist， refreshOnly 模式下后续操作由客户端轮询完成</li><li>retry:同步更新重试次数和时间刚开始的5秒重试5次，以后每300秒重试一次</li><li>attrs:复制全部属性</li><li>interval 这里设置更新时间，这里为3秒一次，倒数第二个是分钟 以此类推。</li></ul><h2 id="四、-镜像复制（互为主从）"><a href="#四、-镜像复制（互为主从）" class="headerlink" title="四、 镜像复制（互为主从）"></a>四、 镜像复制（互为主从）</h2><p><a href="https://darkdark.top/ch5-replication.html">模式介绍</a></p><h3 id="4-1-为某域编辑-mirrorsync-ldif"><a href="#4-1-为某域编辑-mirrorsync-ldif" class="headerlink" title="4.1 为某域编辑 mirrorsync.ldif"></a>4.1 为某域编辑 mirrorsync.ldif</h3><pre class="line-numbers language-none"><code class="language-none">dn: cn&#x3D;module,cn&#x3D;config         # 此段配置加载s ync 模块objectClass: olcModuleListcn: moduleolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldapolcModuleLoad: syncprov.la     # 此配置和上一句，实际是在请求这个路径的文件，&#x2F;usr&#x2F;lib&#x2F;ldap&#x2F;syncprov.la，不确定的可 find 查找-dn: olcOverlay&#x3D;syncprov,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config         # 此处需确认自己的数据库，&#123;2&#125;hdb--为旧版本默认 &#x2F; &#123;1&#125;mdb--为新版本默认。路径 &#x2F;etc&#x2F;ldap&#x2F;slapd.d&#x2F;cn\&#x3D;config&#x2F;olcDatabase\&#x3D;\&#123;1\&#125;mdb.ldifobjectClass: olcOverlayConfigobjectClass: olcSyncProvConfigolcOverlay: syncprovolcSpSessionLog: 100-dn: cn&#x3D;configchangetype: modifyreplace: olcServerIDolcServerID: 0                                        # 用于标识本机的 server iddn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;config      # 以下配置用于开启复制，指定主服务器changetype: modifyadd: olcSyncReplolcSyncRepl: rid&#x3D;000                             # 标识唯一的 replica id  provider&#x3D;ldaps:&#x2F;&#x2F;ldap01.example.top       # 看上述记录介绍参数  bindmethod&#x3D;simple  binddn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot;  credentials&#x3D;example@2020  searchbase&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot;  tls_reqcert&#x3D;allow  scope&#x3D;sub  schemachecking&#x3D;on  type&#x3D;refreshAndPersist  retry&#x3D;&quot;30 5 300 3&quot;  interval&#x3D;00:00:05:00-add: olcMirrorMode                        # 开启 mirror modeolcMirrorMode: TRUE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-ldap01-example-top下编辑-mirrorsync-ldif"><a href="#4-2-ldap01-example-top下编辑-mirrorsync-ldif" class="headerlink" title="4.2 ldap01.example.top下编辑 mirrorsync.ldif"></a>4.2 ldap01.example.top下编辑 mirrorsync.ldif</h3><pre class="line-numbers language-none"><code class="language-none">dn: cn&#x3D;module,cn&#x3D;configobjectClass: olcModuleListcn: moduleolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldapolcModuleLoad: syncprov.la-dn: olcOverlay&#x3D;syncprov,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;configobjectClass: olcOverlayConfigobjectClass: olcSyncProvConfigolcOverlay: syncprovolcSpSessionLog: 100-dn: cn&#x3D;configchangetype: modifyreplace: olcServerIDolcServerID: 1dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;configchangetype: modifyadd: olcSyncReplolcSyncRepl: rid&#x3D;001  provider&#x3D;ldaps:&#x2F;&#x2F;ldap.example.top  bindmethod&#x3D;simple  binddn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot;  credentials&#x3D;example@2020  searchbase&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot;  tls_reqcert&#x3D;allow  scope&#x3D;sub  schemachecking&#x3D;on  type&#x3D;refreshAndPersist  retry&#x3D;&quot;30 5 300 3&quot;  interval&#x3D;00:00:05:00-add: olcMirrorModeolcMirrorMode: TRUE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-2-1-加载配置"><a href="#4-2-1-加载配置" class="headerlink" title="4.2.1 加载配置"></a>4.2.1 加载配置</h4><pre class="line-numbers language-none"><code class="language-none">ldapadd -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f mirrorsync.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="五、-TLS加密（自签名-权威证书）"><a href="#五、-TLS加密（自签名-权威证书）" class="headerlink" title="五、 TLS加密（自签名&#x2F;权威证书）"></a>五、 TLS加密（自签名&#x2F;权威证书）</h2><p>（自签名证书加密连接 nextcloud 失败，使用不便，采用 权威证书（多域合一）或stunnel）</p><h3 id="5-1-CA中心创建证书"><a href="#5-1-CA中心创建证书" class="headerlink" title="5.1 CA中心创建证书"></a>5.1 CA中心创建证书</h3><pre><code>此时使用LDAP 主服务器 作为 CA 中心，自签名</code></pre><ul><li><p>安装 gnutls-bin 和 ssl-cert 包</p><pre class="line-numbers language-none"><code class="language-none">sudo apt install gnutls-bin ssl-cert<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>为证书授权中心创建私钥</p><pre class="line-numbers language-none"><code class="language-none">sudo certtool --generate-privkey --bits 4096 --outfile &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>创建模板文件来定义CA</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;ssl&#x2F;ca.info cn &#x3D; example (example company)   ca cert_signing_key expiration_days &#x3D; 3650<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建自签名 CA (根)证书</p><pre class="line-numbers language-none"><code class="language-none">sudo certtool --generate-self-signed \--load-privkey &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem \--template &#x2F;etc&#x2F;ssl&#x2F;ca.info \--outfile &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Note：<br>  <code>--outfile</code>路径是正确的，将CA证书写入<code>/usr/local/share/ca-certificates</code>。<br>  <strong>update-ca-certificates</strong> 将从这里获取受信任的本地CA。如果要从<code>/usr/share/ca-certificates</code>获取CA，需要调用<code>dpkg-reconfigure ca-certificates</code></p></li><li><p>将新的 CA 根证书添加到受信任 CA 列表</p><pre class="line-numbers language-none"><code class="language-none">sudo update-ca-certificates     # 会创建一个&#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem符号链接，指向&#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates中的真实文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="5-2-创建-LDAP-服务的服务器私钥与证书"><a href="#5-2-创建-LDAP-服务的服务器私钥与证书" class="headerlink" title="5.2 创建 LDAP 服务的服务器私钥与证书"></a>5.2 创建 LDAP 服务的服务器私钥与证书</h3><ul><li><p>创建私钥</p><pre class="line-numbers language-none"><code class="language-none">sudo certtool --generate-privkey \--bits 2048 \--outfile &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>服务器信息文件</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;ssl&#x2F;ldap01.infoorganization &#x3D; examplecn &#x3D; ldap01.example.top                     # 服务器证书的DN必须使用CN属性来命名服务器，并且CN必须携带服务器的完全限定域名，dns 需要有 A 记录解析tls_www_serverencryption_keysigning_keyexpiration_days &#x3D; 365证书有效期为1年，仅对_&#96;ldap01&#96;_主机名有效<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建LDAP服务器的证书</p><pre class="line-numbers language-none"><code class="language-none">sudo certtool --generate-certificate \--load-privkey &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem \--load-ca-certificate &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem \--load-ca-privkey &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem \--template &#x2F;etc&#x2F;ssl&#x2F;ldap01.info \--outfile &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_cert.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>调整权限</p><pre class="line-numbers language-none"><code class="language-none">sudo chgrp openldap &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pemsudo chmod 0640 &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>ca根证书加入到受信列表</p><pre class="line-numbers language-none"><code class="language-none">sudo cp   cacertificatefile  &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crtsudo update-ca-certificates<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>对LDAP服务配置证书</p><pre class="line-numbers language-none"><code class="language-none">dn: cn&#x3D;configadd: olcTLSCACertificateFileolcTLSCACertificateFile: &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem-add: olcTLSCertificateFileolcTLSCertificateFile: &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_cert.pem-add: olcTLSCertificateKeyFileolcTLSCertificateKeyFile: &#x2F;etc&#x2F;ldap&#x2F;ldap01_slapd_key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置slapd-config数据库：</p><pre class="line-numbers language-none"><code class="language-none">sudo ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f certinfo.ldif <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>报错调整，更改<code>certinfo.ldif</code>，将<code>add</code>改成了<code>replace</code>，可以解决以下问题。修改后再次执行<code>ldapmodify</code></p><pre class="line-numbers language-none"><code class="language-none">ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f certinfo.ldif SASL&#x2F;EXTERNAL authentication started SASL username: gidNumber&#x3D;0+uidNumber&#x3D;0,cn&#x3D;peercred,cn&#x3D;external,cn&#x3D;auth SASL SSF: 0 modifying entry &quot;cn&#x3D;config&quot; ldap_modify: Inappropriate matching (18) additional info: modify&#x2F;add: olcTLSCACertificateFile: no equality matching rule<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>ldap-client增添配置文件</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;ldap&#x2F;ldap.conf# LDAP Defaults# See ldap.conf(5) for details# This file should be world readable but not world writable.BASE       dc&#x3D;example,dc&#x3D;top                                                      # LDAP服务的基础DNURI ldap:&#x2F;&#x2F;localhost:389 ldaps:&#x2F;&#x2F;localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制[[TIMELIMIT]]  15                                                                     # 最长搜索时间[[DEREF]]              never                                                            # 指定对别名的处理方式# TLS certificates (needed for GnuTLS)TLS_CACERT  &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径TLS_REQCERT demand                                                        # &quot;demand&quot;，表示需要验证服务器的证书<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>需要访问 LDAPS（LDAP over SSL），需要编辑配置，并重启 slapd</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;default&#x2F;slapdSLAPD_SERVICES&#x3D;&quot;ldap:&#x2F;&#x2F;&#x2F; ldapi:&#x2F;&#x2F;&#x2F; ldaps:&#x2F;&#x2F;&#x2F;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>测试启动 TLS</p><pre class="line-numbers language-none"><code class="language-none">ldapwhoami -x -ZZ -H ldap:&#x2F;&#x2F;ldap01.example.comanonymous<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>测试连接</p><pre class="line-numbers language-none"><code class="language-none">ldapwhoami -x -H ldaps:&#x2F;&#x2F;ldap01.example.comanonymous<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="5-3-LDAP-从服务器的-TLS-在主服务器创建后，拷贝证书到从服务器"><a href="#5-3-LDAP-从服务器的-TLS-在主服务器创建后，拷贝证书到从服务器" class="headerlink" title="5.3 LDAP 从服务器的 TLS, 在主服务器创建后，拷贝证书到从服务器"></a>5.3 LDAP 从服务器的 TLS, 在主服务器创建后，拷贝证书到从服务器</h3><ul><li>指定目录保存<pre class="line-numbers language-none"><code class="language-none">mkdir ldap02-sslcd ldap02-sslcerttool --generate-privkey \--bits 2048 \--outfile ldap02_slapd_key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>编辑信息文件ldap02.info<pre class="line-numbers language-none"><code class="language-none">organization &#x3D; examplecn &#x3D; ldap02.example.top                      tls_www_serverencryption_keysigning_keyexpiration_days &#x3D; 365<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>创建证书<pre class="line-numbers language-none"><code class="language-none">sudo certtool --generate-certificate \--load-privkey ldap02_slapd_key.pem \--load-ca-certificate &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem \--load-ca-privkey &#x2F;etc&#x2F;ssl&#x2F;private&#x2F;mycakey.pem \--template ldap02.info \--outfile ldap02_slapd_cert.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><pre class="line-numbers language-none"><code class="language-none">cp &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem .scp -r ldap02-ssl user@ldap02_ip:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>从服务器中安装证书<pre class="line-numbers language-none"><code class="language-none">sudo cp ldap02_slapd_cert.pem ldap02_slapd_key.pem &#x2F;etc&#x2F;ldapsudo chgrp openldap &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_key.pemsudo chmod 0640 &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_key.pemsudo cp mycacert.pem &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crtsudo update-ca-certificates<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>对LDAP服务配置证书 <code>./certinfo.ldif </code><pre class="line-numbers language-none"><code class="language-none">dn: cn&#x3D;configadd: olcTLSCACertificateFileolcTLSCACertificateFile: &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem-add: olcTLSCertificateFileolcTLSCertificateFile: &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_cert.pem-add: olcTLSCertificateKeyFileolcTLSCertificateKeyFile: &#x2F;etc&#x2F;ldap&#x2F;ldap02_slapd_key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>配置slapd-config数据库：<pre class="line-numbers language-none"><code class="language-none">sudo ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f certinfo.ldif <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>增添配置文件<pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;ldap&#x2F;ldap.confBASE       dc&#x3D;example,dc&#x3D;top                                                      # LDAP服务的基础DNURI ldap:&#x2F;&#x2F;localhost:389 ldaps:&#x2F;&#x2F;localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制[[TIMELIMIT]]  15                                                                     # 最长搜索时间[[DEREF]]              never                                                            # 指定对别名的处理方式# TLS certificates (needed for GnuTLS)TLS_CACERT  &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径TLS_REQCERT demand                                                        # &quot;demand&quot;，表示需要验证服务器的证书<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>需要访问 LDAPS（LDAP over SSL），需要编辑配置，并重启 slapd<pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;default&#x2F;slapdSLAPD_SERVICES&#x3D;&quot;ldap:&#x2F;&#x2F;&#x2F; ldapi:&#x2F;&#x2F;&#x2F; ldaps:&#x2F;&#x2F;&#x2F;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>测试启动 TLS<pre class="line-numbers language-none"><code class="language-none">ldapwhoami -x -ZZ -H ldap:&#x2F;&#x2F;ldap02.example.topanonymous<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>测试连接<pre class="line-numbers language-none"><code class="language-none">ldapwhoami -x -H ldaps:&#x2F;&#x2F;ldap02.example.topanonymous<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="5-4-使用合法证书"><a href="#5-4-使用合法证书" class="headerlink" title="5.4 使用合法证书"></a>5.4 使用合法证书</h3><ul><li><p>将新的 CA 根证书添加到受信任 CA 列表（客户端操作，权威证书按理不需要拷贝，未测试）</p><pre class="line-numbers language-none"><code class="language-none">sudo   cp   _.example.top-chain.pem   &#x2F;usr&#x2F;local&#x2F;share&#x2F;ca-certificates&#x2F;mycacert.crtsudo update-ca-certificates<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>准备服务器证书和私钥（服务端）</p><pre class="line-numbers language-none"><code class="language-none"> ls &#x2F;etc&#x2F;ldapcertinfo.ldif   _.example.top-crt.pem   _.example.top-key.pemsudo chgrp openldap &#x2F;etc&#x2F;ldap&#x2F;_.example.top-key.pemsudo chmod 0640 &#x2F;etc&#x2F;ldap&#x2F;_.example.top-key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>certinfo.ldif</p><pre class="line-numbers language-none"><code class="language-none">dn: cn&#x3D;configchangetype: modifyreplace: olcTLSCACertificateFileolcTLSCACertificateFile: &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;mycacert.pem-replace: olcTLSCertificateFileolcTLSCertificateFile: &#x2F;etc&#x2F;ldap&#x2F;_.example.top-crt.pem-replace: olcTLSCertificateKeyFileolcTLSCertificateKeyFile: &#x2F;etc&#x2F;ldap&#x2F;_.example.top-key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><pre class="line-numbers language-none"><code class="language-none">sudo ldapadd  -Y   EXTERNAL  -H  ldapi:&#x2F;&#x2F;&#x2F;   -f    certinfo.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>增添配置文件，这是客户端需要连接 ldap 服务器使用的配置。可以忽略。<pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;ldap&#x2F;ldap.confBASE       dc&#x3D;example,dc&#x3D;top                                                      # LDAP服务的基础DN[[URI]] ldap:&#x2F;&#x2F;localhost:389 ldaps:&#x2F;&#x2F;localhost:636                        # 指定LDAP服务器的连接地址，似乎不起作用[[SIZELIMIT]]  12                                                                      # 搜索结果的数量限制[[TIMELIMIT]]  15                                                                     # 最长搜索时间[[DEREF]]              never                                                            # 指定对别名的处理方式# TLS certificates (needed for GnuTLS)TLS_CACERT  &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;ca-certificates.crt                      # TLS连接时使用的CA证书文件的路径，必需TLS_REQCERT allow                                                      # &quot;demand&quot;，表示需要验证服务器的证书<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>启用 ldaps，重启 slapd<pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;default&#x2F;slapdSLAPD_SERVICES&#x3D;&quot;ldap:&#x2F;&#x2F;&#x2F; ldapi:&#x2F;&#x2F;&#x2F; ldaps:&#x2F;&#x2F;&#x2F;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="5-5-使用-nextcloud-测试加密连接"><a href="#5-5-使用-nextcloud-测试加密连接" class="headerlink" title="5.5 使用 nextcloud 测试加密连接"></a>5.5 使用 nextcloud 测试加密连接</h3><ul><li><p>docker 安装 nexcloud，登录 UI ，右上角点击账户，选择应用</p></li><li><p>应用捆绑包，启用 LDAP user and group backend</p></li><li><p>设置连接</p></li><li><p>ldaps连接(严格一致才是tls加密，nextcloud应该只信任权威证书)</p></li><li><p>明文传输</p></li></ul><h3 id="5-6-stunnel-加密传输两个应用的数据-例：phpldapadmin"><a href="#5-6-stunnel-加密传输两个应用的数据-例：phpldapadmin" class="headerlink" title="5.6 stunnel 加密传输两个应用的数据(例：phpldapadmin)"></a>5.6 stunnel 加密传输两个应用的数据(例：phpldapadmin)</h3><p>链路： ldap user ui  —- stunnel client  accept  —-  stunnel client connect  —- stunnel server accept  —- stunnel server connect —-ldap server port</p><pre class="line-numbers language-none"><code class="language-none">apt install -y stunnel4vim &#x2F;etc&#x2F;default&#x2F;stunnel4ENABLED&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none"># stunnel 服务端cert &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pemkey &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel-key.pemverify &#x3D; 3client &#x3D; nodebug &#x3D; 6pid &#x3D; &#x2F;var&#x2F;run&#x2F;stunnel4&#x2F;stunnel4.pid[ldap]accept &#x3D; 10.13.3.106:6360                # 监听 stunnel 服务的流量，客户端（是指stunnel 客户端）将连接此目标并发送流量到这里connect &#x3D; 10.13.3.106:389                # 转发到 stunnel 加密连接的服务的端口CAfile &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem# stunnel 客户端cert &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pemkey &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel-key.pemverify &#x3D; 3client &#x3D; yesdebug &#x3D; 6setuid &#x3D; stunnel4setgid &#x3D; stunnel4pid &#x3D; &#x2F;var&#x2F;run&#x2F;stunnel4&#x2F;stunnel4.pid[ldap]accept &#x3D; 10.13.3.107:389                # 监听 stunnel 服务的流量，客户端（是指ldap的客户端）将连接此目标并发送流量到这里connect &#x3D; 10.13.3.106:6360              # 加密连接并转发到 stunnel 的服务端CAfile &#x3D; &#x2F;etc&#x2F;stunnel&#x2F;stunnel.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;phpldapadmin&#x2F;config.php$servers-&gt;setValue(&#39;server&#39;,&#39;host&#39;,&#39;69.87.216.102&#39;);  # 指向 stunnel 客户端，和他本地监听的端口$servers-&gt;setValue(&#39;server&#39;,&#39;port&#39;,389);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="六、-其他模块"><a href="#六、-其他模块" class="headerlink" title="六、 其他模块"></a>六、 其他模块</h2><h3 id="6-1-日志模块"><a href="#6-1-日志模块" class="headerlink" title="6.1 日志模块"></a>6.1 日志模块</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;ldap&#x2F;loglevel.ldifdn: cn&#x3D;configchangetype: modifyreplace: olcLogLevelolcLogLevel: statsldapmodify  -Y  EXTERNAL  -H  ldapi:&#x2F;&#x2F;&#x2F;  -f  loglevel.ldif               # 日志在&#x2F;var&#x2F;log&#x2F;syslog | grep slapd , 比默认的级别详细<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-2-memberOf-开启"><a href="#6-2-memberOf-开启" class="headerlink" title="6.2 memberOf 开启"></a>6.2 memberOf 开启</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;ldap&#x2F;refint.ldif# enable_refint.ldifdn: cn&#x3D;module&#123;0&#125;,cn&#x3D;configchangetype: modifyadd: olcModuleLoadolcModuleLoad: refint.la-dn: olcOverlay&#x3D;refint,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;configchangetype: addobjectClass: olcOverlayConfigobjectClass: olcRefintConfigolcOverlay: refintldapadd -Q -Y EXTERNAL -H ldapi:&#x2F;&#x2F; -f refint.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;ldap&#x2F;memberof.ldifdn: cn&#x3D;module,cn&#x3D;configchangetype: addcn: moduleobjectClass: olcModuleListolcModulePath: &#x2F;usr&#x2F;lib&#x2F;ldapdn: cn&#x3D;module&#123;0&#125;,cn&#x3D;configchangetype: modifyadd: olcModuleLoadolcModuleLoad: memberof.ladn: olcOverlay&#x3D;memberof,olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;configchangetype: addobjectClass: olcConfigobjectClass: olcMemberOfobjectClass: olcOverlayConfigobjectClass: topolcOverlay: memberofolcMemberOfDangling: ignoreolcMemberOfRefInt: TRUEolcMemberOfGroupOC: groupOfNamesolcMemberOfMemberAD: memberolcMemberOfMemberOfAD: memberOfldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f memberof.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>为条目添加此属性：LDIF文件中先创建用户的dn，然后创建目标组的dn，在创建组的时候将关联的用户写在member属性中</li></ul><h3 id="6-3-Self-Service-Password-自助密码管理"><a href="#6-3-Self-Service-Password-自助密码管理" class="headerlink" title="6.3 Self Service Password 自助密码管理"></a>6.3 Self Service Password 自助密码管理</h3><ul><li>容器部署，解决 php 依赖准备繁琐</li><li>镜像 ltbproject&#x2F;self-service-password:1.5.3</li><li>为 admin 用户设置修改密码的权限<pre class="line-numbers language-none"><code class="language-none">下列权限可以使得 &quot;admin,example,net&quot; 对这个域 &quot;dc&#x3D;example,dc&#x3D;tech&quot; 做用户添加、属性修改olcAccess: &#123;0&#125;to attrs&#x3D;userPassword,shadowLastChange by dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write by anonymous auth by self write by * noneolcAccess: &#123;1&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;tech&quot; by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>需要对企业邮箱帐号开启设置-帐号与安全-客户端设置-客户端授权密码</li><li>ssp.conf.php  成功配置版本，并映射到容器： &#x2F;home&#x2F;example&#x2F;sspasswd&#x2F;conf.php:&#x2F;var&#x2F;www&#x2F;conf&#x2F;config.inc.local.php<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$debug</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$keyphrase</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"example"</span><span class="token punctuation">;</span><span class="token variable">$use_sms</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$use_questions</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$lang</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"cn,zh-CN"</span><span class="token punctuation">;</span><span class="token variable">$use_change</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token comment">#$reset_url = $_SERVER['HTTP_X_FORWARDED_PROTO'] . "://" . $_SERVER['HTTP_X_FORWARDED_HOST'] . $_SERVER['SCRIPT_NAME'];</span><span class="token variable">$reset_url</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"https://ssp.example.net"</span> <span class="token operator">.</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'HTTP_X_FORWARDED_HOST'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'SCRIPT_NAME'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$show_menu</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$logo</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"images/logo.png"</span><span class="token punctuation">;</span>                <span class="token comment"># 这两项在配置前，需要确保图片映射路径在容器内部的 /var/www/html/images 下</span><span class="token variable">$background_image</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"images/back.png"</span><span class="token punctuation">;</span><span class="token variable">$default_action</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"sendtoken"</span><span class="token punctuation">;</span>        <span class="token comment"># 默认展示在首页的修改密码的方式</span><span class="token variable">$show_menu</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>              <span class="token comment"># 关闭顶部的修改方式选择菜单</span><span class="token comment"># LDAP</span><span class="token variable">$ldap_url</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"ldap://10.13.3.107/"</span><span class="token punctuation">;</span><span class="token variable">$ldap_starttls</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$ldap_binddn</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"cn=admin,dc=example,dc=net"</span><span class="token punctuation">;</span><span class="token variable">$ldap_bindpw</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'example@2020'</span><span class="token punctuation">;</span><span class="token comment">#$ldap_bindpw = "&#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi";</span><span class="token variable">$ldap_base</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"dc=example,dc=net"</span><span class="token punctuation">;</span><span class="token comment">#$ldap_base = "dc=example,dc=tech";    # 在这里同时书写两个，只会生效后一个域, 使用两个实例连接 ldap 服务</span><span class="token variable">$ldap_fullname_attribute</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"cn"</span><span class="token punctuation">;</span><span class="token variable">$ldap_filter</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"(&amp;(objectClass=inetOrgPerson)(<span class="token interpolation"><span class="token variable">$ldap_fullname_attribute</span></span>=&#123;login&#125;))"</span><span class="token punctuation">;</span><span class="token variable">$ldap_use_exop_passwd</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$ldap_use_ppolicy_control</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$TLS_REQCERT</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"allow"</span><span class="token punctuation">;</span><span class="token comment"># email</span><span class="token variable">$mail_attributes</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"mail"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"gosaMailAlternateAddress"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"proxyAddresses"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$mail_address_use_ldap</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token variable">$mail_from</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"user5@example.net"</span><span class="token punctuation">;</span><span class="token variable">$mail_from_name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"密码自主修改服务"</span><span class="token punctuation">;</span><span class="token variable">$mail_signature</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"如有疑问,请联系运维同事,英博智云."</span><span class="token punctuation">;</span><span class="token variable">$notify_on_change</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$mail_protocol</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'smtp'</span><span class="token punctuation">;</span><span class="token variable">$mail_smtp_host</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'smtphz.qiye.163.com'</span><span class="token punctuation">;</span><span class="token variable">$mail_smtp_auth</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token variable">$mail_smtp_user</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"user5@example.net"</span><span class="token punctuation">;</span><span class="token variable">$mail_smtp_pass</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'TdhYDdgvN7Hpky5a'</span><span class="token punctuation">;</span><span class="token variable">$mail_smtp_port</span> <span class="token operator">=</span> <span class="token number">465</span><span class="token punctuation">;</span><span class="token variable">$mail_smtp_timeout</span> <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token variable">$mail_smtp_keepalive</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$mail_smtp_secure</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'ssl'</span><span class="token punctuation">;</span><span class="token variable">$mail_smtp_autotls</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><span class="token variable">$mail_smtp_options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$mail_contenttype</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'text/plain'</span><span class="token punctuation">;</span><span class="token variable">$mail_wordwrap</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$mail_charset</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'utf-8'</span><span class="token punctuation">;</span><span class="token variable">$mail_priority</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token comment"># password policy</span><span class="token variable">$hash</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"SSHA"</span><span class="token punctuation">;</span> <span class="token comment"># 修改的用户密码传递过程中会采取这里指定的加密</span><span class="token variable">$pwd_min_length</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token variable">$pwd_max_length</span> <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token variable">$pwd_min_lower</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$pwd_min_upper</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$pwd_min_digit</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$pwd_min_special</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$pwd_special_chars</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"^a-zA-Z0-9"</span><span class="token punctuation">;</span><span class="token variable">$pwd_complexity</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token variable">$pwd_no_reuse</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token variable">$pwd_forbidden_words</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"example"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"example"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"example"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$pwd_show_policy_pos</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"above"</span><span class="token punctuation">;</span><span class="token variable">$pwd_show_policy</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"onerror"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><pre class="line-numbers language-none"><code class="language-none">docker run -p 8000:80 \&gt; --restart&#x3D;always \&gt; --name sspass \&gt; -v &#x2F;home&#x2F;example&#x2F;sspasswd&#x2F;conf.php:&#x2F;var&#x2F;www&#x2F;conf&#x2F;config.inc.local.php \&gt; -itd docker.io&#x2F;ltbproject&#x2F;self-service-password<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-3-1-不能进入修改链接-Token-is-not-valid"><a href="#6-3-1-不能进入修改链接-Token-is-not-valid" class="headerlink" title="6.3.1 不能进入修改链接 Token is not valid"></a>6.3.1 不能进入修改链接 Token is not valid</h4><pre class="line-numbers language-none"><code class="language-none">注释了这两项#$use_tokens &#x3D; true;#$crypt_tokens &#x3D; true;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="6-3-2-反向代理-Self-Service-Password"><a href="#6-3-2-反向代理-Self-Service-Password" class="headerlink" title="6.3.2 反向代理 Self Service Password"></a>6.3.2 反向代理 Self Service Password</h4><pre class="line-numbers language-none"><code class="language-none">upstream ssp &#123;  server 10.13.3.108:8000;&#125;server &#123;    listen 80;    server_name ssp.example.net;    return 301 https:&#x2F;&#x2F;$server_name$request_uri;&#125;server &#123;    listen 443 ssl ;    server_name ssp.example.net;    ssl_certificate webmin&#x2F;tls_ca.pem;    ssl_certificate_key webmin&#x2F;tls_key.pem;    location &#x2F; &#123;      proxy_pass http:&#x2F;&#x2F;ssp;      proxy_set_header Host $host;      proxy_set_header X-Real-IP $remote_addr;      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;      proxy_set_header X-Forwarded-Proto &quot;https&quot;;      proxy_read_timeout 1800s;      proxy_http_version 1.1;      proxy_set_header Upgrade $http_upgrade;      proxy_set_header Connection &quot;upgrade&quot;;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-4-LDAP-对目录信息的数据做备份还原和迁移"><a href="#6-4-LDAP-对目录信息的数据做备份还原和迁移" class="headerlink" title="6.4 LDAP 对目录信息的数据做备份还原和迁移"></a>6.4 LDAP 对目录信息的数据做备份还原和迁移</h3><h4 id="6-4-1-备份"><a href="#6-4-1-备份" class="headerlink" title="6.4.1 备份"></a>6.4.1 备份</h4><pre class="line-numbers language-none"><code class="language-none">sudo slapcat -n 3 -l .&#x2F;back3.ldif           # -n 指定数据库编号，数字对应各个dit的数据库编号( 配置数据库----olcDatabase&#x3D;&#123;0&#125;config.ldif; 目录信息数据库----olcDatabase&#x3D;&#123;1&#125;mdb.ldif )<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="6-4-2-恢复"><a href="#6-4-2-恢复" class="headerlink" title="6.4.2 恢复"></a>6.4.2 恢复</h4><p>原服务器上恢复，服务需要暂停</p><pre class="line-numbers language-none"><code class="language-none">sudo systemctl stop slapd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置目录一般位于 <code>/etc/openldap/slapd.d</code>，将原有配置删除，然后使用 <code>slapadd</code> 导入新的配置</p><pre class="line-numbers language-none"><code class="language-none">$ rm -rf &#x2F;etc&#x2F;ldap&#x2F;slapd.d&#x2F;*$ slapadd  -n  0  -F  &#x2F;etc&#x2F;ldap&#x2F;slapd.d  -l  .&#x2F;config.2021-09-18.ldif$ chown -R openldap:openldap &#x2F;etc&#x2F;ldap&#x2F;slapd.d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>数据目录一般位于 <code>/var/lib/ldap-*</code>，模拟时，将原有数据删除，然后使用 <code>slapadd</code> 导入新的数据：</p><pre class="line-numbers language-none"><code class="language-none">$ rm  -rf  &#x2F;var&#x2F;lib&#x2F;ldap-example&#x2F;*         # 定制了不同的$default_action &#x3D; &quot;sendtoken&quot;;$show_menu &#x3D; false;dit有不同的目录分别存储不同domain的内容，注意，导入前目录必需首先存在，且权属 openldap:openldap。$ slapadd -n 1 -F &#x2F;etc&#x2F;openldap&#x2F;slapd.d -l .&#x2F;data.2021-09-18.ldif$ chown -R openldap:openldap  &#x2F;var&#x2F;lib&#x2F;ldap-example$ systemctl start slapd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-4-3-openldap的迁移"><a href="#6-4-3-openldap的迁移" class="headerlink" title="6.4.3 openldap的迁移"></a>6.4.3 openldap的迁移</h4><p>playbook 新建的服务器，执行恢复</p><pre class="line-numbers language-none"><code class="language-none">slapadd -n 1 -F &#x2F;etc&#x2F;openldap&#x2F;slapd.d -l .&#x2F;data.2021-09-18.ldif[[如果导入失败，或者数据已存在，删除rm]] -rf &#x2F;var&#x2F;lib&#x2F;ldap&#x2F;*  重新导入<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="七、-命令资料"><a href="#七、-命令资料" class="headerlink" title="七、 命令资料"></a>七、 命令资料</h2><blockquote><p><a href="https://blog.csdn.net/jenyzhang/article/details/56487627">来自此处</a><br>ldap<br>    |-slapd             目录服务的主要程序<br>    |-slurpd           目录服务进行复制的程序<br>    |-slapadd           向目录中添加数据<br>    |-slapcat           把目录中的条目导出成ldif文件<br>    |-slapindex         重建目录的索引<br>    |-ldapcompare       对目录的条目的属性进行比较<br>    |-ldapadd           向目录服务中添加条目<br>    |-ldapdelete        删除目录中的条目<br>    |-ldapmodify        更新目录中条目的值<br>    |-ldapmodrdn        更改条目的DN<br>    |-ldappasswd        更改条目的密码<br>    |-ldapsearch        对目录进行查询</p></blockquote><blockquote><p>ldapadd<br>      -x   进行简单认证<br>      -D   用来绑定服务器的DN<br>      -h   目录服务的地址<br>      -w   绑定DN的密码<br>      -f   使用ldif文件进行条目添加的文件        </p></blockquote><ul><li>例子<br>       ldapadd -x -D “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” -w secret -f &#x2F;root&#x2F;test.ldif<br>       ldapadd -x -D “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” -w secret (这样写就是在命令行添加条目)</li></ul><p>       </p><blockquote><p>ldapsearch<br>      -x   进行简单认证<br>      -D   用来绑定服务器的DN<br>      -w   绑定DN的密码<br>      -b   指定要查询的根节点<br>      -H   制定要查询的服务器<br>      -s   指定搜索范围的类型     </p></blockquote><ul><li>例子<br>   ldapsearch -x -D “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” -w secret -b “dc&#x3D;starxing,dc&#x3D;com”<br>       使用简单认证，用 “cn&#x3D;root,dc&#x3D;starxing,dc&#x3D;com” 进行绑定，<br>       要查询的根是 “dc&#x3D;starxing,dc&#x3D;com”。这样会把绑定的用户能访问”dc&#x3D;starxing,dc&#x3D;com”下的所有数据显示出来。<br> ldapsearch -x -W -D “cn&#x3D;administrator,cn&#x3D;users,dc&#x3D;osdn,dc&#x3D;zzti,dc&#x3D;edu,dc&#x3D;cn” -b “cn&#x3D;administrator,cn&#x3D;users,dc&#x3D;osdn,dc&#x3D;zzti,dc&#x3D;edu,dc&#x3D;cn” -h troy.osdn.zzti.edu.cn<br>   ldapsearch -b “dc&#x3D;canon-is,dc&#x3D;jp” -H ldaps:&#x2F;&#x2F;192.168.0.92:636<br> (需要修改openldap客户端的配置文件ldap.conf,参考：<a href="http://ms.ntcb.edu.tw/~steven/l-penguin.s/article/ldap-5.htm">http://ms.ntcb.edu.tw/~steven/l-penguin.s/article/ldap-5.htm</a>)</li></ul><blockquote><p>ldapdelete <br>      ldapdelete -x -D “cn&#x3D;Manager,dc&#x3D;test,dc&#x3D;com” -w secret “uid&#x3D;test1,ou&#x3D;People,dc&#x3D;test,dc&#x3D;com”<br>      ldapdelete -x -D ‘cn&#x3D;root,dc&#x3D;it,dc&#x3D;com’ -w secert ‘uid&#x3D;zyx,dc&#x3D;it,dc&#x3D;com’<br>      这样就可以删除’uid&#x3D;zyx,dc&#x3D;it,dc&#x3D;com’记录了，应该注意一点，其下有子条目的不能删除  </p></blockquote><ul><li><p>例子1  递归删除所有：<br>ldapdelete -x -D ‘cn&#x3D;administrator,dc&#x3D;example,dc&#x3D;net’ -w example@2020 -r “ou&#x3D;example,dc&#x3D;example,dc&#x3D;net”</p></li><li><p>例子2  删除一个acl策略。acl-dele.ldif<br> dn: olcDatabase&#x3D;{3}mdb,cn&#x3D;config<br> delete: olcAccess<br> olcAccess: {2}<br> olcAccess: {3}<br> olcAccess: {4}<br> ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f acl-dele.ldif</p></li></ul><blockquote><p>ldappasswd<br>    -x   进行简单认证<br>    -D   用来绑定服务器的DN<br>    -w   绑定DN的密码<br>    -S   提示的输入密码<br>    -s pass 把密码设置为pass<br>    -a pass 设置old passwd为pass<br>    -A   提示的设置old passwd<br>    -H   是指要绑定的服务器<br>    -I   使用sasl会话方式      </p></blockquote><ul><li>例子<br>    ldappasswd -x -D ‘cm&#x3D;root,dc&#x3D;it,dc&#x3D;com’ -w secret ‘uid&#x3D;zyx,dc&#x3D;it,dc&#x3D;com’ -S<br>       New password:<br>       Re-enter new password:<br>       就可以更改密码了，如果原来记录中没有密码，将会自动生成一个userPassword。</li></ul><p>    </p><blockquote><p>ldapmodify<br>     -a 添加新的条目.缺省的是修改存在的条目.<br>     -C 自动追踪引用.<br>     -c 出错后继续执行程序并不中止.缺省情况下出错的立即停止.比如如果你的ldif 文件内的某个条目在<a href="http://lib.csdn.net/base/mysql" title="MySQL知识库">数据库</a>内并不存在,缺省情况下程序立即退出,但如果使用了该参数,程序忽略该错误继续执行.<br>     -n 用于调试到服务器的通讯.但并不实际执行搜索.服务器关闭时,返回错误；服务器<br>       打开时,常和-v 参数一起<a href="http://lib.csdn.net/base/softwaretest" title="软件测试知识库">测试</a>到服务器是否是一条通路.<br>     -v 运行在详细模块.在标准输出中打出一些比较详细的信息.比如:连接到服务器的<br>       ip 地址和端口号等.<br>     -M  打开 manage DSA IT 控制. -MM 把该控制设置为重要的.<br>     -f file 从文件内读取条目的修改信息而不是从标准输入读取.<br>    -x 使用简单认证.<br>    -D binddn 指定搜索的用户名(一般为一dn 值).<br>    -W 指定了该参数,系统将弹出一提示入用户的密码.它和-w 参数相对使用.<br>    -w bindpasswd 直接指定用户的密码. 它和-W 参数相对使用.<br>    -H ldapuri 指定连接到服务器uri(ip 地址和端口号,常见格式为 ldap:&#x2F;&#x2F;hostname:port ).如果使用了-H 就不能使用-h 和-p 参数.<br>    -h ldaphost 指定要连接的主机的名称&#x2F;ip 地址.它和-p 一起使用<br>    -p ldapport 指定要连接目录服务器的端口号.它和-h 一起使用，如果使用了-h 和-p 参数就不能使用-H 参数.<br>    -Z 使用StartTLS 扩展操作.如果使用-ZZ,命令强制使用StartTLS 握手成功.<br>    -V 启用证书认证功能,目录服务器使用客户端证书进行身份验证,必须与-ZZ 强制启用<br>       TLS 方式配合使用,并且匿名绑定到目录服务器.<br>    -e 设置客户端证书文件,例: -e cert&#x2F;client.crt<br>    -E 设置客户端证书私钥文件,例: -E cert&#x2F;client.key  </p></blockquote><ul><li>例子<br>ldapmodify -x -D “cn&#x3D;root,dc&#x3D;it,dc&#x3D;com” -W -f modify.ldif    #   将modify.ldif中的记录更新原有的记录。</li></ul><h2 id="八、-参考链接"><a href="#八、-参考链接" class="headerlink" title="八、 参考链接"></a>八、 参考链接</h2><p><a href="https://github.com/jt6562/LDAP-read-notes/blob/master/ldap-guide/OpenLDAP%E7%AE%A1%E7%90%86%E5%91%98%E6%89%8B%E5%86%8C.md">指南</a><br><a href="https://www.cnblogs.com/kevingrace/p/5773974.html">知识总结</a><br><a href="https://www.cnblogs.com/js1314/p/12887893.html">参考1</a><br><a href="https://cloud.tencent.com/developer/article/1932586">参考2</a><br><a href="https://blog.csdn.net/u011607971/article/details/121126289?spm=1001.2014.3001.5501#t3">参考3</a><br><a href="https://ubuntu.com/server/docs/service-ldap-with-tls">Ubuntu wiki</a><br><a href="https://www.cnblogs.com/shu-sheng/p/14450815.html">tls参考1</a><br><a href="https://hmli.ustc.edu.cn/doc/linux/ubuntu-ldap/ubuntu-ldap.html#id14">tls参考2</a><br><a href="https://zhuanlan.zhihu.com/p/643010354">tls参考3</a></p><h2 id="九、问题："><a href="#九、问题：" class="headerlink" title="九、问题："></a>九、问题：</h2><h3 id="9-1-从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果"><a href="#9-1-从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果" class="headerlink" title="9.1 从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果"></a>9.1 从服务器同步不及时，必须手动刷新，网络和ubuntu配置同样结果</h3><h3 id="9-2-日志功能开启失败"><a href="#9-2-日志功能开启失败" class="headerlink" title="9.2 日志功能开启失败"></a>9.2 日志功能开启失败</h3><pre><code>已经调整日志级别，在系统日志中查看并grep</code></pre><h3 id="9-3-证书缺失-只能使用ldap01-这个信息查询）"><a href="#9-3-证书缺失-只能使用ldap01-这个信息查询）" class="headerlink" title="9.3 证书缺失(只能使用ldap01,这个信息查询）"></a>9.3 证书缺失(只能使用ldap01,这个信息查询）</h3><pre><code>采取使用权威证书</code></pre><h3 id="9-4-重启slap报错-tls-init-failed"><a href="#9-4-重启slap报错-tls-init-failed" class="headerlink" title="9.4 重启slap报错 tls init   failed"></a>9.4 重启slap报错 tls init   failed</h3><pre><code>解决办法：重新生成证书</code></pre><h3 id="9-5-报错-ldap-start-tls-Connect-error-11-n-additional-info-unknown-error-code"><a href="#9-5-报错-ldap-start-tls-Connect-error-11-n-additional-info-unknown-error-code" class="headerlink" title="9.5 报错 ldap_start_tls: Connect error (-11)    \n    additional info: (unknown error code)"></a>9.5 报错 ldap_start_tls: Connect error (-11)    \n    additional info: (unknown error code)</h3><pre><code>可能是由于服务器证书的通用名（Common Name）字段是否与主机名不一致，请检查主机名和服务器证书</code></pre><h3 id="9-6-连接问题"><a href="#9-6-连接问题" class="headerlink" title="9.6 连接问题"></a>9.6 连接问题</h3><pre class="line-numbers language-none"><code class="language-none">ldapsearch -H ldaps:&#x2F;&#x2F;ldap.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W            # 在服务器本机执行此查询的报错。但是在另一个机器可以成功查询ldap_sasl_bind(SIMPLE): Can&#39;t contact LDAP server (-1)                                 # 配置 ldap.conf 之后成功解决并有输出 tls&#x3D;demand&#x2F;allow----作用是证书检查<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="9-7-在多域的使用中，不能正常添加子条目，出现“shadow-context-no-update-referral”"><a href="#9-7-在多域的使用中，不能正常添加子条目，出现“shadow-context-no-update-referral”" class="headerlink" title="9.7 在多域的使用中，不能正常添加子条目，出现“shadow context; no update referral”"></a>9.7 在多域的使用中，不能正常添加子条目，出现“shadow context; no update referral”</h3><pre class="line-numbers language-none"><code class="language-none">1. 首先尝试重新部署，发现执行镜像复制的剧本之前可以正常创建所有的条目    解决：在mirror mode 开启时，需要指定相应的数据库2.  shadow context; no update referral  根本原因是需要检查权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="9-8-使用的脚本一致，测试环境和生产环境结果不一致-主要是不能长时间正常保持客户端连接并查询"><a href="#9-8-使用的脚本一致，测试环境和生产环境结果不一致-主要是不能长时间正常保持客户端连接并查询" class="headerlink" title="9.8 使用的脚本一致，测试环境和生产环境结果不一致; 主要是不能长时间正常保持客户端连接并查询"></a>9.8 使用的脚本一致，测试环境和生产环境结果不一致; 主要是不能长时间正常保持客户端连接并查询</h3><ul><li>脚本中的组织信息ldif文件有问题，经测试不影响。</li><li>memberOf，属性不可单独添加，通过 groupofNames 指定 member 之后会自动关联。已经修正使用方式，结果未改变。</li><li>2204 系统和 2004 系统的slapd版本不一致（并没有影响）。</li><li>将orgnization的任务和前一部分拆分，否则会出现读取不到 rootdn（手动测试是成功的）（然而脚本中修改后并没有解决这个问题）。</li><li>将organization拆分，在此之前重启服务，未解决。</li><li>将organization拆分，在此之前先重启虚拟机。（有效、怀疑是服务中某些连接的状态在ansible执行中没有更新）（仍然失效了，经过一夜之后失效）。</li><li>另一台2204主机安装正常使用，怀疑虚拟机系统问题。</li></ul><h2 id="十、-验证"><a href="#十、-验证" class="headerlink" title="十、 验证"></a>十、 验证</h2><h3 id="10-1-检测连接命令："><a href="#10-1-检测连接命令：" class="headerlink" title="10.1 检测连接命令："></a>10.1 检测连接命令：</h3><p> ldaps:&#x2F;&#x2F;    —-ldap over ssl  使用636 ，从连接开始加密   ;        ldap:&#x2F;&#x2F;           —ldap_start_tls(-ZZ参数):    使用389，从传输开始加密</p><pre class="line-numbers language-none"><code class="language-none">ldapsearch -H ldaps:&#x2F;&#x2F;ldap01.example.top:636 -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -s sub &quot;(objectClass&#x3D;person)&quot;ldapsearch -H ldap:&#x2F;&#x2F;10.13.3.106  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -s sub &quot;(objectClass&#x3D;person)&quot;ldapsearch -H ldap:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -b &quot;dc&#x3D;example,dc&#x3D;top&quot; -s sub &quot;(objectClass&#x3D;person)&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-2-验证和日志"><a href="#10-2-验证和日志" class="headerlink" title="10.2 验证和日志"></a>10.2 验证和日志</h3><p>tag 101 应表明在查询; tag 97 是在认证</p><pre class="line-numbers language-none"><code class="language-none">ldapsearch -H ldap:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W   -ZZ      #  启用了tls功能 ，-ZZ 参数，仍然是 389 端口，连接后在传输过程中加密Sep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:60674 (IP&#x3D;0.0.0.0:389)Sep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;0 EXT oid&#x3D;1.3.6.1.4.1.1466.20037Sep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;0 STARTTLSSep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;0 RESULT oid&#x3D; err&#x3D;0 text&#x3D;Sep  1 10:33:12 example-sys-test-06 slapd[91401]: conn&#x3D;1240 fd&#x3D;14 TLS established tls_ssf&#x3D;256 ssf&#x3D;256Sep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;1 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128Sep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;1 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0Sep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;1 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;Sep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;2 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;Sep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;2 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;6 text&#x3D;Sep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 op&#x3D;3 UNBINDSep  1 10:33:15 example-sys-test-06 slapd[91401]: conn&#x3D;1240 fd&#x3D;14 closed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">ldapsearch -H ldap:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W        # 明文传输Sep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:37760 (IP&#x3D;0.0.0.0:389)Sep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128Sep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0Sep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;Sep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;Sep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;6 text&#x3D;Sep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 op&#x3D;2 UNBINDSep  1 10:36:21 example-sys-test-06 slapd[91401]: conn&#x3D;1246 fd&#x3D;14 closed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">ldapsearch -H ldaps:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W        # 从连接就开始加密Sep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:58726 (IP&#x3D;0.0.0.0:636)Sep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 fd&#x3D;14 TLS established tls_ssf&#x3D;256 ssf&#x3D;256Sep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; method&#x3D;128Sep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;0 BIND dn&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; mech&#x3D;SIMPLE ssf&#x3D;0Sep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;0 RESULT tag&#x3D;97 err&#x3D;0 text&#x3D;Sep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;1 SRCH base&#x3D;&quot;dc&#x3D;example,dc&#x3D;top&quot; scope&#x3D;2 deref&#x3D;0 filter&#x3D;&quot;(objectClass&#x3D;*)&quot;Sep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;1 SEARCH RESULT tag&#x3D;101 err&#x3D;0 nentries&#x3D;6 text&#x3D;Sep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 op&#x3D;2 UNBINDSep  1 10:39:39 example-sys-test-06 slapd[91401]: conn&#x3D;1247 fd&#x3D;14 closed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">ldapsearch -H ldaps:&#x2F;&#x2F;ldap01.example.top  -D &quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;top&quot; -W -ZZldap_start_tls: Operations error (1)        additional info: TLS already startedSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 fd&#x3D;14 ACCEPT from IP&#x3D;10.13.3.107:39894 (IP&#x3D;0.0.0.0:636)Sep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 fd&#x3D;14 TLS established tls_ssf&#x3D;256 ssf&#x3D;256Sep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;0 EXT oid&#x3D;1.3.6.1.4.1.1466.20037Sep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;0 STARTTLSSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;0 RESULT oid&#x3D; err&#x3D;1 text&#x3D;TLS already started                # 证明二者冲突，不能同时开启Sep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 op&#x3D;1 UNBINDSep  1 10:40:28 example-sys-test-06 slapd[91401]: conn&#x3D;1248 fd&#x3D;14 closed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十一、应用服务"><a href="#十一、应用服务" class="headerlink" title="十一、应用服务"></a>十一、应用服务</h2><h3 id="11-1-建立-ldap-管理-只读帐号"><a href="#11-1-建立-ldap-管理-只读帐号" class="headerlink" title="11.1 建立 ldap 管理&#x2F;只读帐号"></a>11.1 建立 ldap 管理&#x2F;只读帐号</h3><pre class="line-numbers language-none"><code class="language-none">dn: cn&#x3D;admin,dc&#x3D;xxx,dc&#x3D;xx changetype: add  objectClass: simpleSecurityObject  objectClass: organizationalRole  cn: admin  userPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi    -  dn: cn&#x3D;reader,dc&#x3D;xxx2,dc&#x3D;xx2  changetype: add  objectClass: simpleSecurityObject  objectClass: organizationalRole  cn: admin  userPassword: &#123;SSHA&#125;UiIUaWLBYOo+2O88GNxFAdzp5M9cmlWi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-2-详细的公司架构-ldif"><a href="#11-2-详细的公司架构-ldif" class="headerlink" title="11.2 详细的公司架构 ldif"></a>11.2 详细的公司架构 ldif</h3><pre class="line-numbers language-none"><code class="language-none">dn: ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: organizationalUnit  ou: example    dn: ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: organizationalUnit  ou: example-bod    dn: cn&#x3D;user1,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: user1  departmentnumber: 1  displayname: Zheng Yu  mail: user1@example.net  objectclass: inetOrgPerson  sn: Zheng  title: President  uid: 10000  userpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs    dn: cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: example-bod-admin  member: cn&#x3D;user1,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: groupOfNames    dn: ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: organizationalUnit  ou: example-bus    dn: cn&#x3D;user8,ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: user8  departmentnumber: 2  displayname: Sun Minghong  mail: user8@example.net  objectclass: inetOrgPerson  sn: Sun  title: Financial Manager  uid: 10001  userpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs    dn: cn&#x3D;example-bus-admin,ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: example-bus-admin  member: cn&#x3D;user8,ou&#x3D;example-bus,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: groupOfNames    dn: ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: organizationalUnit  ou: example-sys    dn: cn&#x3D;user2,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: user2  departmentnumber: 3  displayname: Xie Jian  mail: user2@example.net  objectclass: inetOrgPerson  sn: Xie  title: Senior Systems Engineer  uid: 10002  userpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs    dn: cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: example-sys-admin  member: cn&#x3D;user2,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: groupOfNames    dn: cn&#x3D;user5,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: user5  departmentnumber: 3  displayname: Long Chao  mail: user5@example.net  objectclass: inetOrgPerson  sn: Long  title: System Engineer  uid: 10003  userpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs    dn: cn&#x3D;example-sys-junior,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: example-sys-junior  member: cn&#x3D;user5,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: groupOfNames    dn: ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: organizationalUnit  ou: example-ops    dn: cn&#x3D;user6.tang,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: user6.tang  departmentnumber: 4  displayname: Tang Binchao  mail: user6.tang@example.net  objectclass: inetOrgPerson  sn: Tang  title: System Engineer  uid: 10004  userpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs    dn: cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: example-ops-admin  member: cn&#x3D;user6.tang,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: groupOfNames    dn: ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: organizationalUnit  ou: example-dev    dn: cn&#x3D;user3,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: user3  departmentnumber: 5  displayname: Chen Cheng  mail: user3@example.net  objectclass: inetOrgPerson  sn: Chen  title: Senior Development Engineer  uid: 10005  userpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs    dn: cn&#x3D;example-dev-admin,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: example-dev-admin  member: cn&#x3D;user3,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: groupOfNames    dn: cn&#x3D;user4.li,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: user4.li  departmentnumber: 5  displayname: Li user4  mail: user4.li@example.net  objectclass: inetOrgPerson  sn: Li  title: Development Engineer  uid: 10006  userpassword: &#123;SSHA&#125;W4DSQvcToeOeTJB+6W5fCZmz4PqrmwQs    dn: cn&#x3D;user7,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: user7  departmentnumber: 5  displayname: Luo Xujun  mail: user7@example.net  objectclass: inetOrgPerson  sn: Luo  title: Development Engineer  uid: 10007  userpassword: &#123;SSHA&#125;&#x2F;2+Coei5Fje+th7mOJgu43Ms3hBia2Qu    dn: cn&#x3D;example-dev-senior,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  cn: example-dev-senior  member: cn&#x3D;user4.li,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  member: cn&#x3D;user7,ou&#x3D;example-dev,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: groupOfNames    dn: ou&#x3D;example-rob,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net  objectclass: organizationalUnit  ou: example-rob<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-3-第一版-ACL"><a href="#11-3-第一版-ACL" class="headerlink" title="11.3 第一版 ACL"></a>11.3 第一版 ACL</h3><pre class="line-numbers language-none"><code class="language-none">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;configchangetype: modifyadd: olcAccessolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;ou&#x3D;example,dc&#x3D;example,dc&#x3D;net&quot; filter&#x3D;&quot;(&amp;(objectClass&#x3D;inetOrgPerson)(|(memberOf&#x3D;cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)))&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; readdn: olcDatabase&#x3D;&#123;4&#125;mdb,cn&#x3D;configchangetype: modifyadd: olcAccessolcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write  by anonymous auth  by * noneolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;ibexample,dc&#x3D;com&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-4-最终的acl（写两个域、读两个域、reader-example-可以读取某些admin组，实现映射到example域下集成的应用）"><a href="#11-4-最终的acl（写两个域、读两个域、reader-example-可以读取某些admin组，实现映射到example域下集成的应用）" class="headerlink" title="11.4 最终的acl（写两个域、读两个域、reader_example 可以读取某些admin组，实现映射到example域下集成的应用）"></a>11.4 最终的acl（写两个域、读两个域、reader_example 可以读取某些admin组，实现映射到example域下集成的应用）</h3><ul><li><p>添加</p><pre class="line-numbers language-none"><code class="language-none">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;configchangetype: modifyadd: olcAccessolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;example,dc&#x3D;net&quot; readolcAccess: &#123;3&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; filter&#x3D;&quot;(&amp;(objectClass&#x3D;inetOrgPerson)(|(memberOf&#x3D;cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(memberOf&#x3D;cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)))&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read dn: olcDatabase&#x3D;&#123;2&#125;mdb,cn&#x3D;configchangetype: modifyadd: olcAccessolcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write  by anonymous auth  by * noneolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;ibexample,dc&#x3D;com&quot; by dn.base&#x3D;&quot;cn&#x3D;exampleadmin,dc&#x3D;example,dc&#x3D;net&quot; write by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;ibexample,dc&#x3D;com&quot; read by dn.base&#x3D;&quot;cn&#x3D;exampleread,dc&#x3D;example,dc&#x3D;net&quot; read<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除</p><pre class="line-numbers language-none"><code class="language-none">dn: olcDatabase&#x3D;&#123;1&#125;mdb,cn&#x3D;configdelete: olcAccessolcAccess: &#123;2&#125;to..........olcAccess: &#123;3&#125;to........ ldapmodify -Y EXTERNAL -H ldapi:&#x2F;&#x2F;&#x2F; -f acl-dele.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>数据库内 ACL 顺序测试，{}里面是优先级，生效在前（涉及范围大的 ACL 应书写在前）</p><pre class="line-numbers language-none"><code class="language-none">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by anonymous auth  by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write  by * none   olcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * readolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,dc&#x3D;example,dc&#x3D;tech&quot; by dn.base&#x3D;&quot;cn&#x3D;reader,dc&#x3D;example,dc&#x3D;net&quot; read by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write    # 如果没有此条acl,该条目将不能在 lam 中被 admin 管理 olcAccess: &#123;3&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;tech&quot; by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write      # 此条优先级最低<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="十二、集成其他应用"><a href="#十二、集成其他应用" class="headerlink" title="十二、集成其他应用"></a>十二、集成其他应用</h2><h3 id="12-1-conflunce"><a href="#12-1-conflunce" class="headerlink" title="12.1  conflunce"></a>12.1  conflunce</h3><pre class="line-numbers language-none"><code class="language-none">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by anonymous auth by * noneolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * readolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; by dn.base&#x3D;&quot;cn&#x3D;reader,dc&#x3D;ibexample,dc&#x3D;com&quot; read<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="12-1-1-连接-之后的-acl-过滤案例"><a href="#12-1-1-连接-之后的-acl-过滤案例" class="headerlink" title="12.1.1 连接 之后的 acl 过滤案例"></a>12.1.1 连接 之后的 acl 过滤案例</h4><p>‘(&amp;(objectclass&#x3D;inetorgperson)(|(cn&#x3D;user5)(cn&#x3D;user2)))’  过滤出指定用户—-在用户模式设置。</p><p>‘(&amp;(objectclass&#x3D;groupOfNames)(|(cn&#x3D;example-sys-junior)(cn&#x3D;example-sys-admin)))’ 过滤指定组—-在组模式设置（在ldap中创建的组 objectclass 是groupOfNames）</p><h4 id="12-1-2-更详细的-acl-需求"><a href="#12-1-2-更详细的-acl-需求" class="headerlink" title="12.1.2 更详细的 acl 需求"></a>12.1.2 更详细的 acl 需求</h4><ul><li><p>example</p><pre class="line-numbers language-none"><code class="language-none">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write  by anonymous auth  by * noneolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * readolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;example,dc&#x3D;net&quot; filter&#x3D;&quot;(&amp;(objectClass&#x3D;inetOrg Person)(|(memberOf&#x3D;cn&#x3D;example-bod-admin,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net )(memberOf&#x3D;cn&#x3D;example-sys-admin,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)(member Of&#x3D;cn&#x3D;example-ops-admin,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;net)))&quot; by dn.base&#x3D; &quot;cn&#x3D;reader,dc&#x3D;ibexample,dc&#x3D;com&quot; read  by dn.base&#x3D; &quot;cn&#x3D;reader,dc&#x3D;example,dc&#x3D;net&quot; readsearch时，必须要具体到用户层级，例如nextcloud，需要指定基础用户树如下cn&#x3D;user2,ou&#x3D;example-sys,ou&#x3D;example,dc&#x3D;example,dc&#x3D;netcn&#x3D;user1,ou&#x3D;example-bod,ou&#x3D;example,dc&#x3D;example,dc&#x3D;netcn&#x3D;user6.tang,ou&#x3D;example-ops,ou&#x3D;example,dc&#x3D;example,dc&#x3D;netdc&#x3D;ibexample,dc&#x3D;com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>example</p><pre class="line-numbers language-none"><code class="language-none">olcAccess: &#123;0&#125;to attrs&#x3D;userPassword by self write by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write  by anonymous auth  by * noneolcAccess: &#123;1&#125;to attrs&#x3D;shadowLastChange by self write by * readolcAccess: &#123;2&#125;to dn.subtree&#x3D;&quot;dc&#x3D;ibexample,dc&#x3D;com&quot; by dn.base&#x3D;&quot;cn&#x3D;admin,dc&#x3D;example,dc&#x3D;net&quot; write by dn.base&#x3D;&quot;cn&#x3D;reader,dc&#x3D;ibexample,dc&#x3D;com&quot; read<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="12-2-集成-vault"><a href="#12-2-集成-vault" class="headerlink" title="12.2 集成 vault"></a>12.2 集成 vault</h3><ul><li>过滤特定用户<pre class="line-numbers language-none"><code class="language-none">(&amp;(objectClass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(cn&#x3D;user2)(cn&#x3D;user1)(cn&#x3D;%s)))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>过滤某个组<pre class="line-numbers language-none"><code class="language-none">(&amp;(objectClass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>过滤多个组<pre class="line-numbers language-none"><code class="language-none">(&amp;(objectclass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)(memberof&#x3D;CN&#x3D;example-dev-admin,OU&#x3D;example-dev,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>过滤特定用户和特定组<pre class="line-numbers language-none"><code class="language-none">(&amp;(objectclass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(|(cn&#x3D;user4.li))(|(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)(memberof&#x3D;CN&#x3D;example-dev-admin,OU&#x3D;example-dev,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net))(cn&#x3D;%s)))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>错误<pre class="line-numbers language-none"><code class="language-none">(&amp;(objectClass&#x3D;inetOrgPerson)(&#123;&#123;.UserAttr&#125;&#125;&#x3D;&#123;&#123;.Username&#125;&#125;)(|(cn&#x3D;user2)(cn&#x3D;user1))(cn&#x3D;%s))  会失败以下 1 条，写在group filter的时候会出现不能过滤，所有人都可以登录(&amp;(objectclass&#x3D;inetOrgPerson)(|(memberof&#x3D;CN&#x3D;example-sys-admin,OU&#x3D;example-sys,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)(memberof&#x3D;CN&#x3D;example-dev-admin,OU&#x3D;example-dev,OU&#x3D;example,DC&#x3D;example,DC&#x3D;net)))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenLDAP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是一封信</title>
      <link href="/ops_blog/2023/10/18/zhe-shi-yi-feng-xin/"/>
      <url>/ops_blog/2023/10/18/zhe-shi-yi-feng-xin/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=870442734&bvid=BV1VV4y1a7Yx&cid=1183049893&p=1" scrolling="yes" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><ul><li><p>邹漂亮，龙美丽好想你呀。</p></li><li><p>此后的你，便是我生命中的一系列的数字了。  </p></li><li><p>2023-10-2、2018-1-13、968746</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Personal </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mylove </tag>
            
            <tag> Personal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>deploy_hexo</title>
      <link href="/ops_blog/2023/10/15/deploy-hexo/"/>
      <url>/ops_blog/2023/10/15/deploy-hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装-node-js、npm"><a href="#1-安装-node-js、npm" class="headerlink" title="1. 安装 node.js、npm"></a>1. 安装 node.js、npm</h2><ul><li>过程如此，但是包需要重新找，网页通过这个链接去官网然后复制下载链接即可，不然会安装hexo失败</li><li>由于node.js默认配置了npm，所以不用单独下载和配置npm了，只要node.js安装成功，那么是直接可以使用npm命令来下载moudle的<pre class="line-numbers language-none"><code class="language-none">wget https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;v12.16.1&#x2F;node-v12.16.1-linux-x64.tar.xztar tvf .&#x2F;node-v12.16.1-linux-x64.tar.xz    # 查看压缩结构tar xvf .&#x2F;node-v12.16.1-linux-x64.tar.xz -C &#x2F;usr&#x2F;local&#x2F;ln -s &#x2F;usr&#x2F;local&#x2F;node-v12.16.1-linux-x64&#x2F;bin&#x2F;node &#x2F;usr&#x2F;bin&#x2F;nodeln -s &#x2F;usr&#x2F;local&#x2F;node-v12.16.1-linux-x64&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;bin&#x2F;npm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="2-安装-hexo-并初始化"><a href="#2-安装-hexo-并初始化" class="headerlink" title="2. 安装 hexo 并初始化"></a>2. 安装 hexo 并初始化</h2><ul><li>个人执行初始化失败，检查发现原因是hexo版本和nodejs版本不兼容，升级nodejs<pre class="line-numbers language-none"><code class="language-none">npm install hexo-cli -gln -s &#x2F;usr&#x2F;local&#x2F;node-v12.16.1-linux-x64&#x2F;bin&#x2F;hexo &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexohexo init blog  # 这需要是一个你自己设计好的路径下的空文件夹hexo server  # 测试运行本工具，发布在本服务器4000端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="3-hexo-主题"><a href="#3-hexo-主题" class="headerlink" title="3. hexo 主题"></a>3. hexo 主题</h2><p>因为某个站长接触到hexo，然后再对比之后觉得这个站点框架比较好，所以选择这个hexo，并直接根据这个帖子使用了这个<a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao">主题</a></p><h2 id="4-上传-github"><a href="#4-上传-github" class="headerlink" title="4. 上传 github"></a>4. 上传 github</h2><ul><li>同步到 github 远程仓库的步骤，请找专项的帖子，略</li><li>有个坑，themes 下的主题文件夹因为是 git clone 到这个路径的，其中有 ‘.git’ 目录信息，不能正常上传，<a href="https://blog.csdn.net/liaoweilin0529/article/details/113650333">解决办法</a>来源于这位</li></ul><h2 id="5-部署到-gh-pages-分支"><a href="#5-部署到-gh-pages-分支" class="headerlink" title="5. 部署到 gh-pages 分支"></a>5. 部署到 gh-pages 分支</h2><ul><li>借助了 hexo 的脚本和工具，将实现前端代码存在gh-pages分支，利用 github 的 pages 功能即可发布这个站点。源码和前端代码分别存在 main 和 gh-pages 分支</li><li>一键部署的<a href="https://hexo.io/zh-cn/docs/one-command-deployment.html">参考</a></li><li>再次测试图片应该放张图片的，但是github可以渲染，博客不能。。。。。。作为下一步需要搞懂的地方</li></ul><h2 id="6-访问"><a href="#6-访问" class="headerlink" title="6. 访问"></a>6. 访问</h2><p>去 action 查看url</p><h2 id="7-测试维护和书写流程"><a href="#7-测试维护和书写流程" class="headerlink" title="7. 测试维护和书写流程"></a>7. 测试维护和书写流程</h2><ul><li>新建一篇blog<pre class="line-numbers language-none"><code class="language-none">hexo new &quot;filename&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>测试过程：<br>这是一篇测试用的帖子，学习使用 hexo、书写帖子、发布内容<br>目前出现的问题是没有内容<br>需要搞懂书写之后，应该怎么样推送或者命令发布<br>测试1，修改然后 clean &amp;&amp; deploy，然后push<br>测试2，先push 然后deploy<br>还要修改音乐模块<br>同步之后修改不成功<br>测试这次修改的流程，直接push—-main分支已经变化，但是gh-pages没有部署成功<br>修改+ clean + deploy —-网页已经变化，gh-pages变化，main分支代码无变化<br>修改+ clean + deploy  + push —- 完整的正常流程（源代码在main分支保存并修改，deploy将生成前端代码并发布到gh-pages）</p><h2 id="8-解决代码行号和复制功能的错乱。"><a href="#8-解决代码行号和复制功能的错乱。" class="headerlink" title="8. 解决代码行号和复制功能的错乱。"></a>8. 解决代码行号和复制功能的错乱。</h2><ul><li>previous: all commented</li><li>current as follows: if noneffective ,try <code>npm uninstall hexo-prism-plugin</code> first ; after changed the <code>_config.yml</code> , delete the <code>.deploy_git</code> category (using for gitpage) ; the repost all the article.</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="迁移到新机器-ubuntu-2004-安装node-npm"><a href="#迁移到新机器-ubuntu-2004-安装node-npm" class="headerlink" title="迁移到新机器 ubuntu 2004 安装node npm"></a>迁移到新机器 ubuntu 2004 安装node npm</h3><h4 id="使用nvm"><a href="#使用nvm" class="headerlink" title="使用nvm"></a>使用nvm</h4><p>nvm 命令安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh <span class="token operator">|</span> <span class="token function">bash</span><span class="token comment"># 申明一下变量，这是执行上述脚本之后在终端的输出提示</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">NVM_DIR</span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$HOME</span>/.nvm"</span><span class="token punctuation">[</span> <span class="token parameter variable">-s</span> <span class="token string">"<span class="token variable">$NVM_DIR</span>/nvm.sh"</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>. <span class="token string">"<span class="token variable">$NVM_DIR</span>/nvm.sh"</span>  <span class="token comment"># This loads nvm</span><span class="token punctuation">[</span> <span class="token parameter variable">-s</span> <span class="token string">"<span class="token variable">$NVM_DIR</span>/bash_completion"</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>. <span class="token string">"<span class="token variable">$NVM_DIR</span>/bash_completion"</span>nvm <span class="token parameter variable">--version</span> <span class="token comment"># 将输出安装版本</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>nvm 安装nodejs</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># download and install Node.js</span>nvm <span class="token function">install</span> <span class="token number">18</span><span class="token comment"># verifies the right Node.js version is in the environment</span><span class="token function">node</span> <span class="token parameter variable">-v</span> <span class="token comment"># should print `v18.20.2`</span><span class="token comment"># verifies the right NPM version is in the environment</span><span class="token function">npm</span> <span class="token parameter variable">-v</span> <span class="token comment"># should print `10.5.0`</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提示 npm 需要升级<br><code>npm install -g npm@10.5.2</code></p><p>安装 hexo 有关包：</p><pre class="line-numbers language-none"><code class="language-none"> npm install hexo-cli -g[root@oncloud ops_blog]# npm ls -depth 0npm WARN npm npm does not support Node.js v16.18.1npm WARN npm You should probably upgrade to a newer version of node as wenpm WARN npm can&#39;t make any promises that npm will work with this version.npm WARN npm Supported releases of Node.js are the latest release of 6, 8, 9, 10, 11, 12, 13.npm WARN npm You can find the latest version at https:&#x2F;&#x2F;nodejs.org&#x2F;hexo-site@0.0.0 &#x2F;root&#x2F;project&#x2F;ops_blog├── hexo@6.3.0├── hexo-deployer-git@4.0.0├── hexo-generator-archive@2.0.0├── hexo-generator-category@2.0.0├── hexo-generator-index@3.0.0├── hexo-generator-search@2.4.3├── hexo-generator-tag@2.0.0├── hexo-markmap@1.2.5├── hexo-permalink-pinyin@1.1.0├── hexo-renderer-ejs@2.0.0├── hexo-renderer-marked@6.1.1├── hexo-renderer-stylus@3.0.0├── hexo-server@3.0.0├── hexo-theme-landscape@1.0.0└── hexo-wordcount@6.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>** hexo deploy  出现错误 **</p><pre class="line-numbers language-none"><code class="language-none">Error: Spawn failed    at ChildProcess.&lt;anonymous&gt; (&#x2F;home&#x2F;user&#x2F;project&#x2F;ops_blog&#x2F;node_modules&#x2F;hexo-util&#x2F;lib&#x2F;spawn.js:51:21)    at ChildProcess.emit (node:events:517:28)    at ChildProcess._handle.onexit (node:internal&#x2F;child_process:292:12)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>本次的解决办法是，将 .deploy_git 删除，重新 deploy 发布 post 即可。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
